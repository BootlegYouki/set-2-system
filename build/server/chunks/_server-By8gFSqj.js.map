{"version":3,"file":"_server-By8gFSqj.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/archived-students/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url, request }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    if (user.account_type !== \"admin\") {\n      return json({ error: \"Admin access required\" }, { status: 403 });\n    }\n    const limit = parseInt(url.searchParams.get(\"limit\") || \"50\");\n    const search = url.searchParams.get(\"search\") || \"\";\n    const gradeLevel = url.searchParams.get(\"gradeLevel\") || \"\";\n    const gender = url.searchParams.get(\"gender\") || \"\";\n    const db = await connectToDatabase();\n    const usersCollection = db.collection(\"users\");\n    const query = {\n      account_type: \"student\",\n      status: \"archived\"\n    };\n    if (search) {\n      query.$or = [\n        { full_name: { $regex: search, $options: \"i\" } },\n        { account_number: { $regex: search, $options: \"i\" } },\n        { first_name: { $regex: search, $options: \"i\" } },\n        { last_name: { $regex: search, $options: \"i\" } }\n      ];\n    }\n    if (gradeLevel) {\n      query.grade_level = gradeLevel;\n    }\n    if (gender) {\n      query.gender = gender;\n    }\n    const archivedStudents = await usersCollection.find(query).sort({ archived_at: -1 }).limit(limit).toArray();\n    const formattedStudents = archivedStudents.map((student) => ({\n      id: student._id.toString(),\n      name: student.full_name,\n      firstName: student.first_name,\n      lastName: student.last_name,\n      middleInitial: student.middle_initial,\n      email: student.email,\n      number: student.account_number,\n      gradeLevel: student.grade_level,\n      birthdate: student.birthdate,\n      address: student.address,\n      age: student.age,\n      guardian: student.guardian,\n      contactNumber: student.contact_number,\n      gender: student.gender,\n      archivedDate: student.archived_at ? new Date(student.archived_at).toLocaleDateString(\"en-US\") : \"\",\n      createdDate: new Date(student.created_at).toLocaleDateString(\"en-US\"),\n      updatedDate: new Date(student.updated_at).toLocaleDateString(\"en-US\"),\n      status: \"archived\"\n    }));\n    return json({ students: formattedStudents });\n  } catch (error) {\n    console.error(\"Error fetching archived students:\", error);\n    if (error.message === \"Authentication required\" || error.message === \"Admin access required\") {\n      return json({ error: error.message }, { status: error.message === \"Authentication required\" ? 401 : 403 });\n    }\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to fetch archived students\" }, { status: 500 });\n  }\n}\nasync function PUT({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    if (user.account_type !== \"admin\") {\n      return json({ error: \"Admin access required\" }, { status: 403 });\n    }\n    const { id } = await request.json();\n    if (!id) {\n      return json({ error: \"Student ID is required\" }, { status: 400 });\n    }\n    const db = await connectToDatabase();\n    const usersCollection = db.collection(\"users\");\n    const student = await usersCollection.findOne({\n      _id: new ObjectId(id),\n      account_type: \"student\"\n    });\n    if (!student) {\n      return json({ error: \"Student not found\" }, { status: 404 });\n    }\n    if (student.status !== \"archived\") {\n      return json({ error: \"Student is not archived\" }, { status: 400 });\n    }\n    const updateResult = await usersCollection.updateOne(\n      { _id: new ObjectId(id) },\n      {\n        $set: {\n          status: \"active\",\n          updated_at: /* @__PURE__ */ new Date()\n        },\n        $unset: {\n          archived_at: \"\"\n        }\n      }\n    );\n    if (updateResult.matchedCount === 0) {\n      return json({ error: \"Student not found\" }, { status: 404 });\n    }\n    const restoredStudent = await usersCollection.findOne({ _id: new ObjectId(id) });\n    try {\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"account_restored\",\n        user,\n        {\n          account_type: \"student\",\n          full_name: restoredStudent.full_name\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging student restoration activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: `Student ${restoredStudent.full_name} (${restoredStudent.account_number}) has been restored from archive`,\n      student: {\n        id: restoredStudent._id.toString(),\n        name: restoredStudent.full_name,\n        number: restoredStudent.account_number\n      }\n    });\n  } catch (error) {\n    console.error(\"Error restoring student:\", error);\n    if (error.message === \"Authentication required\" || error.message === \"Admin access required\") {\n      return json({ error: error.message }, { status: error.message === \"Authentication required\" ? 401 : 403 });\n    }\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to restore student from archive\" }, { status: 500 });\n  }\n}\nexport {\n  GET,\n  PUT\n};\n"],"names":[],"mappings":"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"}