{"version":3,"file":"_server-mKmT9RY7.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/subjects/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { c as client } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url }) {\n  try {\n    const action = url.searchParams.get(\"action\");\n    const searchTerm = url.searchParams.get(\"search\") || \"\";\n    const gradeLevel = url.searchParams.get(\"grade_level\");\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const subjectsCollection = db.collection(\"subjects\");\n    const departmentsCollection = db.collection(\"departments\");\n    if (action === \"available-subjects\") {\n      let filter2 = {};\n      if (gradeLevel && gradeLevel !== \"\") {\n        filter2.grade_level = parseInt(gradeLevel);\n      }\n      const subjects2 = await subjectsCollection.find(filter2).sort({ name: 1 }).toArray();\n      const subjectsWithDepartments2 = await Promise.all(\n        subjects2.map(async (subject) => {\n          let department = null;\n          if (subject.department_id) {\n            department = await departmentsCollection.findOne({ _id: new ObjectId(subject.department_id) });\n          }\n          return {\n            id: subject._id.toString(),\n            name: subject.name,\n            code: subject.code,\n            grade_level: subject.grade_level,\n            gradeLevel: `Grade ${subject.grade_level}`,\n            department_id: subject.department_id,\n            department_name: department?.name || null,\n            department_code: department?.code || null\n          };\n        })\n      );\n      return json({\n        success: true,\n        data: subjectsWithDepartments2\n      });\n    }\n    let filter = {};\n    if (searchTerm) {\n      filter.$or = [\n        { name: { $regex: searchTerm, $options: \"i\" } },\n        { code: { $regex: searchTerm, $options: \"i\" } }\n      ];\n    }\n    if (gradeLevel && gradeLevel !== \"\") {\n      filter.grade_level = parseInt(gradeLevel);\n    }\n    const subjects = await subjectsCollection.find(filter).sort({ created_at: -1 }).toArray();\n    const subjectsWithDepartments = await Promise.all(\n      subjects.map(async (subject) => {\n        let department = null;\n        if (subject.department_id) {\n          department = await departmentsCollection.findOne({ _id: new ObjectId(subject.department_id) });\n        }\n        return {\n          id: subject._id.toString(),\n          name: subject.name,\n          code: subject.code,\n          grade_level: subject.grade_level,\n          gradeLevel: `Grade ${subject.grade_level}`,\n          department_id: subject.department_id,\n          department_name: department?.name || null,\n          department_code: department?.code || null,\n          icon: \"book\",\n          createdDate: new Date(subject.created_at).toLocaleDateString(\"en-US\"),\n          updatedDate: new Date(subject.updated_at).toLocaleDateString(\"en-US\")\n        };\n      })\n    );\n    return json({\n      success: true,\n      data: subjectsWithDepartments\n    });\n  } catch (error) {\n    console.error(\"Error fetching subjects:\", error);\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({\n        success: false,\n        message: \"Database connection failed\"\n      }, { status: 503 });\n    }\n    return json({\n      success: false,\n      message: \"Failed to fetch subjects: \" + error.message\n    }, { status: 500 });\n  }\n}\nasync function POST({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    const { name, code, gradeLevel, department_id } = data;\n    if (!name || !code || !gradeLevel) {\n      return json({\n        success: false,\n        message: \"Name, code, and grade level are required\"\n      }, { status: 400 });\n    }\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const subjectsCollection = db.collection(\"subjects\");\n    const existingSubject = await subjectsCollection.findOne({ code });\n    if (existingSubject) {\n      return json({\n        success: false,\n        message: \"Subject code already exists\"\n      }, { status: 409 });\n    }\n    const newSubject = {\n      name: name.trim(),\n      code: code.trim().toUpperCase(),\n      grade_level: parseInt(gradeLevel),\n      department_id: department_id || null,\n      created_at: /* @__PURE__ */ new Date(),\n      updated_at: /* @__PURE__ */ new Date()\n    };\n    const result = await subjectsCollection.insertOne(newSubject);\n    try {\n      const user = await getUserFromRequest(request);\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"subject_created\",\n        user,\n        {\n          name: newSubject.name,\n          code: newSubject.code,\n          grade_level: newSubject.grade_level\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging subject creation activity:\", logError);\n    }\n    const formattedSubject = {\n      id: result.insertedId.toString(),\n      name: newSubject.name,\n      code: newSubject.code,\n      gradeLevel: `Grade ${newSubject.grade_level}`,\n      createdDate: new Date(newSubject.created_at).toLocaleDateString(\"en-US\"),\n      updatedDate: new Date(newSubject.updated_at).toLocaleDateString(\"en-US\")\n    };\n    return json({\n      success: true,\n      message: `Subject \"${name}\" created successfully`,\n      data: formattedSubject\n    }, { status: 201 });\n  } catch (error) {\n    console.error(\"Error creating subject:\", error);\n    if (error.code === 11e3) {\n      return json({\n        success: false,\n        message: \"Subject code already exists\"\n      }, { status: 409 });\n    }\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({\n        success: false,\n        message: \"Database connection failed\"\n      }, { status: 503 });\n    }\n    return json({\n      success: false,\n      message: \"Failed to create subject: \" + error.message\n    }, { status: 500 });\n  }\n}\nasync function PUT({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    const { id, name, code, gradeLevel, department_id } = data;\n    if (!id || !name || !code || !gradeLevel) {\n      return json({\n        success: false,\n        message: \"ID, name, code, and grade level are required\"\n      }, { status: 400 });\n    }\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const subjectsCollection = db.collection(\"subjects\");\n    const existingSubject = await subjectsCollection.findOne({ _id: new ObjectId(id) });\n    if (!existingSubject) {\n      return json({\n        success: false,\n        message: \"Subject not found\"\n      }, { status: 404 });\n    }\n    if (code !== existingSubject.code) {\n      const codeExists = await subjectsCollection.findOne({\n        code,\n        _id: { $ne: new ObjectId(id) }\n      });\n      if (codeExists) {\n        return json({\n          success: false,\n          message: \"Subject code already exists\"\n        }, { status: 409 });\n      }\n    }\n    const updateData = {\n      name: name.trim(),\n      code: code.trim().toUpperCase(),\n      grade_level: parseInt(gradeLevel),\n      department_id: department_id || null,\n      updated_at: /* @__PURE__ */ new Date()\n    };\n    const result = await subjectsCollection.updateOne(\n      { _id: new ObjectId(id) },\n      { $set: updateData }\n    );\n    if (result.matchedCount === 0) {\n      return json({\n        success: false,\n        message: \"Subject not found\"\n      }, { status: 404 });\n    }\n    try {\n      const user = await getUserFromRequest(request);\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"subject_updated\",\n        user,\n        {\n          id,\n          name: updateData.name,\n          code: updateData.code,\n          grade_level: updateData.grade_level,\n          previous_name: existingSubject.name,\n          previous_code: existingSubject.code,\n          previous_grade_level: existingSubject.grade_level\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging subject update activity:\", logError);\n    }\n    const updatedSubject = await subjectsCollection.findOne({ _id: new ObjectId(id) });\n    let department = null;\n    if (updatedSubject.department_id) {\n      const departmentsCollection = db.collection(\"departments\");\n      department = await departmentsCollection.findOne({ _id: new ObjectId(updatedSubject.department_id) });\n    }\n    const formattedSubject = {\n      id: updatedSubject._id.toString(),\n      name: updatedSubject.name,\n      code: updatedSubject.code,\n      grade_level: updatedSubject.grade_level,\n      gradeLevel: `Grade ${updatedSubject.grade_level}`,\n      department_id: updatedSubject.department_id,\n      department_name: department?.name || null,\n      department_code: department?.code || null,\n      icon: \"book\",\n      createdDate: new Date(updatedSubject.created_at).toLocaleDateString(\"en-US\"),\n      updatedDate: new Date(updatedSubject.updated_at).toLocaleDateString(\"en-US\")\n    };\n    return json({\n      success: true,\n      message: `Subject \"${name}\" updated successfully`,\n      data: formattedSubject\n    });\n  } catch (error) {\n    console.error(\"Error updating subject:\", error);\n    if (error.code === 11e3) {\n      return json({\n        success: false,\n        message: \"Subject code already exists\"\n      }, { status: 409 });\n    }\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({\n        success: false,\n        message: \"Database connection failed\"\n      }, { status: 503 });\n    }\n    return json({\n      success: false,\n      message: \"Failed to update subject: \" + error.message\n    }, { status: 500 });\n  }\n}\nasync function DELETE({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    const { id } = data;\n    if (!id) {\n      return json({\n        success: false,\n        message: \"Subject ID is required\"\n      }, { status: 400 });\n    }\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const subjectsCollection = db.collection(\"subjects\");\n    const existingSubject = await subjectsCollection.findOne({ _id: new ObjectId(id) });\n    if (!existingSubject) {\n      return json({\n        success: false,\n        message: \"Subject not found\"\n      }, { status: 404 });\n    }\n    const result = await subjectsCollection.deleteOne({ _id: new ObjectId(id) });\n    if (result.deletedCount === 0) {\n      return json({\n        success: false,\n        message: \"Subject not found\"\n      }, { status: 404 });\n    }\n    try {\n      const user = await getUserFromRequest(request);\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"subject_deleted\",\n        user,\n        {\n          subject_code: existingSubject.code,\n          subject_name: existingSubject.name,\n          subject_id: id\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging subject deletion activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: `Subject \"${existingSubject.name} (${existingSubject.code})\" has been removed successfully`\n    });\n  } catch (error) {\n    console.error(\"Error deleting subject:\", error);\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({\n        success: false,\n        message: \"Database connection failed\"\n      }, { status: 503 });\n    }\n    return json({\n      success: false,\n      message: \"Failed to delete subject: \" + error.message\n    }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}