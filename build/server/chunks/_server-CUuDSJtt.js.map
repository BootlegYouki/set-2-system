{"version":3,"file":"_server-CUuDSJtt.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/student-grades/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nasync function getCurrentSchoolYear(db) {\n  try {\n    const schoolYearSetting = await db.collection(\"admin_settings\").findOne({\n      setting_key: \"current_school_year\"\n    });\n    return schoolYearSetting?.setting_value || \"2025-2026\";\n  } catch (error) {\n    console.error(\"Error fetching current school year:\", error);\n    return \"2025-2026\";\n  }\n}\nasync function GET({ url, request }) {\n  try {\n    const db = await connectToDatabase();\n    const student_id = url.searchParams.get(\"student_id\");\n    const school_year = url.searchParams.get(\"school_year\") || await getCurrentSchoolYear(db);\n    const quarter = parseInt(url.searchParams.get(\"quarter\")) || 1;\n    if (!student_id) {\n      return json({\n        success: false,\n        error: \"Student ID is required\"\n      }, { status: 400 });\n    }\n    if (!ObjectId.isValid(student_id)) {\n      return json({\n        success: false,\n        error: \"Invalid student ID format\"\n      }, { status: 400 });\n    }\n    const student = await db.collection(\"users\").findOne({\n      _id: new ObjectId(student_id),\n      account_type: \"student\"\n    });\n    if (!student) {\n      return json({\n        success: false,\n        error: \"Student not found\"\n      }, { status: 404 });\n    }\n    const studentEnrollment = await db.collection(\"section_students\").findOne({\n      student_id: new ObjectId(student_id),\n      status: \"active\"\n    });\n    let section = null;\n    let studentGradeLevel = null;\n    let sectionSchoolYear = school_year;\n    if (studentEnrollment) {\n      section = await db.collection(\"sections\").findOne({\n        _id: studentEnrollment.section_id,\n        status: \"active\"\n      });\n      if (section) {\n        studentGradeLevel = section.grade_level;\n        sectionSchoolYear = section.school_year || school_year;\n      }\n    }\n    if (!studentGradeLevel) {\n      studentGradeLevel = parseInt(student.grade_level);\n      if (!studentGradeLevel) {\n        return json({\n          success: false,\n          error: \"Student grade level not found\"\n        }, { status: 404 });\n      }\n    }\n    const gradesSchoolYear = school_year;\n    const allSubjects = await db.collection(\"subjects\").find({\n      grade_level: studentGradeLevel\n    }).toArray();\n    let schedules = [];\n    if (section) {\n      schedules = await db.collection(\"schedules\").find({\n        section_id: section._id,\n        schedule_type: \"subject\",\n        school_year: sectionSchoolYear\n      }).toArray();\n    }\n    const subjectTeacherMap = {};\n    schedules.forEach((schedule) => {\n      if (schedule.subject_id && schedule.teacher_id) {\n        subjectTeacherMap[schedule.subject_id.toString()] = schedule.teacher_id;\n      }\n    });\n    const existingGrades = await db.collection(\"grades\").find({\n      student_id: new ObjectId(student_id),\n      school_year: gradesSchoolYear,\n      quarter\n    }).toArray();\n    const gradeMap = {};\n    existingGrades.forEach((grade) => {\n      gradeMap[grade.subject_id.toString()] = grade;\n    });\n    const teacherIds = Object.values(subjectTeacherMap).filter((id) => id);\n    const teachers = await db.collection(\"users\").find({\n      _id: { $in: teacherIds }\n    }).toArray();\n    const teacherMap = {};\n    teachers.forEach((teacher) => {\n      teacherMap[teacher._id.toString()] = teacher;\n    });\n    const grades = allSubjects.map((subject) => {\n      const subjectId = subject._id.toString();\n      const teacherId = subjectTeacherMap[subjectId];\n      const teacher = teacherId ? teacherMap[teacherId.toString()] : null;\n      const gradeData = gradeMap[subjectId];\n      const isVerified = gradeData && (gradeData.verified === true || gradeData.verification?.verified === true);\n      return {\n        _id: gradeData?._id || new ObjectId(),\n        subject_id: subject._id,\n        subject_name: subject.name,\n        subject_code: subject.code,\n        teacher_name: teacher ? teacher.full_name : \"No teacher\",\n        final_grade: isVerified ? gradeData.averages?.final_grade || 0 : 0,\n        written_work_avg: isVerified ? gradeData.averages?.written_work || 0 : 0,\n        performance_tasks_avg: isVerified ? gradeData.averages?.performance_tasks || 0 : 0,\n        quarterly_assessment_avg: isVerified ? gradeData.averages?.quarterly_assessment || 0 : 0,\n        // Include individual score arrays for detailed breakdown (show even if not verified)\n        written_work_scores: gradeData ? gradeData.written_work || [] : [],\n        performance_tasks_scores: gradeData ? gradeData.performance_tasks || [] : [],\n        quarterly_assessment_scores: gradeData ? gradeData.quarterly_assessment || [] : [],\n        verified: isVerified,\n        verified_at: isVerified ? gradeData.verification?.verified_at || gradeData.verified_at : null,\n        verified_by: isVerified ? gradeData.verification?.verified_by || gradeData.verified_by : null,\n        has_teacher: !!teacher,\n        has_grade: !!gradeData\n      };\n    }).sort((a, b) => a.subject_name.localeCompare(b.subject_name));\n    const totalSubjects = grades.length;\n    const subjectsForAverage = grades.filter((grade) => typeof grade.final_grade === \"number\" && grade.final_grade > 0);\n    const countedSubjects = subjectsForAverage.length;\n    const overallAverage = countedSubjects > 0 ? Math.round(subjectsForAverage.reduce((sum, grade) => sum + (grade.final_grade || 0), 0) / countedSubjects * 10) / 10 : 0;\n    const formattedGrades = grades.map((grade, index) => ({\n      id: grade._id.toString(),\n      subject_id: grade.subject_id.toString(),\n      name: grade.subject_name || \"Unknown Subject\",\n      code: grade.subject_code || \"\",\n      teacher: grade.teacher_name || \"No teacher assigned\",\n      numericGrade: grade.final_grade || 0,\n      writtenWork: grade.written_work_avg || 0,\n      performanceTasks: grade.performance_tasks_avg || 0,\n      quarterlyAssessment: grade.quarterly_assessment_avg || 0,\n      // Include individual score arrays for breakdown\n      writtenWorkScores: grade.written_work_scores || [],\n      performanceTasksScores: grade.performance_tasks_scores || [],\n      quarterlyAssessmentScores: grade.quarterly_assessment_scores || [],\n      verified: grade.verified || false,\n      verifiedAt: grade.verified_at,\n      verifiedBy: grade.verified_by\n    }));\n    return json({\n      success: true,\n      data: {\n        grades: formattedGrades,\n        statistics: {\n          totalSubjects,\n          countedSubjects,\n          overallAverage,\n          quarter,\n          schoolYear: gradesSchoolYear\n          // Use the grades school year\n        }\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching student grades:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch grades\"\n    }, { status: 500 });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}