{"version":3,"file":"_server-BkDusiOP.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/student-grades/verified/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport \"../../../../../chunks/db.js\";\nimport { v as verifyAuth } from \"../../../../../chunks/auth-helper.js\";\nasync function GET({ url, request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const studentId = url.searchParams.get(\"student_id\");\n    const gradingPeriodId = url.searchParams.get(\"grading_period_id\") || 1;\n    if (!studentId) {\n      return json({ error: \"Student ID is required\" }, { status: 400 });\n    }\n    const sectionQuery = `\n      SELECT \n        s.id as section_id,\n        s.name as section_name,\n        s.grade_level,\n        ss.status\n      FROM sections s\n      JOIN section_students ss ON s.id = ss.section_id\n      WHERE ss.student_id = $1 \n      AND ss.status = 'active'\n      AND s.status = 'active'\n      LIMIT 1\n    `;\n    const sectionResult = await query(sectionQuery, [studentId]);\n    if (sectionResult.rows.length === 0) {\n      return json({ error: \"Student section not found\" }, { status: 404 });\n    }\n    const studentSection = sectionResult.rows[0];\n    const subjectsQuery = `\n      SELECT \n        sub.id,\n        sub.name as subject_name,\n        sub.code as subject_code,\n        COALESCE(\n          (SELECT u.full_name \n           FROM schedules sch \n           JOIN users u ON sch.teacher_id = u.id \n           WHERE sch.subject_id = sub.id \n             AND sch.section_id = $2 \n             AND u.status = 'active' \n           LIMIT 1), \n          'No teacher'\n        ) as teacher_name,\n        fg.final_grade,\n        fg.letter_grade,\n        fg.verified,\n        fg.computed_at\n      FROM subjects sub\n      LEFT JOIN final_grades fg ON (\n        fg.student_id = $1 \n        AND fg.subject_id = sub.id \n        AND fg.section_id = $2\n        AND fg.grading_period_id = $3\n        AND fg.verified = true\n      )\n      WHERE sub.grade_level = $4\n      ORDER BY sub.name\n    `;\n    const subjectsResult = await query(subjectsQuery, [studentId, studentSection.section_id, gradingPeriodId, studentSection.grade_level]);\n    const subjects = subjectsResult.rows.map((row) => ({\n      id: row.id,\n      name: row.subject_name,\n      teacher: row.teacher_name,\n      credits: 3,\n      // Default credits - could be added to subjects table\n      numericGrade: row.final_grade ? parseFloat(row.final_grade) : 0,\n      letterGrade: row.letter_grade || null,\n      verified: row.verified || false,\n      computedAt: row.computed_at\n    }));\n    const verifiedGrades = subjects.filter((subject) => subject.verified && subject.numericGrade > 0);\n    let overallAverage = 0;\n    if (verifiedGrades.length > 0) {\n      const totalPoints = verifiedGrades.reduce((sum, subject) => sum + subject.numericGrade, 0);\n      overallAverage = totalPoints / verifiedGrades.length;\n    }\n    const gradingPeriodQuery = `\n      SELECT name, school_year, start_date, end_date\n      FROM grading_periods\n      WHERE id = $1\n    `;\n    const gradingPeriodResult = await query(gradingPeriodQuery, [gradingPeriodId]);\n    const gradingPeriod = gradingPeriodResult.rows[0] || { name: \"1st Quarter\" };\n    return json({\n      success: true,\n      data: {\n        student: {\n          id: studentId,\n          section: studentSection.section_name,\n          gradeLevel: studentSection.grade_level\n        },\n        gradingPeriod: gradingPeriod.name,\n        subjects,\n        totalSubjects: subjects.length,\n        verifiedSubjects: verifiedGrades.length,\n        overallAverage\n      }\n    });\n  } catch (error) {\n    console.error(\"Error in verified student-grades GET:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}