{"version":3,"file":"_server-CcSKCUbp.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/forgot-password/verify-code/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { c as client } from \"../../../../../chunks/db.js\";\nasync function POST({ request }) {\n  try {\n    const { resetToken, code } = await request.json();\n    if (!resetToken || !code) {\n      return json({ error: \"Reset token and code are required\" }, { status: 400 });\n    }\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const usersCollection = db.collection(\"users\");\n    const user = await usersCollection.findOne({\n      password_reset_token: resetToken,\n      $or: [\n        { status: { $exists: false } },\n        { status: \"active\" }\n      ]\n    });\n    if (!user) {\n      return json({ error: \"Invalid or expired reset token\" }, { status: 400 });\n    }\n    if (!user.password_reset_expires || /* @__PURE__ */ new Date() > new Date(user.password_reset_expires)) {\n      await usersCollection.updateOne(\n        { _id: user._id },\n        {\n          $unset: {\n            password_reset_code: \"\",\n            password_reset_token: \"\",\n            password_reset_expires: \"\",\n            password_reset_attempts: \"\"\n          }\n        }\n      );\n      return json({ error: \"Reset code has expired. Please request a new one.\" }, { status: 400 });\n    }\n    const attempts = user.password_reset_attempts || 0;\n    if (attempts >= 5) {\n      await usersCollection.updateOne(\n        { _id: user._id },\n        {\n          $unset: {\n            password_reset_code: \"\",\n            password_reset_token: \"\",\n            password_reset_expires: \"\",\n            password_reset_attempts: \"\"\n          }\n        }\n      );\n      return json({ error: \"Too many failed attempts. Please request a new reset code.\" }, { status: 400 });\n    }\n    if (user.password_reset_code !== code) {\n      await usersCollection.updateOne(\n        { _id: user._id },\n        {\n          $set: {\n            password_reset_attempts: attempts + 1\n          }\n        }\n      );\n      return json({\n        error: \"Invalid verification code\",\n        attemptsRemaining: 5 - (attempts + 1)\n      }, { status: 400 });\n    }\n    return json({\n      success: true,\n      message: \"Code verified successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error verifying reset code:\", error);\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to verify code\" }, { status: 500 });\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}