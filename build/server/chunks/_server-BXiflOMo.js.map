{"version":3,"file":"_server-BXiflOMo.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/ai-grade-analysis/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport dotenv from \"dotenv\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\ndotenv.config();\nasync function POST({ request }) {\n  try {\n    const { studentId, quarter, schoolYear } = await request.json();\n    if (!studentId) {\n      return json({ error: \"Missing student ID\" }, { status: 400 });\n    }\n    const db = await connectToDatabase();\n    const student = await db.collection(\"users\").findOne({ _id: new ObjectId(studentId) });\n    if (!student) {\n      return json({ error: \"Student not found\" }, { status: 404 });\n    }\n    const gradesQuery = {\n      student_id: new ObjectId(studentId),\n      verified: true\n      // Only fetch verified grades\n    };\n    if (quarter) gradesQuery.quarter = quarter;\n    if (schoolYear) gradesQuery.school_year = schoolYear;\n    const studentGrades = await db.collection(\"grades\").find(gradesQuery).toArray();\n    if (studentGrades.length === 0) {\n      return json({ error: \"No grades found for this student\" }, { status: 404 });\n    }\n    const gradeAnalysisData = await prepareGradeDataFromDB(db, student, studentGrades);\n    const prompt = createAnalysisPrompt(gradeAnalysisData);\n    const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${process.env.OPENROUTER_AI_KEY}`,\n        \"HTTP-Referer\": \"\",\n        \"X-Title\": \"\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        model: process.env.AI_MODEL,\n        messages: [\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        max_tokens: 2e3,\n        temperature: 0.7,\n        stream: true\n        // Enable streaming\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`OpenRouter API error: ${response.status}`);\n    }\n    const stream = new ReadableStream({\n      async start(controller) {\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n        try {\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) {\n              controller.close();\n              break;\n            }\n            const chunk = decoder.decode(value, { stream: true });\n            const lines = chunk.split(\"\\n\").filter((line) => line.trim() !== \"\");\n            for (const line of lines) {\n              if (line.startsWith(\"data: \")) {\n                const data = line.slice(6);\n                if (data === \"[DONE]\") {\n                  continue;\n                }\n                try {\n                  const parsed = JSON.parse(data);\n                  const content = parsed.choices[0]?.delta?.content;\n                  if (content) {\n                    controller.enqueue(new TextEncoder().encode(content));\n                  }\n                } catch (e) {\n                }\n              }\n            }\n          }\n        } catch (error) {\n          controller.error(error);\n        }\n      }\n    });\n    return new Response(stream, {\n      headers: {\n        \"Content-Type\": \"text/plain; charset=utf-8\",\n        \"Cache-Control\": \"no-cache\",\n        \"Connection\": \"keep-alive\"\n      }\n    });\n  } catch (error) {\n    console.error(\"AI Grade Analysis Error:\", error);\n    return json({\n      error: \"Failed to generate AI analysis\",\n      details: error.message\n    }, { status: 500 });\n  }\n}\nasync function prepareGradeDataFromDB(db, student, studentGrades) {\n  const section = student.section_id ? await db.collection(\"sections\").findOne({ _id: new ObjectId(student.section_id) }) : null;\n  const totalGrades = studentGrades.reduce((sum, grade) => sum + (grade.averages?.final_grade || 0), 0);\n  const overallAverage = studentGrades.length > 0 ? totalGrades / studentGrades.length : 0;\n  const sectionStudents = section ? await db.collection(\"section_students\").find({ section_id: new ObjectId(student.section_id) }).toArray() : [];\n  const subjectBreakdown = [];\n  for (const grade of studentGrades) {\n    const subject = await db.collection(\"subjects\").findOne({ _id: new ObjectId(grade.subject_id) });\n    const teacher = await db.collection(\"users\").findOne({ _id: new ObjectId(grade.teacher_id) });\n    const gradeConfig = await db.collection(\"grade_configurations\").findOne({\n      section_id: new ObjectId(grade.section_id),\n      subject_id: new ObjectId(grade.subject_id),\n      grading_period_id: grade.quarter\n    });\n    const writtenWorkDetails = buildScoreDetails(\n      grade.written_work || [],\n      gradeConfig?.grade_items?.writtenWork || [],\n      \"Written Work\"\n    );\n    const performanceTasksDetails = buildScoreDetails(\n      grade.performance_tasks || [],\n      gradeConfig?.grade_items?.performanceTasks || [],\n      \"Performance Tasks\"\n    );\n    const quarterlyAssessmentDetails = buildScoreDetails(\n      grade.quarterly_assessment || [],\n      gradeConfig?.grade_items?.quarterlyAssessment || [],\n      \"Quarterly Assessment\"\n    );\n    subjectBreakdown.push({\n      name: subject?.name || \"Unknown Subject\",\n      teacher: teacher ? `${teacher.first_name} ${teacher.last_name}` : \"Unknown Teacher\",\n      overallGrade: grade.averages?.final_grade || 0,\n      writtenWorkAverage: grade.averages?.written_work || 0,\n      performanceTasksAverage: grade.averages?.performance_tasks || 0,\n      quarterlyAssessmentAverage: grade.averages?.quarterly_assessment || 0,\n      writtenWorkDetails,\n      performanceTasksDetails,\n      quarterlyAssessmentDetails,\n      verified: grade.verified || false,\n      quarter: grade.quarter,\n      schoolYear: grade.school_year\n    });\n  }\n  return {\n    studentInfo: {\n      name: `${student.first_name} ${student.last_name}`,\n      gradeLevel: student.grade_level || \"N/A\",\n      section: section?.name || \"N/A\",\n      studentId: student.student_id || \"N/A\"\n    },\n    academicPerformance: {\n      overallAverage: Math.round(overallAverage * 100) / 100,\n      totalSubjects: studentGrades.length,\n      totalStudentsInSection: sectionStudents.length || \"N/A\"\n    },\n    subjects: subjectBreakdown\n  };\n}\nfunction buildScoreDetails(scores, gradeItems, category) {\n  if (!scores || scores.length === 0) {\n    return { items: [], average: 0, count: 0 };\n  }\n  const items = scores.map((score, index) => {\n    const item = gradeItems[index];\n    const itemName = item?.name || `${category} ${index + 1}`;\n    const totalScore = item?.totalScore || 100;\n    const percentage = totalScore > 0 ? Math.round(score / totalScore * 100 * 100) / 100 : 0;\n    return {\n      name: itemName,\n      score,\n      totalScore,\n      percentage\n    };\n  });\n  const average = items.reduce((sum, item) => sum + item.percentage, 0) / items.length;\n  return {\n    items,\n    average: Math.round(average * 100) / 100,\n    count: items.length\n  };\n}\nfunction createAnalysisPrompt(gradeData) {\n  const { studentInfo, academicPerformance, subjects } = gradeData;\n  let prompt = `As an educational AI assistant, analyze the academic performance of ${studentInfo.name} (Student ID: ${studentInfo.studentId}), a Grade ${studentInfo.gradeLevel} student in section ${studentInfo.section}.\n\nACADEMIC OVERVIEW:\n- Overall Average: ${academicPerformance.overallAverage}\n- Total Subjects: ${academicPerformance.totalSubjects}\n- Section Size: ${academicPerformance.totalStudentsInSection} students\n\nDETAILED SUBJECT BREAKDOWN:\n`;\n  subjects.forEach((subject) => {\n    prompt += `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📚 ${subject.name} (Teacher: ${subject.teacher})\nQuarter: ${subject.quarter} | School Year: ${subject.schoolYear}\nVerified: ${subject.verified ? \"Yes ✓\" : \"No ✗\"}\n\nOverall Grade: ${subject.overallGrade}\n\nComponent Averages:\n- Written Work: ${subject.writtenWorkAverage}% (${subject.writtenWorkDetails.count} items)\n- Performance Tasks: ${subject.performanceTasksAverage}% (${subject.performanceTasksDetails.count} items)  \n- Quarterly Assessment: ${subject.quarterlyAssessmentAverage}% (${subject.quarterlyAssessmentDetails.count} items)\n`;\n    if (subject.writtenWorkDetails.items.length > 0) {\n      prompt += `\n📝 Written Work Details:\n`;\n      subject.writtenWorkDetails.items.forEach((item, idx) => {\n        prompt += `   ${idx + 1}. ${item.name}: ${item.score}/${item.totalScore} (${item.percentage}%)\n`;\n      });\n    }\n    if (subject.performanceTasksDetails.items.length > 0) {\n      prompt += `\n🎯 Performance Tasks Details:\n`;\n      subject.performanceTasksDetails.items.forEach((item, idx) => {\n        prompt += `   ${idx + 1}. ${item.name}: ${item.score}/${item.totalScore} (${item.percentage}%)\n`;\n      });\n    }\n    if (subject.quarterlyAssessmentDetails.items.length > 0) {\n      prompt += `\n📊 Quarterly Assessment Details:\n`;\n      subject.quarterlyAssessmentDetails.items.forEach((item, idx) => {\n        prompt += `   ${idx + 1}. ${item.name}: ${item.score}/${item.totalScore} (${item.percentage}%)\n`;\n      });\n    }\n  });\n  prompt += `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nBased on the comprehensive grade data above, provide a detailed analysis in the following format:\n\n**STRENGTHS:**\n- Identify the student's strongest subjects and specific assessment types\n- Highlight exceptional individual scores and consistent high performance\n- Point out subjects where all assessment types show excellence\n\n**AREAS FOR IMPROVEMENT:**\n- Identify subjects or specific assessment types that need attention\n- Point out individual low scores and patterns of weakness\n- Note any subjects with inconsistent performance across assessment types\n\n**RECOMMENDATIONS:**\n- Provide specific, actionable advice based on actual score patterns\n- Suggest which specific assessment types (WW/PT/QA) to focus on per subject\n- Recommend study strategies tailored to the identified weaknesses\n- Prioritize subjects that need immediate attention\n\n**PERFORMANCE PATTERNS:**\n- Analyze consistency across different assessment types (Written Work vs Performance Tasks vs Quarterly Assessment)\n- Identify if the student performs better in certain types of assessments\n- Note any subjects showing improvement or decline trends\n- Comment on overall score distribution and variability\n\n**ACTIONABLE INSIGHTS:**\n- Provide 3-5 concrete next steps the student should take\n- Suggest specific areas to review or practice\n- Recommend time allocation across subjects based on current performance\n\nKeep the analysis professional, constructive, and data-driven. Focus on actionable insights based on the actual scores provided. Use a supportive tone while being honest about areas needing improvement. Reference specific scores and subjects when making observations.\nMake the response first-person perspective don't use \"This student\", use \"You\"\n`;\n  return prompt;\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}