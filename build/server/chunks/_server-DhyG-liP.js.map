{"version":3,"file":"_server-DhyG-liP.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/departments/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { c as client } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nasync function GET({ url }) {\n  try {\n    const action = url.searchParams.get(\"action\");\n    await client.connect();\n    const db = client.db(\"set-2-system\");\n    switch (action) {\n      case \"subjects\":\n        const subjectsCollection = db.collection(\"subjects\");\n        const subjectsResult = await subjectsCollection.aggregate([\n          {\n            $lookup: {\n              from: \"departments\",\n              localField: \"department_id\",\n              foreignField: \"_id\",\n              as: \"department\"\n            }\n          },\n          {\n            $unwind: {\n              path: \"$department\",\n              preserveNullAndEmptyArrays: true\n            }\n          },\n          {\n            $project: {\n              id: { $toString: \"$_id\" },\n              name: 1,\n              code: 1,\n              grade_level: 1,\n              created_at: 1,\n              department_id: { $toString: \"$department_id\" },\n              department_name: \"$department.name\",\n              department_code: \"$department.code\"\n            }\n          },\n          {\n            $sort: { grade_level: 1, name: 1 }\n          }\n        ]).toArray();\n        return json({ success: true, data: subjectsResult });\n      case \"teachers\":\n        const usersCollection = db.collection(\"users\");\n        const teacherDepartmentsCollection = db.collection(\"teacher_departments\");\n        const teachersResult = await usersCollection.aggregate([\n          {\n            $match: {\n              account_type: \"teacher\",\n              status: \"active\"\n            }\n          },\n          {\n            $lookup: {\n              from: \"teacher_departments\",\n              localField: \"_id\",\n              foreignField: \"teacher_id\",\n              as: \"teacher_departments\"\n            }\n          },\n          {\n            $lookup: {\n              from: \"departments\",\n              localField: \"teacher_departments.department_id\",\n              foreignField: \"_id\",\n              as: \"departments\"\n            }\n          },\n          {\n            $project: {\n              id: { $toString: \"$_id\" },\n              account_number: 1,\n              first_name: 1,\n              last_name: 1,\n              full_name: 1,\n              email: 1,\n              status: 1,\n              departments: {\n                $map: {\n                  input: \"$departments\",\n                  as: \"dept\",\n                  in: {\n                    id: { $toString: \"$$dept._id\" },\n                    name: \"$$dept.name\",\n                    code: \"$$dept.code\"\n                  }\n                }\n              }\n            }\n          },\n          {\n            $sort: { full_name: 1 }\n          }\n        ]).toArray();\n        return json({ success: true, data: teachersResult });\n      case \"departments\":\n      default:\n        const departmentsCollection = db.collection(\"departments\");\n        const departmentsResult = await departmentsCollection.aggregate([\n          {\n            $lookup: {\n              from: \"subjects\",\n              localField: \"_id\",\n              foreignField: \"department_id\",\n              as: \"subjects\"\n            }\n          },\n          {\n            $lookup: {\n              from: \"teacher_departments\",\n              localField: \"_id\",\n              foreignField: \"department_id\",\n              as: \"teacher_departments\"\n            }\n          },\n          {\n            $lookup: {\n              from: \"users\",\n              localField: \"teacher_departments.teacher_id\",\n              foreignField: \"_id\",\n              as: \"teachers_data\"\n            }\n          },\n          {\n            $project: {\n              id: { $toString: \"$_id\" },\n              name: 1,\n              code: 1,\n              created_at: 1,\n              subjects: {\n                $map: {\n                  input: \"$subjects\",\n                  as: \"subject\",\n                  in: {\n                    id: { $toString: \"$$subject._id\" },\n                    name: \"$$subject.name\",\n                    code: \"$$subject.code\",\n                    grade_level: \"$$subject.grade_level\"\n                  }\n                }\n              },\n              subject_count: { $size: \"$subjects\" },\n              teachers: {\n                $map: {\n                  input: {\n                    $filter: {\n                      input: \"$teachers_data\",\n                      as: \"teacher\",\n                      cond: { $eq: [\"$$teacher.status\", \"active\"] }\n                    }\n                  },\n                  as: \"teacher\",\n                  in: {\n                    id: { $toString: \"$$teacher._id\" },\n                    full_name: \"$$teacher.full_name\",\n                    account_number: \"$$teacher.account_number\"\n                  }\n                }\n              },\n              teacher_count: {\n                $size: {\n                  $filter: {\n                    input: \"$teachers_data\",\n                    as: \"teacher\",\n                    cond: { $eq: [\"$$teacher.status\", \"active\"] }\n                  }\n                }\n              }\n            }\n          },\n          {\n            $sort: { name: 1 }\n          }\n        ]).toArray();\n        return json({ success: true, data: departmentsResult });\n    }\n  } catch (error) {\n    console.error(\"Error fetching departments data:\", error);\n    return json({ success: false, error: \"Failed to fetch data\" }, { status: 500 });\n  }\n}\nasync function POST({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ success: false, error: \"Unauthorized\" }, { status: 401 });\n    }\n    const { name, code, teachers = [] } = await request.json();\n    if (!name || !code) {\n      return json({ success: false, error: \"Department name and code are required\" }, { status: 400 });\n    }\n    await client.connect();\n    const db = client.db(\"set-2-system\");\n    const departmentsCollection = db.collection(\"departments\");\n    const teacherDepartmentsCollection = db.collection(\"teacher_departments\");\n    const usersCollection = db.collection(\"users\");\n    const existingDept = await departmentsCollection.findOne({\n      $or: [\n        { name },\n        { code: code.toUpperCase() }\n      ]\n    });\n    if (existingDept) {\n      return json({ success: false, error: \"Department name or code already exists\" }, { status: 400 });\n    }\n    const newDepartment = {\n      name,\n      code: code.toUpperCase(),\n      status: \"active\",\n      created_at: /* @__PURE__ */ new Date()\n    };\n    const insertResult = await departmentsCollection.insertOne(newDepartment);\n    if (!insertResult.insertedId) {\n      throw new Error(\"Failed to create department\");\n    }\n    newDepartment.id = insertResult.insertedId.toString();\n    newDepartment._id = insertResult.insertedId;\n    if (teachers.length > 0) {\n      const assignedTeachers = [];\n      for (const teacherId of teachers) {\n        await teacherDepartmentsCollection.insertOne({\n          teacher_id: new ObjectId(teacherId),\n          department_id: insertResult.insertedId\n        });\n        const teacherInfo = await usersCollection.findOne(\n          { _id: new ObjectId(teacherId) },\n          { projection: { full_name: 1, account_number: 1 } }\n        );\n        if (teacherInfo) {\n          assignedTeachers.push({\n            id: teacherInfo._id.toString(),\n            full_name: teacherInfo.full_name,\n            account_number: teacherInfo.account_number\n          });\n        }\n      }\n      if (assignedTeachers.length > 0) {\n        try {\n          await logActivityWithUser(\n            user,\n            \"department_teacher_assigned\",\n            {\n              department_id: insertResult.insertedId.toString(),\n              department_name: name,\n              department_code: code.toUpperCase(),\n              teachers: assignedTeachers\n            }\n          );\n        } catch (logError) {\n          console.error(\"Error logging teacher assignment activity:\", logError);\n        }\n      }\n    }\n    try {\n      await logActivityWithUser(\n        user,\n        \"department_created\",\n        {\n          department_id: insertResult.insertedId.toString(),\n          department_name: name,\n          department_code: code.toUpperCase()\n        }\n      );\n    } catch (logError) {\n      console.error(\"Error logging department creation activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: \"Department created successfully\",\n      data: {\n        ...newDepartment,\n        subjects: [],\n        teachers: [],\n        subject_count: 0,\n        teacher_count: teachers.length\n      }\n    });\n  } catch (error) {\n    console.error(\"Error creating department:\", error);\n    if (error.code === 11e3) {\n      return json({ success: false, error: \"Department name or code already exists\" }, { status: 400 });\n    }\n    return json({ success: false, error: \"Failed to create department\" }, { status: 500 });\n  }\n}\nasync function PUT({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ success: false, error: \"Unauthorized\" }, { status: 401 });\n    }\n    const requestBody = await request.json();\n    const { id, name, code, teachers = [], subjects = [] } = requestBody;\n    if (!id || !name || !code) {\n      return json({ success: false, error: \"Department ID, name and code are required\" }, { status: 400 });\n    }\n    if (code.length > 20) {\n      return json({ success: false, error: \"Department code cannot exceed 20 characters\" }, { status: 400 });\n    }\n    if (name.length > 100) {\n      return json({ success: false, error: \"Department name cannot exceed 100 characters\" }, { status: 400 });\n    }\n    await client.connect();\n    const db = client.db(\"set-2-system\");\n    const departmentsCollection = db.collection(\"departments\");\n    const teacherDepartmentsCollection = db.collection(\"teacher_departments\");\n    const subjectsCollection = db.collection(\"subjects\");\n    const usersCollection = db.collection(\"users\");\n    const currentDept = await departmentsCollection.findOne(\n      { _id: new ObjectId(id), status: \"active\" },\n      { projection: { name: 1, code: 1 } }\n    );\n    if (!currentDept) {\n      return json({ success: false, error: \"Department not found\" }, { status: 404 });\n    }\n    const nameChanged = currentDept.name !== name;\n    const codeChanged = currentDept.code !== code.toUpperCase();\n    const basicInfoChanged = nameChanged || codeChanged;\n    if (basicInfoChanged) {\n      const existingDept = await departmentsCollection.findOne({\n        _id: { $ne: new ObjectId(id) },\n        $or: [\n          { name },\n          { code: code.toUpperCase() }\n        ]\n      });\n      if (existingDept) {\n        return json({ success: false, error: \"Department name or code already exists\" }, { status: 400 });\n      }\n    }\n    const updateResult = await departmentsCollection.updateOne(\n      { _id: new ObjectId(id), status: \"active\" },\n      {\n        $set: {\n          name,\n          code: code.toUpperCase(),\n          updated_at: /* @__PURE__ */ new Date()\n        }\n      }\n    );\n    if (updateResult.matchedCount === 0) {\n      return json({ success: false, error: \"Department not found\" }, { status: 404 });\n    }\n    const currentTeachersResult = await teacherDepartmentsCollection.aggregate([\n      {\n        $match: { department_id: new ObjectId(id) }\n      },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"teacher_id\",\n          foreignField: \"_id\",\n          as: \"user\"\n        }\n      },\n      {\n        $unwind: \"$user\"\n      },\n      {\n        $project: {\n          id: { $toString: \"$user._id\" },\n          full_name: \"$user.full_name\",\n          account_number: \"$user.account_number\"\n        }\n      }\n    ]).toArray();\n    await teacherDepartmentsCollection.deleteMany({ department_id: new ObjectId(id) });\n    if (currentTeachersResult.length > 0) {\n      try {\n        await logActivityWithUser(\n          user,\n          \"department_teacher_removed\",\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code.toUpperCase(),\n            teachers: currentTeachersResult\n          }\n        );\n      } catch (logError) {\n        console.error(\"Error logging teacher removal activity:\", logError);\n      }\n    }\n    if (teachers.length > 0) {\n      const newTeachers = [];\n      const teacherAssignments = [];\n      for (const teacherId of teachers) {\n        teacherAssignments.push({\n          teacher_id: new ObjectId(teacherId),\n          department_id: new ObjectId(id)\n        });\n        const teacherInfo = await usersCollection.findOne(\n          { _id: new ObjectId(teacherId) },\n          { projection: { full_name: 1, account_number: 1 } }\n        );\n        if (teacherInfo) {\n          newTeachers.push({\n            id: teacherInfo._id.toString(),\n            full_name: teacherInfo.full_name,\n            account_number: teacherInfo.account_number\n          });\n        }\n      }\n      if (teacherAssignments.length > 0) {\n        await teacherDepartmentsCollection.insertMany(teacherAssignments);\n      }\n      if (newTeachers.length > 0) {\n        try {\n          await logActivityWithUser(\n            user,\n            \"department_teacher_assigned\",\n            {\n              department_id: id,\n              department_name: name,\n              department_code: code.toUpperCase(),\n              teachers: newTeachers\n            }\n          );\n        } catch (logError) {\n          console.error(\"Error logging teacher assignment activity:\", logError);\n        }\n      }\n    }\n    const currentSubjects = await subjectsCollection.find(\n      { department_id: new ObjectId(id) },\n      { projection: { name: 1, code: 1 } }\n    ).toArray();\n    await subjectsCollection.updateMany(\n      { department_id: new ObjectId(id) },\n      { $unset: { department_id: \"\" } }\n    );\n    if (currentSubjects.length > 0) {\n      const currentSubjectsForLog = currentSubjects.map((subject) => ({\n        id: subject._id.toString(),\n        name: subject.name,\n        code: subject.code\n      }));\n      try {\n        await logActivityWithUser(\n          user,\n          \"department_subject_removed\",\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code.toUpperCase(),\n            subjects: currentSubjectsForLog\n          }\n        );\n      } catch (logError) {\n        console.error(\"Error logging subject removal activity:\", logError);\n      }\n    }\n    if (subjects.length > 0) {\n      const newSubjects = [];\n      const subjectIds = subjects.map((subjectId) => new ObjectId(subjectId));\n      await subjectsCollection.updateMany(\n        { _id: { $in: subjectIds } },\n        { $set: { department_id: new ObjectId(id) } }\n      );\n      const subjectInfos = await subjectsCollection.find(\n        { _id: { $in: subjectIds } },\n        { projection: { name: 1, code: 1 } }\n      ).toArray();\n      const newSubjectsForLog = subjectInfos.map((subject) => ({\n        id: subject._id.toString(),\n        name: subject.name,\n        code: subject.code\n      }));\n      if (newSubjectsForLog.length > 0) {\n        try {\n          await logActivityWithUser(\n            user,\n            \"department_subject_assigned\",\n            {\n              department_id: id,\n              department_name: name,\n              department_code: code.toUpperCase(),\n              subjects: newSubjectsForLog\n            }\n          );\n        } catch (logError) {\n          console.error(\"Error logging subject assignment activity:\", logError);\n        }\n      }\n    }\n    if (basicInfoChanged) {\n      try {\n        await logActivityWithUser(\n          user,\n          \"department_updated\",\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code.toUpperCase()\n          }\n        );\n      } catch (logError) {\n        console.error(\"Error logging department update activity:\", logError);\n      }\n    }\n    const updatedDepartment = await departmentsCollection.findOne(\n      { _id: new ObjectId(id) },\n      { projection: { name: 1, code: 1, status: 1, created_at: 1, updated_at: 1 } }\n    );\n    return json({\n      success: true,\n      message: \"Department updated successfully\",\n      data: {\n        id: updatedDepartment._id.toString(),\n        name: updatedDepartment.name,\n        code: updatedDepartment.code,\n        status: updatedDepartment.status,\n        created_at: updatedDepartment.created_at,\n        updated_at: updatedDepartment.updated_at\n      }\n    });\n  } catch (error) {\n    console.error(\"Error updating department:\", error);\n    if (error.code === 11e3) {\n      return json({ success: false, error: \"Department name or code already exists\" }, { status: 400 });\n    }\n    return json({ success: false, error: \"Failed to update department\" }, { status: 500 });\n  }\n}\nasync function DELETE({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ success: false, error: \"Unauthorized\" }, { status: 401 });\n    }\n    const { id } = await request.json();\n    if (!id) {\n      return json({ success: false, error: \"Department ID is required\" }, { status: 400 });\n    }\n    await client.connect();\n    const db = client.db(\"set-2-system\");\n    const departmentsCollection = db.collection(\"departments\");\n    const teacherDepartmentsCollection = db.collection(\"teacher_departments\");\n    const subjectsCollection = db.collection(\"subjects\");\n    const department = await departmentsCollection.findOne(\n      { _id: new ObjectId(id), status: \"active\" },\n      { projection: { name: 1, code: 1 } }\n    );\n    if (!department) {\n      return json({ success: false, error: \"Department not found\" }, { status: 404 });\n    }\n    const subjectsResult = await subjectsCollection.find(\n      { department_id: new ObjectId(id) },\n      { projection: { _id: 1 } }\n    ).toArray();\n    if (subjectsResult.length > 0) {\n      await subjectsCollection.updateMany(\n        { department_id: new ObjectId(id) },\n        { $unset: { department_id: \"\" } }\n      );\n    }\n    await teacherDepartmentsCollection.deleteMany({ department_id: new ObjectId(id) });\n    const deleteResult = await departmentsCollection.deleteOne({ _id: new ObjectId(id) });\n    if (deleteResult.deletedCount === 0) {\n      return json({ success: false, error: \"Department not found\" }, { status: 404 });\n    }\n    try {\n      await logActivityWithUser(\n        user,\n        \"department_deleted\",\n        {\n          department_id: id,\n          department_name: department.name,\n          department_code: department.code\n        }\n      );\n    } catch (logError) {\n      console.error(\"Error logging department deletion activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: \"Department deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting department:\", error);\n    return json({ success: false, error: \"Failed to delete department\" }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}