{"version":3,"file":"_server-Dh7Nh8je.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/grades/grade-items/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url, request }) {\n  try {\n    const sectionId = url.searchParams.get(\"section_id\");\n    const subjectId = url.searchParams.get(\"subject_id\");\n    const gradingPeriodId = url.searchParams.get(\"grading_period_id\");\n    const teacherId = url.searchParams.get(\"teacher_id\");\n    if (!sectionId || !subjectId || !gradingPeriodId) {\n      return json({\n        error: \"Missing required parameters: section_id, subject_id, grading_period_id\"\n      }, { status: 400 });\n    }\n    const db = await connectToDatabase();\n    console.log(\"Grade items API - Query parameters:\", {\n      section_id: sectionId,\n      subject_id: subjectId,\n      grading_period_id: gradingPeriodId,\n      teacher_id: teacherId\n    });\n    const existingConfig = await db.collection(\"grade_configurations\").findOne({\n      section_id: new ObjectId(sectionId),\n      subject_id: new ObjectId(subjectId),\n      grading_period_id: parseInt(gradingPeriodId),\n      teacher_id: new ObjectId(teacherId)\n    });\n    console.log(\"Existing config found:\", existingConfig ? \"YES\" : \"NO\");\n    if (existingConfig) {\n      console.log(\"Config data:\", existingConfig.grade_items);\n    }\n    let gradeItemsByCategory;\n    if (existingConfig) {\n      gradeItemsByCategory = existingConfig.grade_items;\n    } else {\n      gradeItemsByCategory = {\n        writtenWork: [],\n        performanceTasks: [],\n        quarterlyAssessment: []\n      };\n      await db.collection(\"grade_configurations\").insertOne({\n        section_id: new ObjectId(sectionId),\n        subject_id: new ObjectId(subjectId),\n        grading_period_id: parseInt(gradingPeriodId),\n        teacher_id: new ObjectId(teacherId),\n        grade_items: gradeItemsByCategory,\n        created_at: /* @__PURE__ */ new Date(),\n        updated_at: /* @__PURE__ */ new Date(),\n        status: \"active\"\n      });\n    }\n    return json({\n      success: true,\n      data: gradeItemsByCategory\n    });\n  } catch (error) {\n    console.error(\"Error in grades/grade-items GET:\", error);\n    return json({\n      success: false,\n      error: \"Internal server error\"\n    }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    const { action, ...data } = await request.json();\n    const db = await connectToDatabase();\n    switch (action) {\n      case \"create_grade_item\":\n        const { section_id, subject_id, grading_period_id, teacher_id, category, name, total_score } = data;\n        const config = await db.collection(\"grade_configurations\").findOne({\n          section_id: new ObjectId(section_id),\n          subject_id: new ObjectId(subject_id),\n          grading_period_id: parseInt(grading_period_id),\n          teacher_id: new ObjectId(teacher_id)\n        });\n        if (config) {\n          const newItem = {\n            id: new ObjectId().toString(),\n            name,\n            totalScore: total_score\n          };\n          const updatePath = `grade_items.${category}`;\n          await db.collection(\"grade_configurations\").updateOne(\n            { _id: config._id },\n            {\n              $push: { [updatePath]: newItem },\n              $set: { updated_at: /* @__PURE__ */ new Date() }\n            }\n          );\n          return json({ success: true, data: newItem });\n        } else {\n          return json({\n            success: false,\n            error: \"Grade configuration not found\"\n          }, { status: 404 });\n        }\n      case \"update_grade_item\":\n        const { item_id, new_name, new_total_score } = data;\n        const updateResult = await db.collection(\"grade_configurations\").updateOne(\n          {\n            $or: [\n              { \"grade_items.writtenWork.id\": item_id },\n              { \"grade_items.performanceTasks.id\": item_id },\n              { \"grade_items.quarterlyAssessment.id\": item_id }\n            ]\n          },\n          {\n            $set: {\n              \"grade_items.writtenWork.$[elem].name\": new_name,\n              \"grade_items.writtenWork.$[elem].totalScore\": new_total_score,\n              \"grade_items.performanceTasks.$[elem].name\": new_name,\n              \"grade_items.performanceTasks.$[elem].totalScore\": new_total_score,\n              \"grade_items.quarterlyAssessment.$[elem].name\": new_name,\n              \"grade_items.quarterlyAssessment.$[elem].totalScore\": new_total_score,\n              updated_at: /* @__PURE__ */ new Date()\n            }\n          },\n          {\n            arrayFilters: [{ \"elem.id\": item_id }]\n          }\n        );\n        return json({ success: true });\n      case \"delete_grade_item\":\n      case \"remove\":\n        const gradeItemId = data.delete_item_id || data.grade_item_id;\n        if (!gradeItemId) {\n          return json({ success: false, error: \"Missing grade item id\" }, { status: 400 });\n        }\n        await db.collection(\"grade_configurations\").updateMany(\n          {},\n          {\n            $pull: {\n              \"grade_items.writtenWork\": { id: gradeItemId },\n              \"grade_items.performanceTasks\": { id: gradeItemId },\n              \"grade_items.quarterlyAssessment\": { id: gradeItemId }\n            },\n            $set: { updated_at: /* @__PURE__ */ new Date() }\n          }\n        );\n        return json({ success: true });\n      default:\n        return json({\n          success: false,\n          error: \"Invalid action\"\n        }, { status: 400 });\n    }\n  } catch (error) {\n    console.error(\"Error in grades/grade-items POST:\", error);\n    return json({\n      success: false,\n      error: \"Internal server error\"\n    }, { status: 500 });\n  }\n}\nasync function PUT({ request }) {\n  try {\n    const data = await request.json();\n    const db = await connectToDatabase();\n    if (data.grade_item_id && (data.name !== void 0 || data.total_score !== void 0)) {\n      const { grade_item_id, name, total_score } = data;\n      const updateFields = {};\n      if (name !== void 0) {\n        updateFields[\"grade_items.writtenWork.$[elem].name\"] = name;\n        updateFields[\"grade_items.performanceTasks.$[elem].name\"] = name;\n        updateFields[\"grade_items.quarterlyAssessment.$[elem].name\"] = name;\n      }\n      if (total_score !== void 0) {\n        updateFields[\"grade_items.writtenWork.$[elem].totalScore\"] = total_score;\n        updateFields[\"grade_items.performanceTasks.$[elem].totalScore\"] = total_score;\n        updateFields[\"grade_items.quarterlyAssessment.$[elem].totalScore\"] = total_score;\n      }\n      updateFields[\"updated_at\"] = /* @__PURE__ */ new Date();\n      const result2 = await db.collection(\"grade_configurations\").updateOne(\n        {\n          $or: [\n            { \"grade_items.writtenWork.id\": grade_item_id },\n            { \"grade_items.performanceTasks.id\": grade_item_id },\n            { \"grade_items.quarterlyAssessment.id\": grade_item_id }\n          ]\n        },\n        {\n          $set: updateFields\n        },\n        {\n          arrayFilters: [{ \"elem.id\": grade_item_id }]\n        }\n      );\n      if (result2.matchedCount === 0) {\n        return json({\n          success: false,\n          error: \"Grade item not found\"\n        }, { status: 404 });\n      }\n      return json({ success: true });\n    }\n    const { section_id, subject_id, grading_period_id, teacher_id, grade_items } = data;\n    const result = await db.collection(\"grade_configurations\").updateOne(\n      {\n        section_id,\n        subject_id,\n        grading_period_id: parseInt(grading_period_id),\n        teacher_id\n      },\n      {\n        $set: {\n          grade_items,\n          updated_at: /* @__PURE__ */ new Date()\n        },\n        $setOnInsert: {\n          created_at: /* @__PURE__ */ new Date(),\n          status: \"active\"\n        }\n      },\n      { upsert: true }\n    );\n    return json({ success: true });\n  } catch (error) {\n    console.error(\"Error in grades/grade-items PUT:\", error);\n    return json({\n      success: false,\n      error: \"Internal server error\"\n    }, { status: 500 });\n  }\n}\nasync function DELETE({ url, request }) {\n  try {\n    const db = await connectToDatabase();\n    let body = {};\n    try {\n      body = await request.json();\n    } catch (err) {\n      body = {};\n    }\n    if (body && body.grade_item_id) {\n      const gradeItemId = body.grade_item_id;\n      await db.collection(\"grade_configurations\").updateMany(\n        {},\n        {\n          $pull: {\n            \"grade_items.writtenWork\": { id: gradeItemId },\n            \"grade_items.performanceTasks\": { id: gradeItemId },\n            \"grade_items.quarterlyAssessment\": { id: gradeItemId }\n          },\n          $set: { updated_at: /* @__PURE__ */ new Date() }\n        }\n      );\n      return json({ success: true, message: \"Grade item deleted successfully\" });\n    }\n    const sectionId = url.searchParams.get(\"section_id\");\n    const subjectId = url.searchParams.get(\"subject_id\");\n    const gradingPeriodId = url.searchParams.get(\"grading_period_id\");\n    const teacherId = url.searchParams.get(\"teacher_id\");\n    if (!sectionId || !subjectId || !gradingPeriodId || !teacherId) {\n      return json({\n        error: \"Missing required parameters\"\n      }, { status: 400 });\n    }\n    await db.collection(\"grade_configurations\").deleteOne({\n      section_id: new ObjectId(sectionId),\n      subject_id: new ObjectId(subjectId),\n      grading_period_id: parseInt(gradingPeriodId),\n      teacher_id: new ObjectId(teacherId)\n    });\n    return json({ success: true });\n  } catch (error) {\n    console.error(\"Error in grades/grade-items DELETE:\", error);\n    return json({\n      success: false,\n      error: \"Internal server error\"\n    }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}