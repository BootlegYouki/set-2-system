{"version":3,"file":"_server-zzC2gFPt.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/notifications/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { v as verifyAuth, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url, request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const user = authResult.user;\n    const studentId = url.searchParams.get(\"student_id\") || user.id;\n    const type = url.searchParams.get(\"type\");\n    const isRead = url.searchParams.get(\"is_read\");\n    const limit = parseInt(url.searchParams.get(\"limit\")) || 50;\n    const offset = parseInt(url.searchParams.get(\"offset\")) || 0;\n    const db = await connectToDatabase();\n    const notificationsCollection = db.collection(\"notifications\");\n    const filter = { student_id: studentId };\n    if (type) {\n      filter.type = type;\n    }\n    if (isRead !== null && isRead !== void 0) {\n      filter.is_read = isRead === \"true\";\n    }\n    const notifications = await notificationsCollection.find(filter).sort({ created_at: -1 }).skip(offset).limit(limit).toArray();\n    const totalCount = await notificationsCollection.countDocuments(filter);\n    const formattedNotifications = notifications.map((notification) => ({\n      id: notification._id.toString(),\n      type: notification.type,\n      title: notification.title,\n      message: notification.message,\n      priority: notification.priority,\n      isRead: notification.is_read,\n      relatedId: notification.related_id,\n      timestamp: notification.created_at.toISOString(),\n      updatedAt: notification.updated_at.toISOString(),\n      // Add document request specific fields\n      adminNote: notification.admin_note || null,\n      rejectionReason: notification.rejection_reason || null,\n      documentType: notification.document_type || null,\n      status: notification.status || null,\n      adminName: notification.admin_name || null,\n      adminId: notification.admin_id || null\n    }));\n    const unreadCount = await notificationsCollection.countDocuments({\n      student_id: studentId,\n      is_read: false\n    });\n    return json({\n      success: true,\n      data: {\n        notifications: formattedNotifications,\n        pagination: {\n          total: totalCount,\n          limit,\n          offset,\n          hasMore: offset + limit < totalCount\n        },\n        unreadCount\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching notifications:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch notifications\"\n    }, { status: 500 });\n  }\n}\nasync function PATCH({ request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const user = authResult.user;\n    const requestBody = await request.json();\n    const { id, action, ids } = requestBody;\n    const db = await connectToDatabase();\n    const notificationsCollection = db.collection(\"notifications\");\n    if (action === \"mark_read\" && id) {\n      const existingNotification = await notificationsCollection.findOne({\n        _id: new ObjectId(id),\n        student_id: user.id\n      });\n      if (!existingNotification) {\n        return json({\n          error: \"Notification not found or access denied\"\n        }, { status: 404 });\n      }\n      const result = await notificationsCollection.findOneAndUpdate(\n        { _id: new ObjectId(id), student_id: user.id },\n        {\n          $set: {\n            is_read: true,\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        },\n        { returnDocument: \"after\" }\n      );\n      const updatedNotification = result.value || { ...existingNotification, is_read: true, updated_at: /* @__PURE__ */ new Date() };\n      await logActivityWithUser(\n        \"notification_read\",\n        `Marked notification as read: ${updatedNotification.title}`,\n        user,\n        request.headers.get(\"x-forwarded-for\") || \"unknown\"\n      );\n      return json({\n        success: true,\n        data: {\n          id: updatedNotification._id.toString(),\n          isRead: updatedNotification.is_read\n        }\n      });\n    }\n    if (action === \"mark_unread\" && id) {\n      const existingNotification = await notificationsCollection.findOne({\n        _id: new ObjectId(id),\n        student_id: user.id\n      });\n      if (!existingNotification) {\n        return json({\n          error: \"Notification not found or access denied\"\n        }, { status: 404 });\n      }\n      const result = await notificationsCollection.findOneAndUpdate(\n        { _id: new ObjectId(id), student_id: user.id },\n        {\n          $set: {\n            is_read: false,\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        },\n        { returnDocument: \"after\" }\n      );\n      const updatedNotification = result.value || { ...existingNotification, is_read: false, updated_at: /* @__PURE__ */ new Date() };\n      return json({\n        success: true,\n        data: {\n          id: updatedNotification._id.toString(),\n          isRead: updatedNotification.is_read\n        }\n      });\n    }\n    if (action === \"mark_all_read\") {\n      const result = await notificationsCollection.updateMany(\n        { student_id: user.id, is_read: false },\n        {\n          $set: {\n            is_read: true,\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      await logActivityWithUser(\n        \"notifications_mark_all_read\",\n        `Marked ${result.modifiedCount} notifications as read`,\n        user,\n        request.headers.get(\"x-forwarded-for\") || \"unknown\"\n      );\n      return json({\n        success: true,\n        data: {\n          updatedCount: result.modifiedCount\n        }\n      });\n    }\n    if (action === \"bulk_mark_read\" && ids && Array.isArray(ids)) {\n      const objectIds = ids.map((id2) => new ObjectId(id2));\n      const result = await notificationsCollection.updateMany(\n        {\n          student_id: user.id,\n          _id: { $in: objectIds }\n        },\n        {\n          $set: {\n            is_read: true,\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      return json({\n        success: true,\n        data: {\n          updatedIds: ids,\n          updatedCount: result.modifiedCount\n        }\n      });\n    }\n    return json({\n      error: \"Invalid action or missing parameters\"\n    }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error updating notification:\", error);\n    return json({\n      success: false,\n      error: \"Failed to update notification\"\n    }, { status: 500 });\n  }\n}\nasync function DELETE({ request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const user = authResult.user;\n    const { id, ids, action } = await request.json();\n    const db = await connectToDatabase();\n    const notificationsCollection = db.collection(\"notifications\");\n    if (action === \"delete_read\") {\n      const result = await notificationsCollection.deleteMany({\n        student_id: user.id,\n        is_read: true\n      });\n      await logActivityWithUser(\n        \"notifications_delete_read\",\n        `Deleted ${result.deletedCount} read notifications`,\n        user,\n        request.headers.get(\"x-forwarded-for\") || \"unknown\"\n      );\n      return json({\n        success: true,\n        data: {\n          deletedCount: result.deletedCount,\n          message: \"All read notifications deleted successfully\"\n        }\n      });\n    }\n    if (id) {\n      const existingNotification = await notificationsCollection.findOne({\n        _id: new ObjectId(id),\n        student_id: user.id\n      });\n      if (!existingNotification) {\n        return json({\n          error: \"Notification not found or access denied\"\n        }, { status: 404 });\n      }\n      const result = await notificationsCollection.findOneAndDelete({\n        _id: new ObjectId(id),\n        student_id: user.id\n      });\n      await logActivityWithUser(\n        \"notification_delete\",\n        `Deleted notification: ${existingNotification.title}`,\n        user,\n        request.headers.get(\"x-forwarded-for\") || \"unknown\"\n      );\n      return json({\n        success: true,\n        data: {\n          message: \"Notification deleted successfully\"\n        }\n      });\n    }\n    if (ids && Array.isArray(ids)) {\n      const objectIds = ids.map((id2) => new ObjectId(id2));\n      const result = await notificationsCollection.deleteMany({\n        student_id: user.id,\n        _id: { $in: objectIds }\n      });\n      return json({\n        success: true,\n        data: {\n          deletedIds: ids,\n          deletedCount: result.deletedCount,\n          message: \"Notifications deleted successfully\"\n        }\n      });\n    }\n    return json({\n      error: \"Notification ID or IDs required\"\n    }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error deleting notification:\", error);\n    return json({\n      success: false,\n      error: \"Failed to delete notification\"\n    }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const user = authResult.user;\n    const { title, message, type = \"info\", student_id, section_id, send_to_all = false } = await request.json();\n    if (!title || !message) {\n      return json({\n        error: \"Title and message are required\"\n      }, { status: 400 });\n    }\n    const db = await connectToDatabase();\n    const notificationsCollection = db.collection(\"notifications\");\n    const studentsCollection = db.collection(\"students\");\n    let targetStudents = [];\n    if (send_to_all) {\n      const students = await studentsCollection.find({}, { projection: { _id: 1 } }).toArray();\n      targetStudents = students.map((student) => student._id);\n    } else if (section_id) {\n      const students = await studentsCollection.find(\n        { section_id },\n        { projection: { _id: 1 } }\n      ).toArray();\n      targetStudents = students.map((student) => student._id);\n    } else if (student_id) {\n      targetStudents = [student_id];\n    } else {\n      return json({\n        error: \"Must specify student_id, section_id, or send_to_all\"\n      }, { status: 400 });\n    }\n    if (targetStudents.length === 0) {\n      return json({\n        error: \"No target students found\"\n      }, { status: 400 });\n    }\n    const notifications = targetStudents.map((studentId) => ({\n      student_id: studentId,\n      title,\n      message,\n      type,\n      is_read: false,\n      created_at: /* @__PURE__ */ new Date(),\n      updated_at: /* @__PURE__ */ new Date(),\n      created_by: user.id\n    }));\n    const result = await notificationsCollection.insertMany(notifications);\n    await logActivityWithUser(\n      \"notification_create\",\n      `Created notification \"${title}\" for ${targetStudents.length} students`,\n      user,\n      request.headers.get(\"x-forwarded-for\") || \"unknown\"\n    );\n    return json({\n      success: true,\n      data: {\n        message: \"Notification created successfully\",\n        notification_count: result.insertedCount,\n        target_students: targetStudents.length\n      }\n    });\n  } catch (error) {\n    console.error(\"Error creating notification:\", error);\n    return json({\n      success: false,\n      error: \"Failed to create notification\"\n    }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  PATCH,\n  POST\n};\n"],"names":[],"mappings":"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"}