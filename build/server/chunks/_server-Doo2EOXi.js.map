{"version":3,"file":"_server-Doo2EOXi.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/schedules/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { q as query } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nasync function GET({ url }) {\n  try {\n    const action = url.searchParams.get(\"action\");\n    const sectionId = url.searchParams.get(\"sectionId\");\n    const schoolYear = url.searchParams.get(\"schoolYear\") || \"2024-2025\";\n    const dayOfWeek = url.searchParams.get(\"dayOfWeek\");\n    const scheduleId = url.searchParams.get(\"scheduleId\");\n    switch (action) {\n      case \"schedule-details\":\n        const scheduleDetailsResult = await query(\n          \"SELECT * FROM get_schedule_details($1, $2, $3)\",\n          [sectionId ? parseInt(sectionId) : null, schoolYear, dayOfWeek]\n        );\n        return json({ success: true, data: scheduleDetailsResult.rows });\n      case \"single-schedule\":\n        if (!scheduleId) {\n          return json({ success: false, error: \"Schedule ID is required\" }, { status: 400 });\n        }\n        const singleScheduleResult = await query(`\n                    SELECT \n                        sch.id,\n                        sch.section_id,\n                        sec.name as section_name,\n                        sec.grade_level,\n                        sch.day_of_week,\n                        sch.start_time,\n                        sch.end_time,\n                        sch.schedule_type,\n                        sch.subject_id,\n                        sub.name as subject_name,\n                        sub.code as subject_code,\n                        sch.activity_type_id,\n                        act.name as activity_type_name,\n                        act.icon as activity_type_icon,\n                        sch.teacher_id,\n                        u.full_name as teacher_name,\n                        u.account_number as teacher_account_number,\n                        sch.school_year,\n                        sch.created_at,\n                        sch.updated_at\n                    FROM schedules sch\n                    JOIN sections sec ON sch.section_id = sec.id\n                    LEFT JOIN subjects sub ON sch.subject_id = sub.id\n                    LEFT JOIN activity_types act ON sch.activity_type_id = act.id\n                    LEFT JOIN users u ON sch.teacher_id = u.id\n                    WHERE sch.id = $1\n                `, [parseInt(scheduleId)]);\n        if (singleScheduleResult.rows.length === 0) {\n          return json({ success: false, error: \"Schedule not found\" }, { status: 404 });\n        }\n        return json({ success: true, data: singleScheduleResult.rows[0] });\n      case \"section-schedules\":\n        if (!sectionId) {\n          return json({ success: false, error: \"Section ID is required\" }, { status: 400 });\n        }\n        const sectionSchedulesResult = await query(\n          \"SELECT * FROM get_schedule_details($1, $2, NULL)\",\n          [parseInt(sectionId), schoolYear]\n        );\n        return json({ success: true, data: sectionSchedulesResult.rows });\n      case \"teacher-schedules\":\n        const teacherId = url.searchParams.get(\"teacherId\");\n        if (!teacherId) {\n          return json({ success: false, error: \"Teacher ID is required\" }, { status: 400 });\n        }\n        const teacherSchedulesResult = await query(`\n                    SELECT \n                        sch.id,\n                        sch.section_id,\n                        sec.name as section_name,\n                        sec.grade_level,\n                        sch.day_of_week,\n                        sch.start_time,\n                        sch.end_time,\n                        sch.schedule_type,\n                        sch.subject_id,\n                        sub.name as subject_name,\n                        sub.code as subject_code,\n                        sch.activity_type_id,\n                        act.name as activity_type_name,\n                        r.name as room_name,\n                        sch.school_year\n                    FROM schedules sch\n                    JOIN sections sec ON sch.section_id = sec.id\n                    LEFT JOIN subjects sub ON sch.subject_id = sub.id\n                    LEFT JOIN activity_types act ON sch.activity_type_id = act.id\n                    LEFT JOIN rooms r ON sec.room_id = r.id\n                    WHERE sch.teacher_id = $1 AND sch.school_year = $2\n                    ORDER BY sch.day_of_week, sch.start_time\n                `, [parseInt(teacherId), schoolYear]);\n        return json({ success: true, data: teacherSchedulesResult.rows });\n      case \"student-schedules\":\n        const studentId = url.searchParams.get(\"studentId\");\n        if (!studentId) {\n          return json({ success: false, error: \"Student ID is required\" }, { status: 400 });\n        }\n        const studentSchedulesResult = await query(`\n                    SELECT \n                        sch.id,\n                        sch.section_id,\n                        sec.name as section_name,\n                        sec.grade_level,\n                        sch.day_of_week,\n                        sch.start_time,\n                        sch.end_time,\n                        sch.schedule_type,\n                        sch.subject_id,\n                        sub.name as subject_name,\n                        sub.code as subject_code,\n                        sch.activity_type_id,\n                        act.name as activity_type_name,\n                        act.icon as activity_type_icon,\n                        sch.teacher_id,\n                        u.full_name as teacher_name,\n                        r.name as room_name,\n                        sch.school_year\n                    FROM schedules sch\n                    JOIN sections sec ON sch.section_id = sec.id\n                    JOIN section_students ss ON sec.id = ss.section_id\n                    LEFT JOIN subjects sub ON sch.subject_id = sub.id\n                    LEFT JOIN activity_types act ON sch.activity_type_id = act.id\n                    LEFT JOIN users u ON sch.teacher_id = u.id\n                    LEFT JOIN rooms r ON sec.room_id = r.id\n                    WHERE ss.student_id = $1 AND sch.school_year = $2 AND ss.status = 'active'\n                    ORDER BY \n                        CASE sch.day_of_week\n                            WHEN 'monday' THEN 1\n                            WHEN 'tuesday' THEN 2\n                            WHEN 'wednesday' THEN 3\n                            WHEN 'thursday' THEN 4\n                            WHEN 'friday' THEN 5\n                            WHEN 'saturday' THEN 6\n                            WHEN 'sunday' THEN 7\n                        END,\n                        sch.start_time\n                `, [parseInt(studentId), schoolYear]);\n        return json({ success: true, data: studentSchedulesResult.rows });\n      default:\n        const allSchedulesResult = await query(\n          \"SELECT * FROM get_schedule_details($1, $2, $3)\",\n          [sectionId ? parseInt(sectionId) : null, schoolYear, dayOfWeek]\n        );\n        return json({ success: true, data: allSchedulesResult.rows });\n    }\n  } catch (error) {\n    console.error(\"Error fetching schedules data:\", error);\n    return json({ success: false, error: \"Failed to fetch schedules data\" }, { status: 500 });\n  }\n}\nasync function POST({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    console.log(\"Received schedule data:\", data);\n    const {\n      sectionId,\n      dayOfWeek,\n      startTime,\n      endTime,\n      scheduleType,\n      subjectId,\n      activityTypeId,\n      teacherId,\n      schoolYear\n    } = data;\n    console.log(\"Received schedule data:\", {\n      sectionId,\n      dayOfWeek,\n      startTime,\n      endTime,\n      scheduleType,\n      subjectId,\n      activityTypeId,\n      teacherId,\n      schoolYear\n    });\n    const clientIP = getClientAddress();\n    const userAgent = request.headers.get(\"user-agent\");\n    if (!sectionId || !dayOfWeek || !startTime || !endTime || !scheduleType || !schoolYear) {\n      return json({ success: false, error: \"Missing required fields\" }, { status: 400 });\n    }\n    if (scheduleType === \"subject\" && !subjectId) {\n      return json({ success: false, error: \"Subject ID is required for subject schedules\" }, { status: 400 });\n    }\n    if (scheduleType === \"activity\" && !activityTypeId) {\n      return json({ success: false, error: \"Activity Type ID is required for activity schedules\" }, { status: 400 });\n    }\n    const conflictResult = await query(`\n            SELECT id, start_time, end_time \n            FROM schedules \n            WHERE section_id = $1 \n                AND day_of_week = $2 \n                AND school_year = $3 \n                AND (\n                    ($4::time >= start_time AND $4::time < end_time) OR\n                    ($5::time > start_time AND $5::time <= end_time) OR\n                    ($4::time <= start_time AND $5::time >= end_time)\n                )\n        `, [parseInt(sectionId), dayOfWeek, schoolYear, startTime, endTime]);\n    if (conflictResult.rows.length > 0) {\n      return json({\n        success: false,\n        error: \"Time conflict detected with existing schedule\",\n        conflictingSchedule: conflictResult.rows[0]\n      }, { status: 409 });\n    }\n    await query(\"BEGIN\");\n    try {\n      console.log(\"About to execute INSERT query with values:\", [\n        parseInt(sectionId),\n        dayOfWeek,\n        startTime,\n        endTime,\n        scheduleType,\n        subjectId ? parseInt(subjectId) : null,\n        activityTypeId ? parseInt(activityTypeId) : null,\n        teacherId ? parseInt(teacherId) : null,\n        schoolYear\n      ]);\n      const scheduleResult = await query(`\n                INSERT INTO schedules (\n                    section_id, \n                    day_of_week, \n                    start_time, \n                    end_time, \n                    schedule_type, \n                    subject_id, \n                    activity_type_id, \n                    teacher_id, \n                    school_year\n                )\n                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n                RETURNING id, section_id, day_of_week, start_time, end_time, schedule_type, \n                         subject_id, activity_type_id, teacher_id, school_year, created_at\n            `, [\n        parseInt(sectionId),\n        dayOfWeek,\n        startTime,\n        endTime,\n        scheduleType,\n        subjectId ? parseInt(subjectId) : null,\n        activityTypeId ? parseInt(activityTypeId) : null,\n        teacherId ? parseInt(teacherId) : null,\n        schoolYear\n      ]);\n      const newSchedule = scheduleResult.rows[0];\n      try {\n        const user = await getUserFromRequest(request);\n        if (user && user.id) {\n          await logActivityWithUser(\n            \"schedule_created\",\n            user,\n            {\n              schedule_id: newSchedule.id,\n              section_id: newSchedule.section_id,\n              day_of_week: newSchedule.day_of_week,\n              start_time: newSchedule.start_time,\n              end_time: newSchedule.end_time,\n              schedule_type: newSchedule.schedule_type,\n              school_year: newSchedule.school_year\n            },\n            clientIP,\n            userAgent\n          );\n        }\n      } catch (logError) {\n        console.error(\"Error logging activity:\", logError);\n      }\n      await query(\"COMMIT\");\n      return json({\n        success: true,\n        message: \"Schedule created successfully\",\n        data: newSchedule\n      });\n    } catch (error) {\n      await query(\"ROLLBACK\");\n      throw error;\n    }\n  } catch (error) {\n    console.error(\"Error creating schedule:\", error);\n    console.error(\"Error stack:\", error.stack);\n    return json({ success: false, error: \"Failed to create schedule\", details: error.message }, { status: 500 });\n  }\n}\nasync function DELETE({ url, request, getClientAddress }) {\n  try {\n    const scheduleId = url.searchParams.get(\"id\");\n    const clientIP = getClientAddress();\n    const userAgent = request.headers.get(\"user-agent\");\n    if (!scheduleId) {\n      return json({ success: false, error: \"Schedule ID is required\" }, { status: 400 });\n    }\n    const existingSchedule = await query(\"SELECT * FROM schedules WHERE id = $1\", [parseInt(scheduleId)]);\n    if (existingSchedule.rows.length === 0) {\n      return json({ success: false, error: \"Schedule not found\" }, { status: 404 });\n    }\n    const scheduleToDelete = existingSchedule.rows[0];\n    await query(\"BEGIN\");\n    try {\n      await query(\"DELETE FROM schedules WHERE id = $1\", [parseInt(scheduleId)]);\n      try {\n        const user = await getUserFromRequest(request);\n        await logActivityWithUser(\n          \"schedule_deleted\",\n          user,\n          {\n            schedule_id: parseInt(scheduleId),\n            section_id: scheduleToDelete.section_id,\n            day_of_week: scheduleToDelete.day_of_week,\n            start_time: scheduleToDelete.start_time,\n            end_time: scheduleToDelete.end_time,\n            schedule_type: scheduleToDelete.schedule_type\n          },\n          clientIP,\n          userAgent\n        );\n      } catch (logError) {\n        console.error(\"Error logging activity:\", logError);\n      }\n      await query(\"COMMIT\");\n      return json({\n        success: true,\n        message: \"Schedule deleted successfully\"\n      });\n    } catch (error) {\n      await query(\"ROLLBACK\");\n      throw error;\n    }\n  } catch (error) {\n    console.error(\"Error deleting schedule:\", error);\n    return json({ success: false, error: \"Failed to delete schedule\" }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}