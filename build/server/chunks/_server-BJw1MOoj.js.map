{"version":3,"file":"_server-BJw1MOoj.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/students-bulk/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport \"mongodb\";\nasync function GET({ url }) {\n  try {\n    const db = await connectToDatabase();\n    const schoolYearSetting = await db.collection(\"admin_settings\").findOne({\n      setting_key: \"current_school_year\"\n    });\n    const school_year = url.searchParams.get(\"school_year\") || schoolYearSetting?.setting_value || \"2025-2026\";\n    let currentQuarter = 1;\n    if (!url.searchParams.has(\"quarter\")) {\n      try {\n        const quarterSettings = await db.collection(\"admin_settings\").find({\n          setting_key: {\n            $in: [\n              \"quarter_1_start_date\",\n              \"quarter_1_end_date\",\n              \"quarter_2_start_date\",\n              \"quarter_2_end_date\",\n              \"quarter_3_start_date\",\n              \"quarter_3_end_date\",\n              \"quarter_4_start_date\",\n              \"quarter_4_end_date\"\n            ]\n          }\n        }).toArray();\n        const settings = {};\n        quarterSettings.forEach((row) => {\n          settings[row.setting_key] = row.setting_value;\n        });\n        const today = /* @__PURE__ */ new Date();\n        today.setHours(0, 0, 0, 0);\n        const parseDate = (dateStr) => {\n          if (!dateStr || dateStr.trim() === \"\") return null;\n          const parts = dateStr.split(\"-\");\n          if (parts.length !== 3) return null;\n          const [month, day, year] = parts.map((p) => parseInt(p, 10));\n          if (isNaN(month) || isNaN(day) || isNaN(year)) return null;\n          return new Date(year, month - 1, day);\n        };\n        const quarters = [\n          { num: 1, start: parseDate(settings.quarter_1_start_date), end: parseDate(settings.quarter_1_end_date) },\n          { num: 2, start: parseDate(settings.quarter_2_start_date), end: parseDate(settings.quarter_2_end_date) },\n          { num: 3, start: parseDate(settings.quarter_3_start_date), end: parseDate(settings.quarter_3_end_date) },\n          { num: 4, start: parseDate(settings.quarter_4_start_date), end: parseDate(settings.quarter_4_end_date) }\n        ];\n        for (const quarter2 of quarters) {\n          if (quarter2.start && quarter2.end && today >= quarter2.start && today <= quarter2.end) {\n            currentQuarter = quarter2.num;\n            break;\n          }\n        }\n      } catch (error) {\n        console.error(\"Error determining current quarter:\", error);\n      }\n    }\n    const quarter = parseInt(url.searchParams.get(\"quarter\")) || currentQuarter;\n    const activeStudents = await db.collection(\"users\").find({\n      account_type: \"student\",\n      status: \"active\"\n    }).toArray();\n    if (activeStudents.length === 0) {\n      return json({\n        success: true,\n        students: [],\n        message: \"No active students found\"\n      });\n    }\n    const studentIds = activeStudents.map((student) => student._id);\n    const sectionEnrollments = await db.collection(\"section_students\").find({\n      student_id: { $in: studentIds },\n      status: \"active\"\n    }).toArray();\n    const studentSectionMap = {};\n    sectionEnrollments.forEach((enrollment) => {\n      studentSectionMap[enrollment.student_id.toString()] = enrollment.section_id;\n    });\n    const sectionIds = [...new Set(Object.values(studentSectionMap))];\n    const sections = await db.collection(\"sections\").find({\n      _id: { $in: sectionIds },\n      status: \"active\"\n    }).toArray();\n    const sectionMap = {};\n    sections.forEach((section) => {\n      sectionMap[section._id.toString()] = section;\n    });\n    const calculateOverall = url.searchParams.get(\"quarter\") === \"all\";\n    let gradesData;\n    if (calculateOverall) {\n      gradesData = await db.collection(\"grades\").find({\n        student_id: { $in: studentIds },\n        school_year,\n        $or: [\n          { verified: true },\n          { \"verification.verified\": true }\n        ]\n      }).toArray();\n    } else {\n      gradesData = await db.collection(\"grades\").find({\n        student_id: { $in: studentIds },\n        school_year,\n        quarter,\n        $or: [\n          { verified: true },\n          { \"verification.verified\": true }\n        ]\n      }).toArray();\n    }\n    const studentGradesMap = {};\n    gradesData.forEach((grade) => {\n      const studentId = grade.student_id.toString();\n      if (!studentGradesMap[studentId]) {\n        studentGradesMap[studentId] = [];\n      }\n      studentGradesMap[studentId].push(grade);\n    });\n    const studentsWithGrades = activeStudents.map((student) => {\n      const studentId = student._id.toString();\n      const sectionId = studentSectionMap[studentId];\n      const section = sectionId && sectionMap[sectionId.toString()];\n      const studentGrades = studentGradesMap[studentId] || [];\n      let gwa = 0;\n      if (calculateOverall) {\n        const quarterAverages = {};\n        studentGrades.forEach((grade) => {\n          const quarter2 = grade.quarter;\n          if (!quarterAverages[quarter2]) {\n            quarterAverages[quarter2] = [];\n          }\n          if (grade.averages && grade.averages.final_grade && grade.averages.final_grade > 0) {\n            quarterAverages[quarter2].push(grade.averages.final_grade);\n          }\n        });\n        const quarterGWAs = [];\n        Object.keys(quarterAverages).forEach((quarter2) => {\n          const grades = quarterAverages[quarter2];\n          if (grades.length > 0) {\n            const quarterGWA = grades.reduce((sum, grade) => sum + grade, 0) / grades.length;\n            quarterGWAs.push(quarterGWA);\n          }\n        });\n        if (quarterGWAs.length > 0) {\n          gwa = quarterGWAs.reduce((sum, qGWA) => sum + qGWA, 0) / quarterGWAs.length;\n        }\n      } else {\n        if (studentGrades.length > 0) {\n          const validGrades = studentGrades.filter(\n            (grade) => grade.averages && grade.averages.final_grade && grade.averages.final_grade > 0\n          );\n          if (validGrades.length > 0) {\n            const totalGrades = validGrades.reduce(\n              (sum, grade) => sum + grade.averages.final_grade,\n              0\n            );\n            gwa = totalGrades / validGrades.length;\n          }\n        }\n      }\n      const formattedGwa = Math.round(gwa * 10) / 10;\n      const gwaDisplay = formattedGwa === Math.floor(formattedGwa) ? Math.floor(formattedGwa) : Number(formattedGwa.toFixed(1));\n      return {\n        id: student.account_number,\n        _id: student._id.toString(),\n        name: student.full_name,\n        email: student.email,\n        gradeLevel: section ? section.grade_level.toString() : student.grade_level?.toString() || \"N/A\",\n        section: section ? section.name : \"No Section\",\n        gwa: gwaDisplay,\n        totalSubjects: studentGrades.length,\n        verifiedGrades: studentGrades.filter(\n          (grade) => grade.verified === true || grade.verification?.verified === true\n        ).length\n      };\n    }).sort((a, b) => {\n      const extractNumber = (id) => {\n        const match = id.match(/-(\\d+)$/);\n        return match ? parseInt(match[1]) : 0;\n      };\n      const numA = extractNumber(a.id);\n      const numB = extractNumber(b.id);\n      return numA - numB;\n    });\n    return json({\n      success: true,\n      students: studentsWithGrades,\n      metadata: {\n        totalStudents: studentsWithGrades.length,\n        schoolYear: school_year,\n        quarter: calculateOverall ? \"all\" : quarter,\n        quarterDisplay: calculateOverall ? \"Overall (All Quarters)\" : `Quarter ${quarter}`,\n        timestamp: (/* @__PURE__ */ new Date()).toISOString()\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching students bulk data:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch students data\",\n      students: []\n    }, { status: 500 });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}