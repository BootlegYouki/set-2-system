{"version":3,"file":"_server-DhnN09tK.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/departments/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { q as query } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nasync function GET({ url }) {\n  try {\n    const action = url.searchParams.get(\"action\");\n    switch (action) {\n      case \"subjects\":\n        const subjectsResult = await query(`\n                    SELECT \n                        s.id,\n                        s.name,\n                        s.code,\n                        s.grade_level,\n                        s.created_at,\n                        s.department_id,\n                        d.name as department_name,\n                        d.code as department_code\n                    FROM subjects s\n                    LEFT JOIN departments d ON s.department_id = d.id\n                    ORDER BY s.grade_level, s.name\n                `);\n        return json({ success: true, data: subjectsResult.rows });\n      case \"teachers\":\n        const teachersResult = await query(`\n                    SELECT \n                        u.id,\n                        u.account_number,\n                        u.first_name,\n                        u.last_name,\n                        u.full_name,\n                        u.email,\n                        u.status,\n                        COALESCE(\n                            json_agg(\n                                CASE WHEN d.id IS NOT NULL THEN\n                                    json_build_object(\n                                        'id', d.id,\n                                        'name', d.name,\n                                        'code', d.code\n                                    )\n                                END\n                            ) FILTER (WHERE d.id IS NOT NULL), \n                            '[]'::json\n                        ) as departments\n                    FROM users u\n                    LEFT JOIN teacher_departments td ON u.id = td.teacher_id\n                    LEFT JOIN departments d ON td.department_id = d.id\n                    WHERE u.account_type = 'teacher' AND u.status = 'active'\n                    GROUP BY u.id, u.account_number, u.first_name, u.last_name, u.full_name, u.email, u.status\n                    ORDER BY u.full_name\n                `);\n        return json({ success: true, data: teachersResult.rows });\n      case \"departments\":\n      default:\n        const departmentsResult = await query(`\n                    SELECT \n                        d.id,\n                        d.name,\n                        d.code,\n                        d.status,\n                        d.created_at,\n                        COALESCE(\n                            json_agg(\n                                CASE WHEN s.id IS NOT NULL THEN\n                                    json_build_object(\n                                        'id', s.id,\n                                        'name', s.name,\n                                        'code', s.code,\n                                        'grade_level', s.grade_level\n                                    )\n                                END\n                            ) FILTER (WHERE s.id IS NOT NULL), \n                            '[]'::json\n                        ) as subjects,\n                        (\n                            SELECT COUNT(DISTINCT s2.id) \n                            FROM subjects s2 \n                            WHERE s2.department_id = d.id\n                        ) as subject_count,\n                        COALESCE(\n                            (\n                                SELECT json_agg(\n                                    json_build_object(\n                                        'id', u.id,\n                                        'full_name', u.full_name,\n                                        'account_number', u.account_number\n                                    )\n                                )\n                                FROM teacher_departments td\n                                JOIN users u ON td.teacher_id = u.id\n                                WHERE td.department_id = d.id AND u.status = 'active'\n                            ),\n                            '[]'::json\n                        ) as teachers,\n                        (\n                            SELECT COUNT(DISTINCT td2.teacher_id) \n                            FROM teacher_departments td2\n                            JOIN users u2 ON td2.teacher_id = u2.id\n                            WHERE td2.department_id = d.id AND u2.status = 'active'\n                        ) as teacher_count\n                    FROM departments d\n                    LEFT JOIN subjects s ON d.id = s.department_id\n                    WHERE d.status = 'active'\n                    GROUP BY d.id, d.name, d.code, d.status, d.created_at\n                    ORDER BY d.name\n                `);\n        return json({ success: true, data: departmentsResult.rows });\n    }\n  } catch (error) {\n    console.error(\"Error fetching departments data:\", error);\n    return json({ success: false, error: \"Failed to fetch data\" }, { status: 500 });\n  }\n}\nasync function POST({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ success: false, error: \"Unauthorized\" }, { status: 401 });\n    }\n    const { name, code, teachers = [] } = await request.json();\n    if (!name || !code) {\n      return json({ success: false, error: \"Department name and code are required\" }, { status: 400 });\n    }\n    const departmentResult = await query(`\n            INSERT INTO departments (name, code, status)\n            VALUES ($1, $2, 'active')\n            RETURNING id, name, code, status, created_at\n        `, [name, code]);\n    const newDepartment = departmentResult.rows[0];\n    if (teachers.length > 0) {\n      const assignedTeachers = [];\n      for (const teacherId of teachers) {\n        await query(`\n                    INSERT INTO teacher_departments (teacher_id, department_id)\n                    VALUES ($1, $2)\n                    ON CONFLICT (teacher_id, department_id) DO NOTHING\n                `, [teacherId, newDepartment.id]);\n        const teacherInfo = await query(`\n                    SELECT id, full_name, account_number FROM users WHERE id = $1\n                `, [teacherId]);\n        if (teacherInfo.rows.length > 0) {\n          assignedTeachers.push(teacherInfo.rows[0]);\n        }\n      }\n      if (assignedTeachers.length > 0) {\n        try {\n          await logActivityWithUser(\n            \"department_teacher_assigned\",\n            user,\n            {\n              department_id: newDepartment.id,\n              department_name: name,\n              department_code: code,\n              teachers: assignedTeachers\n            },\n            getClientAddress(),\n            request.headers.get(\"user-agent\")\n          );\n        } catch (logError) {\n          console.error(\"Error logging teacher assignment activity:\", logError);\n        }\n      }\n    }\n    try {\n      await logActivityWithUser(\n        \"department_created\",\n        user,\n        { department_id: newDepartment.id, department_name: name, department_code: code, teachers },\n        getClientAddress(),\n        request.headers.get(\"user-agent\")\n      );\n    } catch (logError) {\n      console.error(\"Error logging department creation activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: \"Department created successfully\",\n      data: {\n        ...newDepartment,\n        subjects: [],\n        teachers: [],\n        subject_count: 0\n      }\n    });\n  } catch (error) {\n    console.error(\"Error creating department:\", error);\n    if (error.code === \"23505\") {\n      if (error.detail && error.detail.includes(\"name\")) {\n        return json({ success: false, error: \"Department name already exists\" }, { status: 400 });\n      } else if (error.detail && error.detail.includes(\"code\")) {\n        return json({ success: false, error: \"Department code already exists\" }, { status: 400 });\n      } else {\n        return json({ success: false, error: \"Department name or code already exists\" }, { status: 400 });\n      }\n    }\n    return json({ success: false, error: \"Failed to create department\" }, { status: 500 });\n  }\n}\nasync function PUT({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ success: false, error: \"Unauthorized\" }, { status: 401 });\n    }\n    const requestBody = await request.json();\n    const { id, name, code, teachers = [], subjects = [] } = requestBody;\n    if (!id || !name || !code) {\n      return json({ success: false, error: \"Department ID, name and code are required\" }, { status: 400 });\n    }\n    if (code.length > 20) {\n      return json({ success: false, error: \"Department code cannot exceed 20 characters\" }, { status: 400 });\n    }\n    if (name.length > 100) {\n      return json({ success: false, error: \"Department name cannot exceed 100 characters\" }, { status: 400 });\n    }\n    const currentDeptResult = await query(`\n            SELECT name, code FROM departments WHERE id = $1 AND status = 'active'\n        `, [id]);\n    if (currentDeptResult.rows.length === 0) {\n      return json({ success: false, error: \"Department not found\" }, { status: 404 });\n    }\n    const currentDept = currentDeptResult.rows[0];\n    const nameChanged = currentDept.name !== name;\n    const codeChanged = currentDept.code !== code;\n    const basicInfoChanged = nameChanged || codeChanged;\n    const departmentResult = await query(`\n            UPDATE departments \n            SET name = $1, code = $2, updated_at = CURRENT_TIMESTAMP\n            WHERE id = $3 AND status = 'active'\n            RETURNING id, name, code, status, created_at, updated_at\n        `, [name, code, id]);\n    const updatedDepartment = departmentResult.rows[0];\n    const currentTeachersResult = await query(`\n            SELECT u.id, u.full_name, u.account_number\n            FROM teacher_departments td\n            JOIN users u ON td.teacher_id = u.id\n            WHERE td.department_id = $1\n        `, [id]);\n    const currentTeachers = currentTeachersResult.rows;\n    await query(`\n            DELETE FROM teacher_departments \n            WHERE department_id = $1\n        `, [id]);\n    if (currentTeachers.length > 0) {\n      try {\n        await logActivityWithUser(\n          \"department_teacher_removed\",\n          user,\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code,\n            teachers: currentTeachers\n          },\n          getClientAddress(),\n          request.headers.get(\"user-agent\")\n        );\n      } catch (logError) {\n        console.error(\"Error logging teacher removal activity:\", logError);\n      }\n    }\n    if (teachers.length > 0) {\n      const newTeachers = [];\n      for (const teacherId of teachers) {\n        await query(`\n                    INSERT INTO teacher_departments (teacher_id, department_id)\n                    VALUES ($1, $2)\n                `, [teacherId, id]);\n        const teacherInfo = await query(`\n                    SELECT id, full_name, account_number FROM users WHERE id = $1\n                `, [teacherId]);\n        if (teacherInfo.rows.length > 0) {\n          newTeachers.push(teacherInfo.rows[0]);\n        }\n      }\n      try {\n        await logActivityWithUser(\n          \"department_teacher_assigned\",\n          user,\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code,\n            teachers: newTeachers\n          },\n          getClientAddress(),\n          request.headers.get(\"user-agent\")\n        );\n      } catch (logError) {\n        console.error(\"Error logging teacher assignment activity:\", logError);\n      }\n    }\n    const currentSubjectsResult = await query(`\n            SELECT id, name, code FROM subjects WHERE department_id = $1\n        `, [id]);\n    const currentSubjects = currentSubjectsResult.rows;\n    await query(`\n            UPDATE subjects \n            SET department_id = NULL \n            WHERE department_id = $1\n        `, [id]);\n    if (currentSubjects.length > 0) {\n      try {\n        await logActivityWithUser(\n          \"department_subject_removed\",\n          user,\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code,\n            subjects: currentSubjects\n          },\n          getClientAddress(),\n          request.headers.get(\"user-agent\")\n        );\n      } catch (logError) {\n        console.error(\"Error logging subject removal activity:\", logError);\n      }\n    }\n    if (subjects.length > 0) {\n      const newSubjects = [];\n      for (const subjectId of subjects) {\n        await query(`\n                    UPDATE subjects \n                    SET department_id = $1 \n                    WHERE id = $2\n                `, [id, subjectId]);\n        const subjectInfo = await query(`\n                    SELECT id, name, code FROM subjects WHERE id = $1\n                `, [subjectId]);\n        if (subjectInfo.rows.length > 0) {\n          newSubjects.push(subjectInfo.rows[0]);\n        }\n      }\n      try {\n        await logActivityWithUser(\n          \"department_subject_assigned\",\n          user,\n          {\n            department_id: id,\n            department_name: name,\n            department_code: code,\n            subjects: newSubjects\n          },\n          getClientAddress(),\n          request.headers.get(\"user-agent\")\n        );\n      } catch (logError) {\n        console.error(\"Error logging subject assignment activity:\", logError);\n      }\n    }\n    if (basicInfoChanged) {\n      try {\n        await logActivityWithUser(\n          \"department_updated\",\n          user,\n          { department_id: id, department_name: name, department_code: code },\n          getClientAddress(),\n          request.headers.get(\"user-agent\")\n        );\n      } catch (logError) {\n        console.error(\"Error logging department update activity:\", logError);\n      }\n    }\n    return json({\n      success: true,\n      message: \"Department updated successfully\",\n      data: updatedDepartment\n    });\n  } catch (error) {\n    console.error(\"Error updating department:\", error);\n    if (error.code === \"23505\") {\n      if (error.detail && error.detail.includes(\"name\")) {\n        return json({ success: false, error: \"Department name already exists\" }, { status: 400 });\n      } else if (error.detail && error.detail.includes(\"code\")) {\n        return json({ success: false, error: \"Department code already exists\" }, { status: 400 });\n      } else {\n        return json({ success: false, error: \"Department name or code already exists\" }, { status: 400 });\n      }\n    }\n    return json({ success: false, error: \"Failed to update department\" }, { status: 500 });\n  }\n}\nasync function DELETE({ request, getClientAddress }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ success: false, error: \"Unauthorized\" }, { status: 401 });\n    }\n    const { id } = await request.json();\n    if (!id) {\n      return json({ success: false, error: \"Department ID is required\" }, { status: 400 });\n    }\n    const departmentInfo = await query(`\n            SELECT name, code FROM departments WHERE id = $1\n        `, [id]);\n    if (departmentInfo.rows.length === 0) {\n      return json({ success: false, error: \"Department not found\" }, { status: 404 });\n    }\n    const department = departmentInfo.rows[0];\n    const subjectsCount = await query(`\n            SELECT COUNT(*) as count FROM subjects WHERE department_id = $1\n        `, [id]);\n    if (parseInt(subjectsCount.rows[0].count) > 0) {\n      await query(`\n                UPDATE subjects SET department_id = NULL WHERE department_id = $1\n            `, [id]);\n    }\n    await query(`\n            DELETE FROM teacher_departments WHERE department_id = $1\n        `, [id]);\n    await query(`\n            DELETE FROM departments WHERE id = $1\n        `, [id]);\n    try {\n      await logActivityWithUser(\n        \"department_deleted\",\n        user,\n        { department_id: id, department_name: department.name, department_code: department.code },\n        getClientAddress(),\n        request.headers.get(\"user-agent\")\n      );\n    } catch (logError) {\n      console.error(\"Error logging department deletion activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: \"Department deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting department:\", error);\n    return json({ success: false, error: \"Failed to delete department\" }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}