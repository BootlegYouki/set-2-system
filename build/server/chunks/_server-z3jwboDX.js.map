{"version":3,"file":"_server-z3jwboDX.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/grades/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url, request }) {\n  try {\n    const { db } = await connectToDatabase();\n    const student_id = url.searchParams.get(\"student_id\");\n    const teacher_id = url.searchParams.get(\"teacher_id\");\n    const section_id = url.searchParams.get(\"section_id\");\n    const subject_id = url.searchParams.get(\"subject_id\");\n    const school_year = url.searchParams.get(\"school_year\") || \"2024-2025\";\n    const quarter = parseInt(url.searchParams.get(\"quarter\")) || 1;\n    const action = url.searchParams.get(\"action\");\n    if (action === \"student_grades\" && student_id) {\n      const grades = await db.collection(\"grades\").findOne({\n        student_id: new ObjectId(student_id),\n        section_id: new ObjectId(section_id),\n        subject_id: new ObjectId(subject_id),\n        school_year,\n        quarter\n      });\n      return json({\n        success: true,\n        grades: grades || {\n          written_work: [],\n          performance_tasks: [],\n          quarterly_assessment: [],\n          averages: {\n            written_work: 0,\n            performance_tasks: 0,\n            quarterly_assessment: 0,\n            final_grade: 0\n          },\n          verified: false\n        }\n      });\n    }\n    if (action === \"section_grades\" && section_id && subject_id && teacher_id) {\n      const pipeline = [\n        {\n          $match: {\n            section_id: new ObjectId(section_id),\n            subject_id: new ObjectId(subject_id),\n            school_year,\n            quarter\n          }\n        },\n        {\n          $lookup: {\n            from: \"users\",\n            localField: \"student_id\",\n            foreignField: \"_id\",\n            as: \"student\"\n          }\n        },\n        {\n          $unwind: \"$student\"\n        },\n        {\n          $project: {\n            student_id: 1,\n            student_name: \"$student.full_name\",\n            student_number: \"$student.account_number\",\n            written_work: 1,\n            performance_tasks: 1,\n            quarterly_assessment: 1,\n            averages: 1,\n            verified: 1,\n            verified_at: 1,\n            updated_at: 1\n          }\n        },\n        {\n          $sort: { student_name: 1 }\n        }\n      ];\n      const grades = await db.collection(\"grades\").aggregate(pipeline).toArray();\n      return json({\n        success: true,\n        grades\n      });\n    }\n    if (action === \"advisory_grades\" && section_id && teacher_id) {\n      const pipeline = [\n        {\n          $match: {\n            section_id: new ObjectId(section_id),\n            school_year,\n            quarter\n          }\n        },\n        {\n          $lookup: {\n            from: \"users\",\n            localField: \"student_id\",\n            foreignField: \"_id\",\n            as: \"student\"\n          }\n        },\n        {\n          $lookup: {\n            from: \"subjects\",\n            localField: \"subject_id\",\n            foreignField: \"_id\",\n            as: \"subject\"\n          }\n        },\n        {\n          $unwind: \"$student\"\n        },\n        {\n          $unwind: \"$subject\"\n        },\n        {\n          $group: {\n            _id: \"$student_id\",\n            student_name: { $first: \"$student.full_name\" },\n            student_number: { $first: \"$student.account_number\" },\n            subjects: {\n              $push: {\n                subject_id: \"$subject_id\",\n                subject_name: \"$subject.name\",\n                subject_code: \"$subject.code\",\n                averages: \"$averages\",\n                verified: \"$verified\",\n                verified_at: \"$verified_at\"\n              }\n            }\n          }\n        },\n        {\n          $addFields: {\n            overall_average: {\n              $avg: \"$subjects.averages.final_grade\"\n            }\n          }\n        },\n        {\n          $sort: { student_name: 1 }\n        }\n      ];\n      const students = await db.collection(\"grades\").aggregate(pipeline).toArray();\n      return json({\n        success: true,\n        students\n      });\n    }\n    return json({ error: \"Invalid action or missing parameters\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in grades GET:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    console.log(\"POST handler called - attempting database connection...\");\n    const db = await connectToDatabase();\n    console.log(\"Database connection result:\", db);\n    if (!db) {\n      console.error(\"Database connection is null/undefined\");\n      return json({ error: \"Database connection failed\" }, { status: 500 });\n    }\n    const body = await request.json();\n    const { action } = body;\n    if (action === \"add_grade_item\") {\n      const {\n        student_id,\n        teacher_id,\n        section_id,\n        subject_id,\n        school_year = \"2024-2025\",\n        quarter = 1,\n        category,\n        name,\n        score,\n        total_score,\n        date_given\n      } = body;\n      if (!student_id || !teacher_id || !section_id || !subject_id || !category || !name) {\n        return json({ error: \"Missing required fields\" }, { status: 400 });\n      }\n      if (![\"written_work\", \"performance_tasks\", \"quarterly_assessment\"].includes(category)) {\n        return json({ error: \"Invalid category\" }, { status: 400 });\n      }\n      const gradeItem = {\n        name,\n        score: score || 0,\n        total_score: total_score || 100,\n        date_given: date_given ? new Date(date_given) : /* @__PURE__ */ new Date(),\n        created_at: /* @__PURE__ */ new Date()\n      };\n      const filter = {\n        student_id: new ObjectId(student_id),\n        section_id: new ObjectId(section_id),\n        subject_id: new ObjectId(subject_id),\n        school_year,\n        quarter\n      };\n      const update = {\n        $push: {\n          [category]: gradeItem\n        },\n        $setOnInsert: {\n          teacher_id: new ObjectId(teacher_id),\n          written_work: [],\n          performance_tasks: [],\n          quarterly_assessment: [],\n          averages: {\n            written_work: 0,\n            performance_tasks: 0,\n            quarterly_assessment: 0,\n            final_grade: 0\n          },\n          verified: false,\n          created_at: /* @__PURE__ */ new Date()\n        },\n        $set: {\n          updated_at: /* @__PURE__ */ new Date()\n        }\n      };\n      const result = await db.collection(\"grades\").updateOne(filter, update, { upsert: true });\n      await recalculateAverages(db, filter);\n      return json({\n        success: true,\n        message: \"Grade item added successfully\",\n        result\n      });\n    }\n    if (action === \"update_grade\") {\n      const {\n        student_id,\n        section_id,\n        subject_id,\n        school_year = \"2024-2025\",\n        quarter = 1,\n        category,\n        grade_index,\n        score\n      } = body;\n      const filter = {\n        student_id: new ObjectId(student_id),\n        section_id: new ObjectId(section_id),\n        subject_id: new ObjectId(subject_id),\n        school_year,\n        quarter\n      };\n      const existingGrade = await db.collection(\"grades\").findOne(filter);\n      if (existingGrade && existingGrade.verification && existingGrade.verification.verified) {\n        return json({\n          success: false,\n          error: \"Cannot update grades that have been verified by the adviser\"\n        }, { status: 403 });\n      }\n      const update = {\n        $set: {\n          [`${category}.${grade_index}.score`]: score,\n          updated_at: /* @__PURE__ */ new Date()\n        }\n      };\n      await db.collection(\"grades\").updateOne(filter, update);\n      await recalculateAverages(db, filter);\n      return json({\n        success: true,\n        message: \"Grade updated successfully\"\n      });\n    }\n    if (action === \"verify_grades\") {\n      const {\n        student_id,\n        section_id,\n        subject_id,\n        school_year = \"2024-2025\",\n        quarter = 1,\n        teacher_id,\n        verified = true\n      } = body;\n      const filter = {\n        student_id: new ObjectId(student_id),\n        section_id: new ObjectId(section_id),\n        subject_id: new ObjectId(subject_id),\n        school_year,\n        quarter\n      };\n      const update = {\n        $set: {\n          verified,\n          verified_at: verified ? /* @__PURE__ */ new Date() : null,\n          verified_by: verified ? new ObjectId(teacher_id) : null,\n          updated_at: /* @__PURE__ */ new Date()\n        }\n      };\n      await db.collection(\"grades\").updateOne(filter, update);\n      return json({\n        success: true,\n        message: verified ? \"Grades verified successfully\" : \"Grades unverified successfully\"\n      });\n    }\n    if (action === \"submit_final_grades\") {\n      const {\n        section_id,\n        subject_id,\n        grading_period_id = 1,\n        final_grades,\n        teacher_id\n      } = body;\n      console.log(\"Submit final grades request:\", {\n        section_id,\n        subject_id,\n        grading_period_id,\n        teacher_id,\n        final_grades_count: final_grades?.length\n      });\n      if (!section_id || !subject_id || !final_grades || !Array.isArray(final_grades)) {\n        return json({ error: \"Missing required fields\" }, { status: 400 });\n      }\n      if (!teacher_id) {\n        return json({ error: \"Teacher authentication required\" }, { status: 401 });\n      }\n      const processedStudents = [];\n      const errors = [];\n      for (const gradeData of final_grades) {\n        try {\n          const { student_id, written_work_average, performance_tasks_average, quarterly_assessment_average, final_grade, written_work_items, performance_tasks_items, quarterly_assessment_items } = gradeData;\n          console.log(\"Processing student:\", { student_id, final_grade });\n          if (!student_id) {\n            errors.push(\"Missing student_id for one or more students\");\n            continue;\n          }\n          const student = await db.collection(\"users\").findOne({\n            account_number: student_id,\n            account_type: \"student\"\n          });\n          console.log(\"Found student:\", student ? { id: student._id, name: student.full_name } : \"Not found\");\n          if (!student) {\n            errors.push(`Student not found: ${student_id}`);\n            continue;\n          }\n          const gradeDoc = {\n            student_id: student._id,\n            section_id: new ObjectId(section_id),\n            subject_id: new ObjectId(subject_id),\n            teacher_id: new ObjectId(teacher_id),\n            school_year: \"2024-2025\",\n            quarter: grading_period_id,\n            written_work: written_work_items || [],\n            performance_tasks: performance_tasks_items || [],\n            quarterly_assessment: quarterly_assessment_items || [],\n            averages: {\n              written_work: written_work_average || 0,\n              performance_tasks: performance_tasks_average || 0,\n              quarterly_assessment: quarterly_assessment_average || 0,\n              final_grade: final_grade || 0\n            },\n            verified: false,\n            submitted_to_adviser: true,\n            submitted_at: /* @__PURE__ */ new Date(),\n            submitted_by: new ObjectId(teacher_id),\n            created_at: /* @__PURE__ */ new Date(),\n            updated_at: /* @__PURE__ */ new Date()\n          };\n          console.log(\"Saving grade document:\", {\n            student_id: student._id,\n            submitted_to_adviser: gradeDoc.submitted_to_adviser,\n            final_grade: gradeDoc.averages.final_grade\n          });\n          const filter = {\n            student_id: student._id,\n            section_id: new ObjectId(section_id),\n            subject_id: new ObjectId(subject_id),\n            school_year: \"2024-2025\",\n            quarter: grading_period_id\n          };\n          const result = await db.collection(\"grades\").updateOne(\n            filter,\n            { $set: gradeDoc },\n            { upsert: true }\n          );\n          console.log(\"Database update result:\", result);\n          processedStudents.push({\n            student_id,\n            student_name: student.full_name || `${student.first_name} ${student.last_name}`,\n            final_grade\n          });\n        } catch (error) {\n          console.error(`Error processing student ${gradeData.student_id}:`, error);\n          errors.push(`Error processing student ${gradeData.student_id}: ${error.message}`);\n        }\n      }\n      return json({\n        success: true,\n        message: `Final grades submitted to adviser for ${processedStudents.length} students`,\n        processed_students: processedStudents,\n        errors: errors.length > 0 ? errors : void 0\n      });\n    }\n    return json({ error: \"Invalid action\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in grades POST:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nasync function recalculateAverages(db, filter) {\n  const gradeDoc = await db.collection(\"grades\").findOne(filter);\n  if (!gradeDoc) return;\n  const calculateCategoryAverage = (items) => {\n    if (!items || items.length === 0) return 0;\n    const validItems = items.filter((item) => item.score !== null && item.score !== void 0);\n    if (validItems.length === 0) return 0;\n    const totalScore = validItems.reduce((sum, item) => sum + item.score, 0);\n    const totalPossible = validItems.reduce((sum, item) => sum + item.total_score, 0);\n    return totalPossible > 0 ? Math.round(totalScore / totalPossible * 100 * 100) / 100 : 0;\n  };\n  const writtenWorkAvg = calculateCategoryAverage(gradeDoc.written_work);\n  const performanceTasksAvg = calculateCategoryAverage(gradeDoc.performance_tasks);\n  const quarterlyAssessmentAvg = calculateCategoryAverage(gradeDoc.quarterly_assessment);\n  const finalGrade = Math.round((writtenWorkAvg * 0.3 + performanceTasksAvg * 0.5 + quarterlyAssessmentAvg * 0.2) * 100) / 100;\n  await db.collection(\"grades\").updateOne(filter, {\n    $set: {\n      \"averages.written_work\": writtenWorkAvg,\n      \"averages.performance_tasks\": performanceTasksAvg,\n      \"averages.quarterly_assessment\": quarterlyAssessmentAvg,\n      \"averages.final_grade\": finalGrade,\n      updated_at: /* @__PURE__ */ new Date()\n    }\n  });\n}\nasync function DELETE({ request }) {\n  try {\n    const { db } = await connectToDatabase();\n    const body = await request.json();\n    const {\n      student_id,\n      section_id,\n      subject_id,\n      school_year = \"2024-2025\",\n      quarter = 1,\n      category,\n      grade_index\n    } = body;\n    const filter = {\n      student_id: new ObjectId(student_id),\n      section_id: new ObjectId(section_id),\n      subject_id: new ObjectId(subject_id),\n      school_year,\n      quarter\n    };\n    const gradeDoc = await db.collection(\"grades\").findOne(filter);\n    if (!gradeDoc || !gradeDoc[category] || !gradeDoc[category][grade_index]) {\n      return json({ error: \"Grade item not found\" }, { status: 404 });\n    }\n    const update = {\n      $unset: {\n        [`${category}.${grade_index}`]: 1\n      }\n    };\n    await db.collection(\"grades\").updateOne(filter, update);\n    await db.collection(\"grades\").updateOne(filter, {\n      $pull: {\n        [category]: null\n      },\n      $set: {\n        updated_at: /* @__PURE__ */ new Date()\n      }\n    });\n    await recalculateAverages(db, filter);\n    return json({\n      success: true,\n      message: \"Grade item deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error in grades DELETE:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}