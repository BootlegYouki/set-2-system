{"version":3,"file":"_server-j1P8JXDF.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/forgot-password/reset-password/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { c as client } from \"../../../../../chunks/db.js\";\nimport bcrypt from \"bcrypt\";\nasync function POST({ request, getClientAddress }) {\n  try {\n    const { resetToken, code, newPassword } = await request.json();\n    if (!resetToken || !code || !newPassword) {\n      return json({ error: \"Reset token, code, and new password are required\" }, { status: 400 });\n    }\n    if (newPassword.length < 6) {\n      return json({ error: \"Password must be at least 6 characters long\" }, { status: 400 });\n    }\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const usersCollection = db.collection(\"users\");\n    const user = await usersCollection.findOne({\n      password_reset_token: resetToken,\n      password_reset_code: code,\n      $or: [\n        { status: { $exists: false } },\n        { status: \"active\" }\n      ]\n    });\n    if (!user) {\n      return json({ error: \"Invalid reset token or code\" }, { status: 400 });\n    }\n    if (!user.password_reset_expires || /* @__PURE__ */ new Date() > new Date(user.password_reset_expires)) {\n      await usersCollection.updateOne(\n        { _id: user._id },\n        {\n          $unset: {\n            password_reset_code: \"\",\n            password_reset_token: \"\",\n            password_reset_expires: \"\",\n            password_reset_attempts: \"\"\n          }\n        }\n      );\n      return json({ error: \"Reset code has expired. Please request a new one.\" }, { status: 400 });\n    }\n    const hashedPassword = await bcrypt.hash(newPassword, 10);\n    await usersCollection.updateOne(\n      { _id: user._id },\n      {\n        $set: {\n          password_hash: hashedPassword,\n          updated_at: /* @__PURE__ */ new Date()\n        },\n        $unset: {\n          password_reset_code: \"\",\n          password_reset_token: \"\",\n          password_reset_expires: \"\",\n          password_reset_attempts: \"\"\n        }\n      }\n    );\n    try {\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      const activityCollection = db.collection(\"activity_logs\");\n      await activityCollection.insertOne({\n        activity_type: \"password_reset\",\n        user_id: user._id,\n        user_account_number: user.account_number,\n        activity_data: {\n          account_type: user.account_type,\n          full_name: user.full_name,\n          reset_method: \"email_verification\"\n        },\n        ip_address,\n        user_agent,\n        created_at: /* @__PURE__ */ new Date()\n      });\n    } catch (logError) {\n      console.error(\"Error logging password reset activity:\", logError);\n    }\n    import(\"../../../../../chunks/email-helper.js\").then(({ sendPasswordResetConfirmationEmail }) => {\n      sendPasswordResetConfirmationEmail({\n        email: user.email,\n        fullName: user.full_name,\n        accountNumber: user.account_number\n      }).catch((error) => {\n        console.error(\"Error sending password reset confirmation email:\", error);\n      });\n    });\n    return json({\n      success: true,\n      message: \"Password has been reset successfully. You can now login with your new password.\"\n    });\n  } catch (error) {\n    console.error(\"Error resetting password:\", error);\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to reset password\" }, { status: 500 });\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}