{"version":3,"file":"_server-sU-JaWw8.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/student-grades/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport \"../../../../chunks/db.js\";\nimport { v as verifyAuth } from \"../../../../chunks/auth-helper.js\";\nasync function GET({ url, request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const sectionId = url.searchParams.get(\"section_id\");\n    const subjectId = url.searchParams.get(\"subject_id\");\n    const gradingPeriodId = url.searchParams.get(\"grading_period_id\");\n    const studentId = url.searchParams.get(\"student_id\");\n    const action = url.searchParams.get(\"action\");\n    if (action === \"students_with_grades\" && sectionId && subjectId && gradingPeriodId) {\n      const studentsQuery = `\n        SELECT DISTINCT\n          u.id,\n          u.account_number,\n          u.full_name,\n          u.first_name,\n          u.last_name\n        FROM users u\n        JOIN section_students ss ON u.id = ss.student_id\n        WHERE ss.section_id = $1\n        AND u.account_type = 'student'\n        AND ss.status = 'active'\n        AND u.status = 'active'\n        ORDER BY u.full_name\n      `;\n      const students = await query(studentsQuery, [sectionId]);\n      const gradeItemsQuery = `\n        SELECT \n          gi.id,\n          gi.name,\n          gi.total_score,\n          gc.name as category_name,\n          gc.code as category_code,\n          gc.weight as category_weight\n        FROM grade_items gi\n        JOIN grade_categories gc ON gi.category_id = gc.id\n        WHERE gi.section_id = $1\n        AND gi.subject_id = $2\n        AND gi.grading_period_id = $3\n        AND gi.status = 'active'\n        ORDER BY gc.code, gi.id\n      `;\n      const gradeItems = await query(gradeItemsQuery, [sectionId, subjectId, gradingPeriodId]);\n      const gradesQuery = `\n        SELECT \n          sg.student_id,\n          sg.grade_item_id,\n          sg.score,\n          gi.total_score,\n          gc.code as category_code\n        FROM student_grades sg\n        JOIN grade_items gi ON sg.grade_item_id = gi.id\n        JOIN grade_categories gc ON gi.category_id = gc.id\n        WHERE gi.section_id = $1\n        AND gi.subject_id = $2\n        AND gi.grading_period_id = $3\n      `;\n      const grades = await query(gradesQuery, [sectionId, subjectId, gradingPeriodId]);\n      const finalGradesQuery = `\n        SELECT \n          student_id,\n          written_work_average,\n          performance_tasks_average,\n          quarterly_assessment_average,\n          final_grade,\n          letter_grade\n        FROM final_grades\n        WHERE section_id = $1\n        AND subject_id = $2\n        AND grading_period_id = $3\n      `;\n      const finalGrades = await query(finalGradesQuery, [sectionId, subjectId, gradingPeriodId]);\n      const studentsWithGrades = students.rows.map((student) => {\n        const studentGrades = grades.rows.filter((g) => g.student_id === student.id);\n        const studentFinalGrade = finalGrades.rows.find((fg) => fg.student_id === student.id);\n        const writtenWork = [];\n        const performanceTasks = [];\n        const quarterlyAssessment = [];\n        gradeItems.rows.forEach((item) => {\n          const grade = studentGrades.find((g) => g.grade_item_id === item.id);\n          const gradeData = {\n            itemId: item.id,\n            itemName: item.name,\n            totalScore: item.total_score,\n            score: grade ? grade.score : null\n          };\n          if (item.category_code === \"WW\") {\n            writtenWork.push(gradeData);\n          } else if (item.category_code === \"PT\") {\n            performanceTasks.push(gradeData);\n          } else if (item.category_code === \"QA\") {\n            quarterlyAssessment.push(gradeData);\n          }\n        });\n        return {\n          id: student.id,\n          accountNumber: student.account_number,\n          name: student.full_name,\n          firstName: student.first_name,\n          lastName: student.last_name,\n          writtenWork,\n          performanceTasks,\n          quarterlyAssessment,\n          averages: {\n            writtenWork: studentFinalGrade?.written_work_average || 0,\n            performanceTasks: studentFinalGrade?.performance_tasks_average || 0,\n            quarterlyAssessment: studentFinalGrade?.quarterly_assessment_average || 0\n          },\n          finalGrade: studentFinalGrade?.final_grade || 0,\n          letterGrade: studentFinalGrade?.letter_grade || \"\"\n        };\n      });\n      const gradingConfig = {\n        writtenWork: {\n          count: gradeItems.rows.filter((item) => item.category_code === \"WW\").length,\n          weight: gradeItems.rows.find((item) => item.category_code === \"WW\")?.category_weight || 0.3,\n          label: \"WW\",\n          items: gradeItems.rows.filter((item) => item.category_code === \"WW\")\n        },\n        performanceTasks: {\n          count: gradeItems.rows.filter((item) => item.category_code === \"PT\").length,\n          weight: gradeItems.rows.find((item) => item.category_code === \"PT\")?.category_weight || 0.5,\n          label: \"PT\",\n          items: gradeItems.rows.filter((item) => item.category_code === \"PT\")\n        },\n        quarterlyAssessment: {\n          count: gradeItems.rows.filter((item) => item.category_code === \"QA\").length,\n          weight: gradeItems.rows.find((item) => item.category_code === \"QA\")?.category_weight || 0.2,\n          label: \"QA\",\n          items: gradeItems.rows.filter((item) => item.category_code === \"QA\")\n        }\n      };\n      return json({\n        success: true,\n        students: studentsWithGrades,\n        gradingConfig,\n        gradeItems: gradeItems.rows\n      });\n    }\n    if (action === \"grading_periods\") {\n      const periodsQuery = `\n        SELECT id, name, school_year, start_date, end_date, status\n        FROM grading_periods\n        WHERE status = 'active'\n        ORDER BY start_date\n      `;\n      const periods = await query(periodsQuery);\n      return json({ success: true, gradingPeriods: periods.rows });\n    }\n    if (action === \"categories\") {\n      const categoriesQuery = `\n        SELECT id, name, code, weight, description\n        FROM grade_categories\n        ORDER BY id\n      `;\n      const categories = await query(categoriesQuery);\n      return json({ success: true, categories: categories.rows });\n    }\n    return json({ error: \"Invalid action or missing parameters\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in student-grades GET:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const body = await request.json();\n    const { action } = body;\n    if (action === \"create_grade_item\") {\n      const { sectionId, subjectId, teacherId, gradingPeriodId, categoryId, name, description, totalScore, dateGiven, dueDate } = body;\n      const insertQuery = `\n        INSERT INTO grade_items (section_id, subject_id, teacher_id, grading_period_id, category_id, name, description, total_score, date_given, due_date)\n        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)\n        RETURNING *\n      `;\n      const result = await query(insertQuery, [\n        sectionId,\n        subjectId,\n        teacherId,\n        gradingPeriodId,\n        categoryId,\n        name,\n        description,\n        totalScore || 100,\n        dateGiven,\n        dueDate\n      ]);\n      return json({ success: true, gradeItem: result.rows[0] });\n    }\n    if (action === \"update_grade\") {\n      const { studentId, gradeItemId, score, gradedBy } = body;\n      const upsertQuery = `\n        INSERT INTO student_grades (student_id, grade_item_id, score, graded_by, graded_at)\n        VALUES ($1, $2, $3, $4, CURRENT_TIMESTAMP)\n        ON CONFLICT (student_id, grade_item_id)\n        DO UPDATE SET \n          score = EXCLUDED.score,\n          graded_by = EXCLUDED.graded_by,\n          graded_at = EXCLUDED.graded_at,\n          updated_at = CURRENT_TIMESTAMP\n        RETURNING *\n      `;\n      const result = await query(upsertQuery, [studentId, gradeItemId, score, gradedBy]);\n      return json({ success: true, grade: result.rows[0] });\n    }\n    if (action === \"bulk_update_grades\") {\n      const { grades, gradedBy } = body;\n      const results = [];\n      for (const grade of grades) {\n        const { studentId, gradeItemId, score } = grade;\n        const upsertQuery = `\n          INSERT INTO student_grades (student_id, grade_item_id, score, graded_by, graded_at)\n          VALUES ($1, $2, $3, $4, CURRENT_TIMESTAMP)\n          ON CONFLICT (student_id, grade_item_id)\n          DO UPDATE SET \n            score = EXCLUDED.score,\n            graded_by = EXCLUDED.graded_by,\n            graded_at = EXCLUDED.graded_at,\n            updated_at = CURRENT_TIMESTAMP\n          RETURNING *\n        `;\n        const result = await query(upsertQuery, [studentId, gradeItemId, score, gradedBy]);\n        results.push(result.rows[0]);\n      }\n      return json({ success: true, grades: results });\n    }\n    return json({ error: \"Invalid action\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in student-grades POST:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nasync function PUT({ request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const body = await request.json();\n    const { action } = body;\n    if (action === \"update_grade_item\") {\n      const { id, name, description, totalScore, dateGiven, dueDate } = body;\n      const updateQuery = `\n        UPDATE grade_items \n        SET name = $2, description = $3, total_score = $4, date_given = $5, due_date = $6, updated_at = CURRENT_TIMESTAMP\n        WHERE id = $1\n        RETURNING *\n      `;\n      const result = await query(updateQuery, [id, name, description, totalScore, dateGiven, dueDate]);\n      if (result.rows.length === 0) {\n        return json({ error: \"Grade item not found\" }, { status: 404 });\n      }\n      return json({ success: true, gradeItem: result.rows[0] });\n    }\n    return json({ error: \"Invalid action\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in student-grades PUT:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nasync function DELETE({ request }) {\n  try {\n    const authResult = await verifyAuth(request);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    const body = await request.json();\n    const { action } = body;\n    if (action === \"delete_grade_item\") {\n      const { id } = body;\n      const deleteQuery = `\n        UPDATE grade_items \n        SET status = 'deleted', updated_at = CURRENT_TIMESTAMP\n        WHERE id = $1\n        RETURNING *\n      `;\n      const result = await query(deleteQuery, [id]);\n      if (result.rows.length === 0) {\n        return json({ error: \"Grade item not found\" }, { status: 404 });\n      }\n      return json({ success: true, message: \"Grade item deleted successfully\" });\n    }\n    return json({ error: \"Invalid action\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in student-grades DELETE:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}