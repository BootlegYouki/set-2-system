{"version":3,"file":"_server-BwUkOvVm.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/activity-types/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { q as query } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nfunction getRandomColor() {\n  const colors = [\n    \"#FF6B6B\",\n    \"#4ECDC4\",\n    \"#45B7D1\",\n    \"#96CEB4\",\n    \"#FFEAA7\",\n    \"#DDA0DD\",\n    \"#98D8C8\",\n    \"#F7DC6F\",\n    \"#BB8FCE\",\n    \"#85C1E9\",\n    \"#F8C471\",\n    \"#82E0AA\",\n    \"#F1948A\",\n    \"#85C1E9\",\n    \"#D7BDE2\"\n  ];\n  return colors[Math.floor(Math.random() * colors.length)];\n}\nasync function GET({ url }) {\n  try {\n    const searchTerm = url.searchParams.get(\"search\") || \"\";\n    let sqlQuery = `\n      SELECT \n        id,\n        name,\n        code,\n        color,\n        icon,\n        created_at,\n        updated_at\n      FROM activity_types\n    `;\n    const params = [];\n    let paramIndex = 1;\n    if (searchTerm) {\n      sqlQuery += ` WHERE (LOWER(name) LIKE $${paramIndex} OR LOWER(code) LIKE $${paramIndex})`;\n      params.push(`%${searchTerm.toLowerCase()}%`);\n      paramIndex++;\n    }\n    sqlQuery += \" ORDER BY created_at DESC\";\n    const result = await query(sqlQuery, params);\n    const activityTypes = result.rows.map((activity) => ({\n      id: activity.id,\n      name: activity.name,\n      code: activity.code,\n      color: activity.color,\n      icon: activity.icon,\n      createdAt: activity.created_at,\n      createdDate: new Date(activity.created_at).toLocaleDateString(\"en-US\"),\n      updatedDate: new Date(activity.updated_at).toLocaleDateString(\"en-US\")\n    }));\n    return json({\n      success: true,\n      data: activityTypes\n    });\n  } catch (error) {\n    console.error(\"Error fetching activity types:\", error);\n    return json({\n      success: false,\n      message: \"Failed to fetch activity types: \" + error.message\n    }, { status: 500 });\n  }\n}\nasync function POST({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    const { name, code, icon } = data;\n    if (!name || !code) {\n      return json({\n        success: false,\n        message: \"Name and code are required\"\n      }, { status: 400 });\n    }\n    const existingActivity = await query(\n      \"SELECT id FROM activity_types WHERE code = $1\",\n      [code]\n    );\n    if (existingActivity.rows.length > 0) {\n      return json({\n        success: false,\n        message: \"Activity type code already exists\"\n      }, { status: 409 });\n    }\n    const randomColor = getRandomColor();\n    const result = await query(\n      `INSERT INTO activity_types (name, code, color, icon) \n       VALUES ($1, $2, $3, $4) \n       RETURNING id, name, code, color, icon, created_at, updated_at`,\n      [name, code, randomColor, icon || \"event\"]\n    );\n    const newActivity = result.rows[0];\n    try {\n      const user = await getUserFromRequest(request);\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"activity_type_created\",\n        user,\n        {\n          name: newActivity.name,\n          code: newActivity.code,\n          color: newActivity.color,\n          icon: newActivity.icon\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging activity type creation activity:\", logError);\n    }\n    const formattedActivity = {\n      id: newActivity.id,\n      name: newActivity.name,\n      code: newActivity.code,\n      color: newActivity.color,\n      icon: newActivity.icon,\n      createdAt: newActivity.created_at,\n      createdDate: new Date(newActivity.created_at).toLocaleDateString(\"en-US\"),\n      updatedDate: new Date(newActivity.updated_at).toLocaleDateString(\"en-US\")\n    };\n    return json({\n      success: true,\n      message: \"Activity type created successfully\",\n      data: formattedActivity\n    });\n  } catch (error) {\n    console.error(\"Error creating activity type:\", error);\n    return json({\n      success: false,\n      message: \"Failed to create activity type: \" + error.message\n    }, { status: 500 });\n  }\n}\nasync function PUT({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    const { id, name, code, icon } = data;\n    if (!id || !name || !code) {\n      return json({\n        success: false,\n        message: \"ID, name, and code are required\"\n      }, { status: 400 });\n    }\n    const existingActivity = await query(\n      \"SELECT * FROM activity_types WHERE id = $1\",\n      [id]\n    );\n    if (existingActivity.rows.length === 0) {\n      return json({\n        success: false,\n        message: \"Activity type not found\"\n      }, { status: 404 });\n    }\n    if (existingActivity.rows[0].code !== code) {\n      const codeExists = await query(\n        \"SELECT id FROM activity_types WHERE code = $1 AND id != $2\",\n        [code, id]\n      );\n      if (codeExists.rows.length > 0) {\n        return json({\n          success: false,\n          message: \"Activity type code already exists\"\n        }, { status: 409 });\n      }\n    }\n    const result = await query(\n      `UPDATE activity_types \n       SET name = $1, code = $2, icon = $3, updated_at = CURRENT_TIMESTAMP\n       WHERE id = $4\n       RETURNING id, name, code, color, icon, created_at, updated_at`,\n      [name, code, icon || \"event\", id]\n    );\n    const updatedActivity = result.rows[0];\n    try {\n      const user = await getUserFromRequest(request);\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"activity_type_updated\",\n        user,\n        {\n          id: updatedActivity.id,\n          name: updatedActivity.name,\n          code: updatedActivity.code,\n          previous_name: existingActivity.rows[0].name,\n          previous_code: existingActivity.rows[0].code\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging activity type update activity:\", logError);\n    }\n    const formattedActivity = {\n      id: updatedActivity.id,\n      name: updatedActivity.name,\n      code: updatedActivity.code,\n      color: updatedActivity.color,\n      icon: updatedActivity.icon,\n      createdAt: updatedActivity.created_at,\n      createdDate: new Date(updatedActivity.created_at).toLocaleDateString(\"en-US\"),\n      updatedDate: new Date(updatedActivity.updated_at).toLocaleDateString(\"en-US\")\n    };\n    return json({\n      success: true,\n      message: \"Activity type updated successfully\",\n      data: formattedActivity\n    });\n  } catch (error) {\n    console.error(\"Error updating activity type:\", error);\n    return json({\n      success: false,\n      message: \"Failed to update activity type: \" + error.message\n    }, { status: 500 });\n  }\n}\nasync function DELETE({ request, getClientAddress }) {\n  try {\n    const data = await request.json();\n    const { id } = data;\n    if (!id) {\n      return json({\n        success: false,\n        message: \"Activity type ID is required\"\n      }, { status: 400 });\n    }\n    const existingActivity = await query(\n      \"SELECT * FROM activity_types WHERE id = $1\",\n      [id]\n    );\n    if (existingActivity.rows.length === 0) {\n      return json({\n        success: false,\n        message: \"Activity type not found\"\n      }, { status: 404 });\n    }\n    await query(\"DELETE FROM activity_types WHERE id = $1\", [id]);\n    try {\n      const user = await getUserFromRequest(request);\n      const ip_address = getClientAddress();\n      const user_agent = request.headers.get(\"user-agent\");\n      await logActivityWithUser(\n        \"activity_type_deleted\",\n        user,\n        {\n          id: existingActivity.rows[0].id,\n          name: existingActivity.rows[0].name,\n          code: existingActivity.rows[0].code\n        },\n        ip_address,\n        user_agent\n      );\n    } catch (logError) {\n      console.error(\"Error logging activity type deletion activity:\", logError);\n    }\n    return json({\n      success: true,\n      message: \"Activity type deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting activity type:\", error);\n    return json({\n      success: false,\n      message: \"Failed to delete activity type: \" + error.message\n    }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}