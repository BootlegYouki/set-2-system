{"version":3,"file":"_server-Ce7uMkOQ.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/grades/save/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nimport { v as verifyAuth } from \"../../../../../chunks/auth-helper.js\";\nasync function POST({ request }) {\n  console.log(\"=== GRADES SAVE API CALLED ===\");\n  try {\n    const authResult = await verifyAuth(request, [\"teacher\"]);\n    if (!authResult.success) {\n      console.log(\"Authentication failed:\", authResult.error);\n      return json({ error: authResult.error }, { status: authResult.status || 401 });\n    }\n    console.log(\"User authenticated:\", authResult.user.account_number);\n    const body = await request.json();\n    console.log(\"Request body received:\", JSON.stringify(body, null, 2));\n    const { section_id, subject_id, grading_period_id, grading_config, grades } = body;\n    if (!section_id || !subject_id || !grading_period_id || !grades || !Array.isArray(grades)) {\n      return json({ error: \"Missing required fields\" }, { status: 400 });\n    }\n    const teacherId = authResult.user.id;\n    const db = await connectToDatabase();\n    try {\n      const schoolYearSetting = await db.collection(\"admin_settings\").findOne({\n        setting_key: \"current_school_year\"\n      });\n      const currentSchoolYear = schoolYearSetting?.setting_value || \"2025-2026\";\n      console.log(`Using school year: ${currentSchoolYear}, quarter: ${grading_period_id}`);\n      const results = {\n        writtenWork: [],\n        performanceTasks: [],\n        quarterlyAssessment: []\n      };\n      for (const studentGrade of grades) {\n        const studentAccountNumber = studentGrade.student_id;\n        console.log(`Processing student: ${studentAccountNumber}`);\n        console.log(\"Student grade data:\", JSON.stringify(studentGrade, null, 2));\n        let studentId;\n        try {\n          const student = await db.collection(\"users\").findOne({\n            account_number: studentAccountNumber,\n            account_type: \"student\"\n          });\n          if (!student) {\n            console.log(`Student not found: ${studentAccountNumber}`);\n            continue;\n          }\n          studentId = student._id.toString();\n          console.log(`Found student ID: ${studentId} for account: ${studentAccountNumber}`);\n        } catch (error) {\n          console.error(`Error finding student ${studentAccountNumber}:`, error);\n          continue;\n        }\n        const gradeData = {\n          student_id: new ObjectId(studentId),\n          section_id: new ObjectId(section_id),\n          subject_id: new ObjectId(subject_id),\n          school_year: currentSchoolYear,\n          // Use dynamic school year from admin settings\n          quarter: grading_period_id,\n          // Use the quarter passed from the frontend\n          written_work: studentGrade.writtenWork || [],\n          performance_tasks: studentGrade.performanceTasks || [],\n          quarterly_assessment: studentGrade.quarterlyAssessment || [],\n          averages: {\n            written_work: 0,\n            performance_tasks: 0,\n            quarterly_assessment: 0,\n            final_grade: 0\n          },\n          verification: {\n            verified: false,\n            verified_by: null,\n            verified_at: null\n          },\n          updated_at: /* @__PURE__ */ new Date(),\n          updated_by: teacherId\n        };\n        console.log(\"Prepared grade data for MongoDB:\", JSON.stringify(gradeData, null, 2));\n        if (gradeData.written_work.length > 0) {\n          const validScores = gradeData.written_work.filter((score) => score !== null && score !== void 0 && score !== \"\" && score !== 0);\n          if (validScores.length > 0) {\n            gradeData.averages.written_work = validScores.reduce((sum, score) => sum + parseFloat(score), 0) / validScores.length;\n          }\n        }\n        if (gradeData.performance_tasks.length > 0) {\n          const validScores = gradeData.performance_tasks.filter((score) => score !== null && score !== void 0 && score !== \"\" && score !== 0);\n          if (validScores.length > 0) {\n            gradeData.averages.performance_tasks = validScores.reduce((sum, score) => sum + parseFloat(score), 0) / validScores.length;\n          }\n        }\n        if (gradeData.quarterly_assessment.length > 0) {\n          const validScores = gradeData.quarterly_assessment.filter((score) => score !== null && score !== void 0 && score !== \"\" && score !== 0);\n          if (validScores.length > 0) {\n            gradeData.averages.quarterly_assessment = validScores.reduce((sum, score) => sum + parseFloat(score), 0) / validScores.length;\n          }\n        }\n        const wwWeight = 0.3;\n        const ptWeight = 0.5;\n        const qaWeight = 0.2;\n        gradeData.averages.final_grade = gradeData.averages.written_work * wwWeight + gradeData.averages.performance_tasks * ptWeight + gradeData.averages.quarterly_assessment * qaWeight;\n        const filter = {\n          student_id: new ObjectId(studentId),\n          section_id: new ObjectId(section_id),\n          subject_id: new ObjectId(subject_id),\n          school_year: gradeData.school_year,\n          quarter: gradeData.quarter\n        };\n        const existingGrade = await db.collection(\"grades\").findOne(filter);\n        if (existingGrade && existingGrade.verification && existingGrade.verification.verified) {\n          console.log(`Skipping update for verified grades - student ${studentAccountNumber}`);\n          continue;\n        }\n        const result = await db.collection(\"grades\").updateOne(\n          filter,\n          { $set: gradeData },\n          { upsert: true }\n        );\n        console.log(`Grade record updated for student ${studentAccountNumber}:`, result);\n      }\n      return json({\n        success: true,\n        message: \"Grades saved successfully\",\n        results\n      });\n    } catch (error) {\n      console.error(\"Database operation error:\", error);\n      console.error(\"Error details:\", {\n        message: error.message,\n        stack: error.stack,\n        sectionId: section_id,\n        subjectId: subject_id,\n        gradingPeriodId: grading_period_id,\n        gradesCount: grades?.length\n      });\n      throw error;\n    }\n  } catch (error) {\n    console.error(\"Error saving grades:\", error);\n    console.error(\"Error details:\", {\n      message: error.message,\n      stack: error.stack\n    });\n    return json({ error: \"Internal server error\", details: error.message }, { status: 500 });\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}