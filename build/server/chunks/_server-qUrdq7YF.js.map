{"version":3,"file":"_server-qUrdq7YF.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/teacher-sections/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { q as query } from \"../../../../chunks/db.js\";\nasync function GET({ url }) {\n  try {\n    const teacherId = url.searchParams.get(\"teacherId\");\n    const schoolYear = url.searchParams.get(\"schoolYear\") || \"2024-2025\";\n    if (!teacherId) {\n      return json({\n        success: false,\n        error: \"Teacher ID is required\"\n      }, { status: 400 });\n    }\n    const sectionsQuery = `\n            SELECT DISTINCT \n                s.id as section_id,\n                s.name as section_name,\n                s.grade_level,\n                s.school_year,\n                COUNT(DISTINCT ss.student_id) as student_count,\n                COUNT(DISTINCT sch.subject_id) as subject_count,\n                ARRAY_AGG(DISTINCT sub.name) FILTER (WHERE sub.name IS NOT NULL) as subjects\n            FROM schedules sch\n            JOIN sections s ON sch.section_id = s.id\n            LEFT JOIN section_students ss ON s.id = ss.section_id AND ss.status = 'active'\n            LEFT JOIN subjects sub ON sch.subject_id = sub.id\n            WHERE sch.teacher_id = $1 \n                AND s.school_year = $2\n                AND s.status = 'active'\n            GROUP BY s.id, s.name, s.grade_level, s.school_year\n            ORDER BY s.grade_level, s.name\n        `;\n    const result = await query(sectionsQuery, [parseInt(teacherId), schoolYear]);\n    const sectionsByGrade = {};\n    let totalSections = 0;\n    let totalStudents = 0;\n    result.rows.forEach((row) => {\n      const gradeLevel = row.grade_level;\n      if (!sectionsByGrade[gradeLevel]) {\n        sectionsByGrade[gradeLevel] = {\n          yearLevel: gradeLevel,\n          gradeName: `Grade ${gradeLevel}`,\n          sections: []\n        };\n      }\n      sectionsByGrade[gradeLevel].sections.push({\n        id: row.section_id,\n        name: row.section_name,\n        students: parseInt(row.student_count) || 0,\n        subjects: row.subjects || [],\n        subjectCount: parseInt(row.subject_count) || 0\n      });\n      totalSections++;\n      totalStudents += parseInt(row.student_count) || 0;\n    });\n    const classData = Object.values(sectionsByGrade);\n    const yearLevels = Object.keys(sectionsByGrade).map((level) => parseInt(level));\n    const stats = {\n      yearLevels,\n      totalSections,\n      totalStudents,\n      averagePerSection: totalSections > 0 ? Math.round(totalStudents / totalSections) : 0\n    };\n    return json({\n      success: true,\n      data: {\n        classData,\n        stats\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching teacher sections:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch teacher sections\"\n    }, { status: 500 });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}