{"version":3,"file":"_server-DeGLERlJ.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/student-todos/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport \"../../../../chunks/db.js\";\nimport \"mongodb\";\nasync function GET({ url }) {\n  try {\n    const studentId = url.searchParams.get(\"student_id\");\n    if (!studentId) {\n      return json({ error: \"student_id parameter is required\" }, { status: 400 });\n    }\n    const studentCheck = await query(`\n      SELECT id FROM users \n      WHERE id = $1 AND account_type = 'student' AND (status IS NULL OR status = 'active')\n    `, [studentId]);\n    if (studentCheck.rows.length === 0) {\n      return json({ error: \"Student not found or invalid account type\" }, { status: 404 });\n    }\n    const todosResult = await query(`\n      SELECT \n        id,\n        title,\n        description,\n        category,\n        due_date,\n        completed,\n        created_at,\n        updated_at,\n        completed_at\n      FROM student_todos \n      WHERE student_id = $1\n      ORDER BY \n        completed ASC,\n        CASE \n          WHEN due_date IS NULL THEN 1 \n          ELSE 0 \n        END,\n        due_date ASC,\n        created_at DESC\n    `, [studentId]);\n    const todos = todosResult.rows.map((todo) => ({\n      id: todo.id,\n      title: todo.title,\n      description: todo.description,\n      category: todo.category,\n      dueDate: todo.due_date ? (() => {\n        const date = new Date(todo.due_date);\n        const localDate = new Date(date.getTime() + 8 * 60 * 60 * 1e3);\n        const year = localDate.getUTCFullYear();\n        const month = String(localDate.getUTCMonth() + 1).padStart(2, \"0\");\n        const day = String(localDate.getUTCDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n      })() : null,\n      completed: todo.completed,\n      createdAt: todo.created_at,\n      updatedAt: todo.updated_at,\n      completedAt: todo.completed_at\n    }));\n    return json({ success: true, data: todos });\n  } catch (error) {\n    console.error(\"Error in GET /api/student-todos:\", error);\n    if (error.code === \"ECONNREFUSED\" || error.code === \"ENOTFOUND\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to fetch todos\" }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    const { studentId, title, description, category, dueDate } = await request.json();\n    if (!studentId || !title) {\n      return json({ error: \"studentId and title are required\" }, { status: 400 });\n    }\n    const validCategories = [\"assignment\", \"study\", \"personal\", \"project\", \"exam\"];\n    if (category && !validCategories.includes(category)) {\n      return json({ error: \"Invalid category\" }, { status: 400 });\n    }\n    const studentCheck = await query(`\n      SELECT id FROM users \n      WHERE id = $1 AND account_type = 'student' AND (status IS NULL OR status = 'active')\n    `, [studentId]);\n    if (studentCheck.rows.length === 0) {\n      return json({ error: \"Student not found or invalid account type\" }, { status: 404 });\n    }\n    console.log(\"Received dueDate:\", dueDate);\n    const processedDate = dueDate ? /* @__PURE__ */ new Date(dueDate + \"T00:00:00.000Z\") : null;\n    console.log(\"Processed dueDate object:\", processedDate);\n    console.log(\"Processed dueDate ISO:\", processedDate ? processedDate.toISOString() : null);\n    const result = await query(`\n      INSERT INTO student_todos (student_id, title, description, category, due_date)\n      VALUES ($1, $2, $3, $4, $5)\n      RETURNING \n        id,\n        title,\n        description,\n        category,\n        due_date,\n        completed,\n        created_at,\n        updated_at,\n        completed_at\n    `, [\n      studentId,\n      title.trim(),\n      description ? description.trim() : null,\n      category || \"personal\",\n      processedDate\n      // Use the processed Date object\n    ]);\n    const newTodo = result.rows[0];\n    const formattedTodo = {\n      id: newTodo.id,\n      title: newTodo.title,\n      description: newTodo.description,\n      category: newTodo.category,\n      dueDate: newTodo.due_date ? newTodo.due_date.toISOString().split(\"T\")[0] : null,\n      completed: newTodo.completed,\n      createdAt: newTodo.created_at,\n      updatedAt: newTodo.updated_at,\n      completedAt: newTodo.completed_at\n    };\n    return json({ success: true, data: formattedTodo }, { status: 201 });\n  } catch (error) {\n    console.error(\"Error in POST /api/student-todos:\", error);\n    if (error.code === \"ECONNREFUSED\" || error.code === \"ENOTFOUND\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to create todo\" }, { status: 500 });\n  }\n}\nasync function PUT({ request }) {\n  try {\n    const { id, studentId, title, description, category, dueDate, completed } = await request.json();\n    if (!id || !studentId) {\n      return json({ error: \"id and studentId are required\" }, { status: 400 });\n    }\n    if (category) {\n      const validCategories = [\"assignment\", \"study\", \"personal\", \"project\", \"exam\"];\n      if (!validCategories.includes(category)) {\n        return json({ error: \"Invalid category\" }, { status: 400 });\n      }\n    }\n    const todoCheck = await query(`\n      SELECT st.id \n      FROM student_todos st\n      JOIN users u ON st.student_id = u.id\n      WHERE st.id = $1 AND st.student_id = $2 AND u.account_type = 'student' AND (u.status IS NULL OR u.status = 'active')\n    `, [id, studentId]);\n    if (todoCheck.rows.length === 0) {\n      return json({ error: \"Todo not found or access denied\" }, { status: 404 });\n    }\n    const updateFields = [];\n    const values = [];\n    let paramCount = 1;\n    if (title !== void 0) {\n      updateFields.push(`title = $${paramCount++}`);\n      values.push(title.trim());\n    }\n    if (description !== void 0) {\n      updateFields.push(`description = $${paramCount++}`);\n      values.push(description ? description.trim() : null);\n    }\n    if (category !== void 0) {\n      updateFields.push(`category = $${paramCount++}`);\n      values.push(category);\n    }\n    if (dueDate !== void 0) {\n      updateFields.push(`due_date = $${paramCount++}`);\n      values.push(dueDate || null);\n    }\n    if (completed !== void 0) {\n      updateFields.push(`completed = $${paramCount++}`);\n      values.push(completed);\n    }\n    if (updateFields.length === 0) {\n      return json({ error: \"No fields to update\" }, { status: 400 });\n    }\n    values.push(id, studentId);\n    const updateQuery = `\n      UPDATE student_todos \n      SET ${updateFields.join(\", \")}\n      WHERE id = $${paramCount++} AND student_id = $${paramCount++}\n      RETURNING \n        id,\n        title,\n        description,\n        category,\n        due_date,\n        completed,\n        created_at,\n        updated_at,\n        completed_at\n    `;\n    const result = await query(updateQuery, values);\n    if (result.rows.length === 0) {\n      return json({ error: \"Todo not found\" }, { status: 404 });\n    }\n    const updatedTodo = result.rows[0];\n    const formattedTodo = {\n      id: updatedTodo.id,\n      title: updatedTodo.title,\n      description: updatedTodo.description,\n      category: updatedTodo.category,\n      dueDate: updatedTodo.due_date ? updatedTodo.due_date.toISOString().split(\"T\")[0] : null,\n      completed: updatedTodo.completed,\n      createdAt: updatedTodo.created_at,\n      updatedAt: updatedTodo.updated_at,\n      completedAt: updatedTodo.completed_at\n    };\n    return json({ success: true, data: formattedTodo });\n  } catch (error) {\n    console.error(\"Error in PUT /api/student-todos:\", error);\n    if (error.code === \"ECONNREFUSED\" || error.code === \"ENOTFOUND\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to update todo\" }, { status: 500 });\n  }\n}\nasync function DELETE({ request }) {\n  try {\n    const { id, studentId } = await request.json();\n    if (!id || !studentId) {\n      return json({ error: \"id and studentId are required\" }, { status: 400 });\n    }\n    const todoCheck = await query(`\n      SELECT st.id \n      FROM student_todos st\n      JOIN users u ON st.student_id = u.id\n      WHERE st.id = $1 AND st.student_id = $2 AND u.account_type = 'student' AND (u.status IS NULL OR u.status = 'active')\n    `, [id, studentId]);\n    if (todoCheck.rows.length === 0) {\n      return json({ error: \"Todo not found or access denied\" }, { status: 404 });\n    }\n    const result = await query(`\n      DELETE FROM student_todos \n      WHERE id = $1 AND student_id = $2\n      RETURNING id\n    `, [id, studentId]);\n    if (result.rows.length === 0) {\n      return json({ error: \"Todo not found\" }, { status: 404 });\n    }\n    return json({ success: true, message: \"Todo deleted successfully\" });\n  } catch (error) {\n    console.error(\"Error in DELETE /api/student-todos:\", error);\n    if (error.code === \"ECONNREFUSED\" || error.code === \"ENOTFOUND\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to delete todo\" }, { status: 500 });\n  }\n}\nexport {\n  DELETE,\n  GET,\n  POST,\n  PUT\n};\n"],"names":[],"mappings":"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"}