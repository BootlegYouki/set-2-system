{"version":3,"file":"_server-BmGQi5_f.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/class-students/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { q as query } from \"../../../../chunks/db.js\";\nasync function GET({ url }) {\n  try {\n    const sectionId = url.searchParams.get(\"sectionId\");\n    const teacherId = url.searchParams.get(\"teacherId\");\n    const schoolYear = url.searchParams.get(\"schoolYear\") || \"2024-2025\";\n    if (!sectionId) {\n      return json({\n        success: false,\n        error: \"Section ID is required\"\n      }, { status: 400 });\n    }\n    if (teacherId) {\n      const accessCheck = await query(`\n                SELECT COUNT(*) as count\n                FROM schedules sch\n                JOIN sections s ON sch.section_id = s.id\n                WHERE sch.teacher_id = $1 \n                    AND s.id = $2 \n                    AND s.school_year = $3\n                    AND s.status = 'active'\n            `, [parseInt(teacherId), parseInt(sectionId), schoolYear]);\n      if (accessCheck.rows[0].count === \"0\") {\n        return json({\n          success: false,\n          error: \"Access denied to this section\"\n        }, { status: 403 });\n      }\n    }\n    const sectionQuery = `\n            SELECT \n                s.id,\n                s.name as section_name,\n                s.grade_level,\n                s.school_year,\n                u.first_name as adviser_first_name,\n                u.last_name as adviser_last_name,\n                r.name as room_name\n            FROM sections s\n            LEFT JOIN users u ON s.adviser_id = u.id\n            LEFT JOIN rooms r ON s.room_id = r.id\n            WHERE s.id = $1\n        `;\n    const sectionResult = await query(sectionQuery, [parseInt(sectionId)]);\n    if (sectionResult.rows.length === 0) {\n      return json({\n        success: false,\n        error: \"Section not found\"\n      }, { status: 404 });\n    }\n    const sectionInfo = sectionResult.rows[0];\n    const studentsQuery = `\n            SELECT \n                u.id,\n                u.account_number,\n                u.first_name,\n                u.last_name,\n                u.full_name,\n                u.email,\n                u.grade_level,\n                ss.enrolled_at,\n                ss.status as enrollment_status\n            FROM section_students ss\n            JOIN users u ON ss.student_id = u.id\n            WHERE ss.section_id = $1 \n                AND ss.status = 'active'\n            ORDER BY u.last_name, u.first_name\n        `;\n    const studentsResult = await query(studentsQuery, [parseInt(sectionId)]);\n    let subjectsQuery = `\n            SELECT DISTINCT \n                sub.id,\n                sub.name,\n                sub.code\n            FROM schedules sch\n            JOIN subjects sub ON sch.subject_id = sub.id\n            WHERE sch.section_id = $1\n        `;\n    const queryParams = [parseInt(sectionId)];\n    if (teacherId) {\n      subjectsQuery += \" AND sch.teacher_id = $2\";\n      queryParams.push(parseInt(teacherId));\n    }\n    subjectsQuery += \" ORDER BY sub.name\";\n    const subjectsResult = await query(subjectsQuery, queryParams);\n    const studentsWithGrades = [];\n    for (const student of studentsResult.rows) {\n      const gradesQuery = `\n                SELECT \n                    sg.score,\n                    gi.name as item_name,\n                    gc.code as category_code,\n                    gi.total_score\n                FROM student_grades sg\n                JOIN grade_items gi ON sg.grade_item_id = gi.id\n                JOIN grade_categories gc ON gi.category_id = gc.id\n                WHERE sg.student_id = $1\n                    AND gi.section_id = $2\n                ORDER BY gc.code, gi.id\n            `;\n      const gradesResult = await query(gradesQuery, [student.id, parseInt(sectionId)]);\n      const writtenWork = [];\n      const performanceTasks = [];\n      const quarterlyAssessment = [];\n      gradesResult.rows.forEach((grade) => {\n        if (grade.category_code === \"WW\") {\n          writtenWork.push(grade.score || 0);\n        } else if (grade.category_code === \"PT\") {\n          performanceTasks.push(grade.score || 0);\n        } else if (grade.category_code === \"QA\") {\n          quarterlyAssessment.push(grade.score || 0);\n        }\n      });\n      while (writtenWork.length < 3) writtenWork.push(0);\n      while (performanceTasks.length < 2) performanceTasks.push(0);\n      while (quarterlyAssessment.length < 1) quarterlyAssessment.push(0);\n      studentsWithGrades.push({\n        id: student.account_number || student.id.toString(),\n        name: student.full_name,\n        firstName: student.first_name,\n        lastName: student.last_name,\n        email: student.email,\n        enrollmentStatus: student.enrollment_status,\n        enrolledAt: student.enrolled_at,\n        writtenWork,\n        performanceTasks,\n        quarterlyAssessment\n      });\n    }\n    return json({\n      success: true,\n      data: {\n        section: {\n          id: sectionInfo.id,\n          name: sectionInfo.section_name,\n          gradeLevel: sectionInfo.grade_level,\n          schoolYear: sectionInfo.school_year,\n          adviser: sectionInfo.adviser_first_name && sectionInfo.adviser_last_name ? `${sectionInfo.adviser_first_name} ${sectionInfo.adviser_last_name}` : null,\n          room: sectionInfo.room_name\n        },\n        subjects: subjectsResult.rows,\n        students: studentsWithGrades,\n        totalStudents: studentsWithGrades.length\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching class students:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch class students\"\n    }, { status: 500 });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}