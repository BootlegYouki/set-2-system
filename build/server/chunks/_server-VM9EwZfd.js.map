{"version":3,"file":"_server-VM9EwZfd.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/document-requests/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url, request }) {\n  try {\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const db = await connectToDatabase();\n    const documentRequestsCollection = db.collection(\"document_requests\");\n    const usersCollection = db.collection(\"users\");\n    const studentId = url.searchParams.get(\"student_id\");\n    const adminView = url.searchParams.get(\"admin_view\") === \"true\";\n    if (adminView && user.account_type !== \"admin\") {\n      return json({ error: \"Admin access required\" }, { status: 403 });\n    }\n    if (!adminView && !studentId) {\n      return json({ error: \"Student ID is required\" }, { status: 400 });\n    }\n    let documentRequests;\n    if (adminView) {\n      documentRequests = await documentRequestsCollection.aggregate([\n        {\n          $addFields: {\n            student_id_obj: { $toObjectId: \"$student_id\" }\n          }\n        },\n        {\n          $lookup: {\n            from: \"users\",\n            localField: \"student_id_obj\",\n            foreignField: \"_id\",\n            as: \"student\"\n          }\n        },\n        {\n          $unwind: \"$student\"\n        },\n        {\n          $match: {\n            \"student.account_type\": \"student\"\n          }\n        },\n        {\n          $sort: { created_at: -1 }\n        }\n      ]).toArray();\n    } else {\n      documentRequests = await documentRequestsCollection.find({\n        student_id: studentId\n      }).sort({ created_at: -1 }).toArray();\n    }\n    const formattedRequests = documentRequests.map((request2) => {\n      const baseRequest = {\n        id: request2.id || request2._id.toString(),\n        type: formatDocumentType(request2.document_type),\n        purpose: request2.purpose,\n        requestedDate: formatDate(request2.requested_at || request2.created_at),\n        completedDate: request2.completed_at ? formatDate(request2.completed_at) : null,\n        cancelledDate: request2.cancelled_at ? formatDate(request2.cancelled_at) : null,\n        estimatedCompletion: request2.status === \"processing\" && !request2.completed_at ? getEstimatedCompletion(request2.requested_at || request2.created_at) : null,\n        rejectionReason: request2.rejection_reason,\n        adminNote: request2.admin_note,\n        status: request2.status\n      };\n      if (adminView && request2.student) {\n        baseRequest.studentName = `${request2.student.first_name} ${request2.student.last_name}`;\n        baseRequest.studentId = request2.student.account_number;\n        baseRequest.gradeLevel = `Grade ${request2.student.grade_level}`;\n        baseRequest.documentType = formatDocumentType(request2.document_type);\n        baseRequest.requestDate = formatDate(request2.requested_at || request2.created_at);\n      }\n      return baseRequest;\n    });\n    return json({\n      success: true,\n      data: formattedRequests\n    });\n  } catch (error) {\n    console.error(\"Error fetching document requests:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch document requests\"\n    }, { status: 500 });\n  }\n}\nasync function PATCH({ request }) {\n  try {\n    console.log(\"PATCH request received for document requests\");\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const db = await connectToDatabase();\n    const documentRequestsCollection = db.collection(\"document_requests\");\n    const requestBody = await request.json();\n    console.log(\"Request body:\", requestBody);\n    const { id, action } = requestBody;\n    if (!id || !action) {\n      console.log(\"Missing required fields - id:\", id, \"action:\", action);\n      return json({\n        error: \"Request ID and action are required\"\n      }, { status: 400 });\n    }\n    console.log(\"Processing action:\", action, \"for request ID:\", id);\n    const requestId = ObjectId.isValid(id) ? new ObjectId(id) : id;\n    if (action === \"cancel\") {\n      let query = {\n        $or: [{ _id: requestId }, { id }],\n        status: \"pending\"\n      };\n      if (user.account_type !== \"admin\") {\n        query.student_id = user.id;\n      }\n      const result = await documentRequestsCollection.updateOne(\n        query,\n        {\n          $set: {\n            status: \"cancelled\",\n            cancelled_at: /* @__PURE__ */ new Date(),\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      if (result.matchedCount === 0) {\n        return json({\n          error: \"Request not found or cannot be cancelled\"\n        }, { status: 404 });\n      }\n      const updatedRequest = await documentRequestsCollection.findOne({\n        $or: [{ _id: requestId }, { id }]\n      });\n      await logActivityWithUser(user, \"Document Request Cancelled\", `Cancelled document request: ${updatedRequest.document_type}`);\n      const formattedRequest = {\n        id: updatedRequest.id || updatedRequest._id.toString(),\n        type: formatDocumentType(updatedRequest.document_type),\n        purpose: updatedRequest.purpose,\n        requestedDate: formatDate(updatedRequest.requested_at || updatedRequest.created_at),\n        cancelledDate: formatDate(updatedRequest.cancelled_at),\n        status: updatedRequest.status\n      };\n      return json({\n        success: true,\n        data: formattedRequest\n      });\n    }\n    if (action === \"approve\") {\n      if (user.account_type !== \"admin\") {\n        return json({ error: \"Admin access required\" }, { status: 403 });\n      }\n      console.log(\"Processing approve action\");\n      const { admin_note } = requestBody;\n      console.log(\"Admin note:\", admin_note);\n      const result = await documentRequestsCollection.updateOne(\n        {\n          $or: [{ _id: requestId }, { id }],\n          status: \"pending\"\n        },\n        {\n          $set: {\n            status: \"processing\",\n            admin_note: admin_note || \"Approved\",\n            processed_at: /* @__PURE__ */ new Date(),\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      console.log(\"Approve query result:\", result.matchedCount, \"documents matched\");\n      if (result.matchedCount === 0) {\n        return json({\n          error: \"Request not found or cannot be approved\"\n        }, { status: 404 });\n      }\n      const updatedRequest = await documentRequestsCollection.findOne({\n        $or: [{ _id: requestId }, { id }]\n      });\n      await logActivityWithUser(user, \"Document Request Approved\", `Approved document request: ${updatedRequest.document_type}`);\n      const formattedRequest = {\n        id: updatedRequest.id || updatedRequest._id.toString(),\n        type: formatDocumentType(updatedRequest.document_type),\n        purpose: updatedRequest.purpose,\n        requestedDate: formatDate(updatedRequest.requested_at || updatedRequest.created_at),\n        processedDate: formatDate(updatedRequest.processed_at),\n        adminNote: updatedRequest.admin_note,\n        status: updatedRequest.status\n      };\n      return json({\n        success: true,\n        data: formattedRequest\n      });\n    }\n    if (action === \"reject\") {\n      if (user.account_type !== \"admin\") {\n        return json({ error: \"Admin access required\" }, { status: 403 });\n      }\n      console.log(\"Processing reject action\");\n      const { rejection_reason } = requestBody;\n      const rejectionReason = rejection_reason;\n      console.log(\"Rejection reason:\", rejectionReason);\n      if (!rejectionReason || !rejectionReason.trim()) {\n        console.log(\"Rejection reason validation failed\");\n        return json({\n          error: \"Rejection reason is required\"\n        }, { status: 400 });\n      }\n      const result = await documentRequestsCollection.updateOne(\n        {\n          $or: [{ _id: requestId }, { id }],\n          status: \"pending\"\n        },\n        {\n          $set: {\n            status: \"rejected\",\n            rejection_reason: rejectionReason.trim(),\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      console.log(\"Reject query result:\", result.matchedCount, \"documents matched\");\n      if (result.matchedCount === 0) {\n        return json({\n          error: \"Request not found or cannot be rejected\"\n        }, { status: 404 });\n      }\n      const updatedRequest = await documentRequestsCollection.findOne({\n        $or: [{ _id: requestId }, { id }]\n      });\n      await logActivityWithUser(user, \"Document Request Rejected\", `Rejected document request: ${updatedRequest.document_type} - Reason: ${rejectionReason.trim()}`);\n      const formattedRequest = {\n        id: updatedRequest.id || updatedRequest._id.toString(),\n        type: formatDocumentType(updatedRequest.document_type),\n        purpose: updatedRequest.purpose,\n        requestedDate: formatDate(updatedRequest.requested_at || updatedRequest.created_at),\n        rejectionReason: updatedRequest.rejection_reason,\n        status: updatedRequest.status\n      };\n      return json({\n        success: true,\n        data: formattedRequest\n      });\n    }\n    if (action === \"complete\") {\n      if (user.account_type !== \"admin\") {\n        return json({ error: \"Admin access required\" }, { status: 403 });\n      }\n      const result = await documentRequestsCollection.updateOne(\n        {\n          $or: [{ _id: requestId }, { id }],\n          status: \"processing\"\n        },\n        {\n          $set: {\n            status: \"completed\",\n            completed_at: /* @__PURE__ */ new Date(),\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      if (result.matchedCount === 0) {\n        return json({\n          error: \"Request not found or cannot be completed (must be in processing status)\"\n        }, { status: 404 });\n      }\n      const updatedRequest = await documentRequestsCollection.findOne({\n        $or: [{ _id: requestId }, { id }]\n      });\n      await logActivityWithUser(user, \"Document Request Completed\", `Completed document request: ${updatedRequest.document_type}`);\n      const formattedRequest = {\n        id: updatedRequest.id || updatedRequest._id.toString(),\n        type: formatDocumentType(updatedRequest.document_type),\n        purpose: updatedRequest.purpose,\n        requestedDate: formatDate(updatedRequest.requested_at || updatedRequest.created_at),\n        processedDate: formatDate(updatedRequest.processed_at),\n        completedDate: formatDate(updatedRequest.completed_at),\n        adminNote: updatedRequest.admin_note,\n        status: updatedRequest.status\n      };\n      return json({\n        success: true,\n        data: formattedRequest\n      });\n    }\n    return json({\n      error: \"Invalid action\"\n    }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error updating document request:\", error);\n    return json({\n      success: false,\n      error: \"Failed to update document request\"\n    }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    console.log(\"POST request received for document requests\");\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const db = await connectToDatabase();\n    const documentRequestsCollection = db.collection(\"document_requests\");\n    const requestBody = await request.json();\n    console.log(\"Request body:\", requestBody);\n    const { student_id, document_type, purpose } = requestBody;\n    if (!student_id || !document_type || !purpose) {\n      console.log(\"Missing required fields - student_id:\", student_id, \"document_type:\", document_type, \"purpose:\", purpose);\n      return json({\n        error: \"Student ID, document type, and purpose are required\"\n      }, { status: 400 });\n    }\n    if (user.account_type === \"student\" && user.id !== student_id) {\n      return json({ error: \"Students can only create requests for themselves\" }, { status: 403 });\n    }\n    console.log(\"Creating document request for student:\", student_id);\n    const requestId = new ObjectId().toString();\n    const newRequest = {\n      id: requestId,\n      student_id,\n      document_type,\n      purpose: purpose.trim(),\n      status: \"pending\",\n      requested_at: /* @__PURE__ */ new Date(),\n      created_at: /* @__PURE__ */ new Date(),\n      updated_at: /* @__PURE__ */ new Date()\n    };\n    const result = await documentRequestsCollection.insertOne(newRequest);\n    if (!result.insertedId) {\n      return json({\n        error: \"Failed to create document request\"\n      }, { status: 500 });\n    }\n    await logActivityWithUser(user, \"Document Request Created\", `Created document request: ${document_type} for student ${student_id}`);\n    const formattedRequest = {\n      id: newRequest.id,\n      type: formatDocumentType(newRequest.document_type),\n      purpose: newRequest.purpose,\n      requestedDate: formatDate(newRequest.requested_at),\n      estimatedCompletion: getEstimatedCompletion(newRequest.document_type),\n      status: newRequest.status\n    };\n    return json({\n      success: true,\n      data: formattedRequest\n    });\n  } catch (error) {\n    console.error(\"Error creating document request:\", error);\n    return json({\n      success: false,\n      error: \"Failed to create document request\"\n    }, { status: 500 });\n  }\n}\nasync function DELETE({ request }) {\n  try {\n    console.log(\"DELETE request received for document requests\");\n    const user = await getUserFromRequest(request);\n    if (!user) {\n      return json({ error: \"Authentication required\" }, { status: 401 });\n    }\n    const db = await connectToDatabase();\n    const documentRequestsCollection = db.collection(\"document_requests\");\n    const requestBody = await request.json();\n    console.log(\"Request body:\", requestBody);\n    const { id } = requestBody;\n    if (!id) {\n      console.log(\"Missing required field - id:\", id);\n      return json({\n        error: \"Request ID is required\"\n      }, { status: 400 });\n    }\n    console.log(\"Deleting document request with ID:\", id);\n    const requestId = ObjectId.isValid(id) ? new ObjectId(id) : id;\n    const existingRequest = await documentRequestsCollection.findOne({\n      $or: [{ _id: requestId }, { id }]\n    });\n    if (!existingRequest) {\n      return json({\n        error: \"Document request not found\"\n      }, { status: 404 });\n    }\n    if (user.account_type === \"student\" && user.id !== existingRequest.student_id) {\n      return json({ error: \"Students can only delete their own requests\" }, { status: 403 });\n    }\n    if (![\"completed\", \"cancelled\"].includes(existingRequest.status)) {\n      return json({\n        error: \"Only completed or cancelled requests can be deleted\"\n      }, { status: 400 });\n    }\n    const result = await documentRequestsCollection.deleteOne({\n      $or: [{ _id: requestId }, { id }],\n      status: { $in: [\"completed\", \"cancelled\"] }\n    });\n    if (result.deletedCount === 0) {\n      return json({\n        error: \"Request not found or cannot be deleted\"\n      }, { status: 404 });\n    }\n    await logActivityWithUser(user, \"Document Request Deleted\", `Deleted document request: ${existingRequest.document_type} (ID: ${id})`);\n    return json({\n      success: true,\n      message: \"Document request deleted successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error deleting document request:\", error);\n    return json({\n      success: false,\n      error: \"Failed to delete document request\"\n    }, { status: 500 });\n  }\n}\nfunction formatDocumentType(type) {\n  const typeMap = {\n    \"transcript\": \"Transcript\",\n    \"enrollment\": \"Enrollment Certificate\",\n    \"grade-report\": \"Grade Report\",\n    \"diploma\": \"Diploma\",\n    \"certificate\": \"Certificate\"\n  };\n  return typeMap[type] || type;\n}\nfunction formatDate(dateString) {\n  if (!dateString) return null;\n  const date = new Date(dateString);\n  return date.toLocaleDateString(\"en-US\");\n}\nfunction getEstimatedCompletion(requestedDate) {\n  if (!requestedDate) return null;\n  const date = new Date(requestedDate);\n  date.setDate(date.getDate() + 7);\n  return date.toLocaleDateString(\"en-US\");\n}\nexport {\n  DELETE,\n  GET,\n  PATCH,\n  POST\n};\n"],"names":[],"mappings":"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"}