{"version":3,"file":"_server-B7-_0BzL.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/forgot-password/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { c as client } from \"../../../../chunks/db.js\";\nimport crypto from \"crypto\";\nconst EMAIL_REGEX = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nasync function POST({ request }) {\n  try {\n    const { email } = await request.json();\n    if (!email) {\n      return json({ error: \"Email address is required\" }, { status: 400 });\n    }\n    if (!EMAIL_REGEX.test(email)) {\n      return json({ error: \"Invalid email format\" }, { status: 400 });\n    }\n    const db = client.db(process.env.MONGODB_DB_NAME);\n    const usersCollection = db.collection(\"users\");\n    const user = await usersCollection.findOne({\n      email: email.toLowerCase(),\n      $or: [\n        { status: { $exists: false } },\n        { status: \"active\" }\n      ]\n    });\n    if (!user) {\n      return json({\n        success: true,\n        message: \"If an account with this email exists, a password reset code has been sent.\"\n      });\n    }\n    const resetCode = crypto.randomInt(1e5, 999999).toString();\n    const resetToken = crypto.randomBytes(32).toString(\"hex\");\n    const expiresAt = new Date(Date.now() + 15 * 60 * 1e3);\n    await usersCollection.updateOne(\n      { _id: user._id },\n      {\n        $set: {\n          password_reset_code: resetCode,\n          password_reset_token: resetToken,\n          password_reset_expires: expiresAt,\n          password_reset_attempts: 0,\n          updated_at: /* @__PURE__ */ new Date()\n        }\n      }\n    );\n    import(\"../../../../chunks/email-helper.js\").then(({ sendPasswordResetEmail }) => {\n      sendPasswordResetEmail({\n        email: user.email,\n        fullName: user.full_name,\n        resetCode,\n        accountNumber: user.account_number\n      }).catch((error) => {\n        console.error(\"Error sending password reset email:\", error);\n      });\n    });\n    return json({\n      success: true,\n      resetToken,\n      message: \"If an account with this email exists, a password reset code has been sent.\"\n    });\n  } catch (error) {\n    console.error(\"Error in forgot password:\", error);\n    if (error.name === \"MongoNetworkError\" || error.name === \"MongoServerError\") {\n      return json({ error: \"Database connection failed\" }, { status: 503 });\n    }\n    return json({ error: \"Failed to process password reset request\" }, { status: 500 });\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}