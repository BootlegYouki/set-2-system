{"version":3,"file":"_server-CnOcz2pp.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/teacher-sections/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nasync function GET({ url }) {\n  try {\n    const teacherId = url.searchParams.get(\"teacherId\");\n    if (!teacherId) {\n      return json({\n        success: false,\n        error: \"Teacher ID is required\"\n      }, { status: 400 });\n    }\n    const db = await connectToDatabase();\n    const schoolYearSetting = await db.collection(\"admin_settings\").findOne({\n      setting_key: \"current_school_year\"\n    });\n    const schoolYear = url.searchParams.get(\"schoolYear\") || schoolYearSetting?.setting_value || \"2025-2026\";\n    const pipeline = [\n      // Match schedules for the specific teacher and school year\n      {\n        $match: {\n          teacher_id: new ObjectId(teacherId),\n          school_year: schoolYear\n        }\n      },\n      // Lookup section details\n      {\n        $lookup: {\n          from: \"sections\",\n          localField: \"section_id\",\n          foreignField: \"_id\",\n          as: \"section\"\n        }\n      },\n      // Unwind section array\n      {\n        $unwind: \"$section\"\n      },\n      // Match only active sections\n      {\n        $match: {\n          \"section.status\": \"active\"\n        }\n      },\n      // Lookup subject details\n      {\n        $lookup: {\n          from: \"subjects\",\n          localField: \"subject_id\",\n          foreignField: \"_id\",\n          as: \"subject\"\n        }\n      },\n      // Lookup section students\n      {\n        $lookup: {\n          from: \"section_students\",\n          let: { sectionId: \"$section._id\" },\n          pipeline: [\n            {\n              $match: {\n                $expr: {\n                  $and: [\n                    { $eq: [\"$section_id\", \"$$sectionId\"] },\n                    { $eq: [\"$status\", \"active\"] }\n                  ]\n                }\n              }\n            }\n          ],\n          as: \"students\"\n        }\n      },\n      // Group by section to aggregate data\n      {\n        $group: {\n          _id: \"$section._id\",\n          section_name: { $first: \"$section.name\" },\n          grade_level: { $first: \"$section.grade_level\" },\n          school_year: { $first: \"$section.school_year\" },\n          student_count: { $first: { $size: \"$students\" } },\n          subjects: { $addToSet: { $arrayElemAt: [\"$subject.name\", 0] } },\n          subject_count: { $addToSet: \"$subject_id\" }\n        }\n      },\n      // Project final structure\n      {\n        $project: {\n          section_id: \"$_id\",\n          section_name: 1,\n          grade_level: 1,\n          school_year: 1,\n          student_count: 1,\n          subjects: { $filter: { input: \"$subjects\", cond: { $ne: [\"$$this\", null] } } },\n          subject_count: { $size: \"$subject_count\" }\n        }\n      },\n      // Sort by grade level and section name\n      {\n        $sort: {\n          grade_level: 1,\n          section_name: 1\n        }\n      }\n    ];\n    const result = await db.collection(\"schedules\").aggregate(pipeline).toArray();\n    const sectionsByGrade = {};\n    let totalSections = 0;\n    let totalStudents = 0;\n    result.forEach((row) => {\n      const gradeLevel = row.grade_level;\n      if (!sectionsByGrade[gradeLevel]) {\n        sectionsByGrade[gradeLevel] = {\n          yearLevel: gradeLevel,\n          gradeName: `Grade ${gradeLevel}`,\n          sections: []\n        };\n      }\n      sectionsByGrade[gradeLevel].sections.push({\n        id: row.section_id.toString(),\n        name: row.section_name,\n        students: row.student_count || 0,\n        subjects: row.subjects || [],\n        subjectCount: row.subject_count || 0\n      });\n      totalSections++;\n      totalStudents += row.student_count || 0;\n    });\n    const classData = Object.values(sectionsByGrade);\n    const yearLevels = Object.keys(sectionsByGrade).map((level) => parseInt(level));\n    const stats = {\n      yearLevels,\n      totalSections,\n      totalStudents,\n      averagePerSection: totalSections > 0 ? Math.round(totalStudents / totalSections) : 0\n    };\n    return json({\n      success: true,\n      data: {\n        classData,\n        stats\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching teacher sections:\", error);\n    return json({\n      success: false,\n      error: \"Failed to fetch teacher sections\"\n    }, { status: 500 });\n  }\n}\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}