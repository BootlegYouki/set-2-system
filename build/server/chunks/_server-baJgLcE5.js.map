{"version":3,"file":"_server-baJgLcE5.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/change-password/_server.js"],"sourcesContent":["import bcrypt from \"bcrypt\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { g as getUserFromRequest, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nasync function POST(event) {\n  const user = getUserFromRequest(event.request);\n  console.log(\"Password change request - User data:\", user);\n  if (!user) {\n    return new Response(JSON.stringify({ error: \"Unauthorized\" }), {\n      status: 401,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n  try {\n    const { currentPassword, newPassword } = await event.request.json();\n    if (!currentPassword || !newPassword) {\n      return new Response(JSON.stringify({\n        error: \"Current password and new password are required\"\n      }), {\n        status: 400,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n    if (newPassword.length < 8) {\n      return new Response(JSON.stringify({\n        error: \"New password must be at least 8 characters long\"\n      }), {\n        status: 400,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n    const db = await connectToDatabase();\n    const usersCollection = db.collection(\"users\");\n    const userDoc = await usersCollection.findOne({ account_number: user.account_number });\n    if (!userDoc) {\n      return new Response(JSON.stringify({ error: \"User not found\" }), {\n        status: 404,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n    const isCurrentPasswordValid = await bcrypt.compare(currentPassword, userDoc.password_hash);\n    if (!isCurrentPasswordValid) {\n      return new Response(JSON.stringify({\n        error: \"Current password is incorrect\"\n      }), {\n        status: 400,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n    const saltRounds = 12;\n    const newPasswordHash = await bcrypt.hash(newPassword, saltRounds);\n    await usersCollection.updateOne(\n      { account_number: user.account_number },\n      {\n        $set: {\n          password_hash: newPasswordHash,\n          updated_at: /* @__PURE__ */ new Date()\n        }\n      }\n    );\n    await logActivityWithUser(\n      \"password_changed\",\n      \"User changed their password\",\n      user,\n      event.getClientAddress()\n    );\n    return new Response(JSON.stringify({\n      success: true,\n      message: \"Password changed successfully\"\n    }), {\n      status: 200,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  } catch (error) {\n    console.error(\"Error changing password:\", error);\n    return new Response(JSON.stringify({\n      error: \"Internal server error\"\n    }), {\n      status: 500,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}