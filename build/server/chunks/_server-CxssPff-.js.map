{"version":3,"file":"_server-CxssPff-.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/document-requests/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nimport { v as verifyAuth, l as logActivityWithUser } from \"../../../../chunks/auth-helper.js\";\nasync function GET({ url, request }) {\n  try {\n    const authResult = await verifyAuth(request, [\"admin\", \"teacher\"]);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: 401 });\n    }\n    const db = await connectToDatabase();\n    const action = url.searchParams.get(\"action\");\n    switch (action) {\n      case \"all\":\n        const status = url.searchParams.get(\"status\");\n        const documentType = url.searchParams.get(\"documentType\");\n        const gradeLevel = url.searchParams.get(\"gradeLevel\");\n        const searchTerm = url.searchParams.get(\"search\");\n        let query = {};\n        if (status) {\n          query.status = status;\n        }\n        if (documentType) {\n          query.document_type = documentType;\n        }\n        if (gradeLevel) {\n          query.grade_level = gradeLevel.toString();\n        }\n        if (searchTerm) {\n          query.$or = [\n            { full_name: { $regex: searchTerm, $options: \"i\" } },\n            { account_number: { $regex: searchTerm, $options: \"i\" } },\n            { request_id: { $regex: searchTerm, $options: \"i\" } },\n            { document_type: { $regex: searchTerm, $options: \"i\" } }\n          ];\n        }\n        const requests = await db.collection(\"document_requests\").find(query).sort({ submitted_date: -1 }).toArray();\n        const formattedRequests = requests.map((req) => ({\n          id: req._id.toString(),\n          studentId: req.account_number,\n          gradeLevel: `Grade ${req.grade_level}`,\n          section: req.section,\n          studentName: req.full_name,\n          documentType: req.document_type,\n          requestId: req.request_id,\n          submittedDate: formatDate(req.submitted_date),\n          payment: `₱${req.payment_amount}`,\n          paymentStatus: req.payment_status,\n          status: req.status,\n          tentativeDate: req.tentative_date ? formatDateForInput(req.tentative_date) : null,\n          isUrgent: req.is_urgent || false,\n          purpose: req.purpose,\n          dateOfBirth: formatDateDisplay(req.birthdate),\n          processedBy: req.processed_by,\n          processedById: req.processed_by_id\n        }));\n        return json({ success: true, data: formattedRequests });\n      case \"stats\":\n        const stats = await db.collection(\"document_requests\").aggregate([\n          {\n            $group: {\n              _id: \"$status\",\n              count: { $sum: 1 }\n            }\n          }\n        ]).toArray();\n        const statsObj = {\n          on_hold: 0,\n          verifying: 0,\n          processing: 0,\n          for_pickup: 0,\n          released: 0\n        };\n        stats.forEach((stat) => {\n          if (statsObj.hasOwnProperty(stat._id)) {\n            statsObj[stat._id] = stat.count;\n          }\n        });\n        return json({ success: true, data: statsObj });\n      case \"single\":\n        const requestId = url.searchParams.get(\"requestId\");\n        if (!requestId) {\n          return json({ error: \"Request ID is required\" }, { status: 400 });\n        }\n        const request2 = await db.collection(\"document_requests\").findOne({ request_id: requestId });\n        if (!request2) {\n          return json({ error: \"Request not found\" }, { status: 404 });\n        }\n        const formattedRequest = {\n          id: request2._id.toString(),\n          studentId: request2.account_number,\n          gradeLevel: `Grade ${request2.grade_level}`,\n          section: request2.section,\n          studentName: request2.full_name,\n          documentType: request2.document_type,\n          requestId: request2.request_id,\n          submittedDate: formatDate(request2.submitted_date),\n          payment: `₱${request2.payment_amount}`,\n          paymentStatus: request2.payment_status,\n          status: request2.status,\n          tentativeDate: request2.tentative_date ? formatDateForInput(request2.tentative_date) : null,\n          isUrgent: request2.is_urgent || false,\n          purpose: request2.purpose,\n          dateOfBirth: formatDateDisplay(request2.birthdate),\n          processedBy: request2.processed_by,\n          processedById: request2.processed_by_id\n        };\n        return json({ success: true, data: formattedRequest });\n      default:\n        return json({ error: \"Invalid action parameter\" }, { status: 400 });\n    }\n  } catch (error) {\n    console.error(\"Error in /api/document-requests GET:\", error);\n    return json({ error: \"Failed to fetch document requests\" }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    const authResult = await verifyAuth(request, [\"admin\", \"teacher\", \"student\"]);\n    if (!authResult.success) {\n      return json({ error: authResult.error }, { status: 401 });\n    }\n    const user = authResult.user;\n    const db = await connectToDatabase();\n    const data = await request.json();\n    const { action } = data;\n    switch (action) {\n      case \"create\":\n        if (user.account_type === \"student\") {\n          const student = await db.collection(\"users\").findOne({ _id: new ObjectId(user.id) });\n          if (!student) {\n            return json({ error: \"Student not found\" }, { status: 404 });\n          }\n          const lastRequest = await db.collection(\"document_requests\").find().sort({ request_id: -1 }).limit(1).toArray();\n          let nextRequestNumber = 1;\n          if (lastRequest.length > 0) {\n            const lastId = lastRequest[0].request_id;\n            const match = lastId.match(/REQ-(\\d+)-(\\d+)/);\n            if (match) {\n              nextRequestNumber = parseInt(match[2]) + 1;\n            }\n          }\n          const requestId2 = `REQ-${(/* @__PURE__ */ new Date()).getFullYear()}-${String(nextRequestNumber).padStart(4, \"0\")}`;\n          const sectionStudent = await db.collection(\"section_students\").findOne({ student_id: new ObjectId(user.id), status: \"active\" });\n          let sectionName = \"N/A\";\n          if (sectionStudent) {\n            const section = await db.collection(\"sections\").findOne({ _id: sectionStudent.section_id });\n            if (section) {\n              sectionName = section.name;\n            }\n          }\n          const newRequest = {\n            student_id: student._id.toString(),\n            account_number: student.account_number,\n            full_name: student.full_name,\n            grade_level: student.grade_level,\n            section: sectionName,\n            birthdate: student.birthdate,\n            document_type: data.documentType,\n            request_id: requestId2,\n            submitted_date: /* @__PURE__ */ new Date(),\n            payment_amount: data.paymentAmount || 120,\n            payment_status: \"pending\",\n            status: \"on_hold\",\n            tentative_date: null,\n            is_urgent: data.isUrgent || false,\n            purpose: data.purpose,\n            processed_by: null,\n            processed_by_id: null,\n            created_at: /* @__PURE__ */ new Date(),\n            updated_at: /* @__PURE__ */ new Date()\n          };\n          const result = await db.collection(\"document_requests\").insertOne(newRequest);\n          await logActivityWithUser(\n            \"document_request_created\",\n            `Document request ${requestId2} created for ${data.documentType}`,\n            user\n          );\n          return json({\n            success: true,\n            message: \"Document request created successfully\",\n            data: { ...newRequest, id: result.insertedId.toString() }\n          });\n        } else {\n          return json({ error: \"Only students can create requests\" }, { status: 403 });\n        }\n      case \"update\":\n        if (user.account_type !== \"admin\" && user.account_type !== \"teacher\") {\n          return json({ error: \"Permission denied\" }, { status: 403 });\n        }\n        const { requestId, status, tentativeDate, paymentStatus } = data;\n        if (!requestId) {\n          return json({ error: \"Request ID is required\" }, { status: 400 });\n        }\n        const updateData = {\n          updated_at: /* @__PURE__ */ new Date()\n        };\n        if (status) {\n          updateData.status = status;\n          if (status !== \"processing\") {\n            updateData.tentative_date = null;\n          }\n        }\n        if (tentativeDate !== void 0) {\n          updateData.tentative_date = tentativeDate ? new Date(tentativeDate) : null;\n        }\n        if (paymentStatus) {\n          updateData.payment_status = paymentStatus;\n        }\n        const existingRequest = await db.collection(\"document_requests\").findOne({ request_id: requestId });\n        if (existingRequest && !existingRequest.processed_by) {\n          updateData.processed_by = user.name;\n          updateData.processed_by_id = user.id;\n        }\n        const updateResult = await db.collection(\"document_requests\").updateOne({ request_id: requestId }, { $set: updateData });\n        if (updateResult.matchedCount === 0) {\n          return json({ error: \"Request not found\" }, { status: 404 });\n        }\n        await logActivityWithUser(\n          \"document_request_updated\",\n          `Document request ${requestId} updated`,\n          user\n        );\n        return json({ success: true, message: \"Request updated successfully\" });\n      case \"reject\":\n        if (user.account_type !== \"admin\" && user.account_type !== \"teacher\") {\n          return json({ error: \"Permission denied\" }, { status: 403 });\n        }\n        const rejectRequestId = data.requestId;\n        if (!rejectRequestId) {\n          return json({ error: \"Request ID is required\" }, { status: 400 });\n        }\n        const rejectResult = await db.collection(\"document_requests\").updateOne(\n          { request_id: rejectRequestId },\n          {\n            $set: {\n              status: \"rejected\",\n              tentative_date: null,\n              processed_by: user.name,\n              processed_by_id: user.id,\n              updated_at: /* @__PURE__ */ new Date()\n            }\n          }\n        );\n        if (rejectResult.matchedCount === 0) {\n          return json({ error: \"Request not found\" }, { status: 404 });\n        }\n        await logActivityWithUser(\n          \"document_request_rejected\",\n          `Document request ${rejectRequestId} rejected`,\n          user\n        );\n        return json({ success: true, message: \"Request rejected successfully\" });\n      default:\n        return json({ error: \"Invalid action\" }, { status: 400 });\n    }\n  } catch (error) {\n    console.error(\"Error in /api/document-requests POST:\", error);\n    return json({ error: \"Failed to process request\" }, { status: 500 });\n  }\n}\nfunction formatDate(dateString) {\n  if (!dateString) return \"N/A\";\n  const date = new Date(dateString);\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const year = date.getFullYear();\n  return `${month}/${day}/${year}`;\n}\nfunction formatDateForInput(dateString) {\n  if (!dateString) return null;\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}\nfunction formatDateDisplay(dateString) {\n  if (!dateString) return \"N/A\";\n  const date = new Date(dateString);\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return date.toLocaleDateString(\"en-US\", options);\n}\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":";;;;;;AAIA,eAAe,GAAG,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE;AACrC,EAAE,IAAI;AACN,IAAI,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACtE,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AAC7B,MAAM,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC/D,IAAI;AACJ,IAAI,MAAM,EAAE,GAAG,MAAM,iBAAiB,EAAE;AACxC,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjD,IAAI,QAAQ,MAAM;AAClB,MAAM,KAAK,KAAK;AAChB,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC;AACrD,QAAQ,MAAM,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC;AACjE,QAAQ,MAAM,UAAU,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC;AAC7D,QAAQ,MAAM,UAAU,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC;AACzD,QAAQ,IAAI,KAAK,GAAG,EAAE;AACtB,QAAQ,IAAI,MAAM,EAAE;AACpB,UAAU,KAAK,CAAC,MAAM,GAAG,MAAM;AAC/B,QAAQ;AACR,QAAQ,IAAI,YAAY,EAAE;AAC1B,UAAU,KAAK,CAAC,aAAa,GAAG,YAAY;AAC5C,QAAQ;AACR,QAAQ,IAAI,UAAU,EAAE;AACxB,UAAU,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,EAAE;AACnD,QAAQ;AACR,QAAQ,IAAI,UAAU,EAAE;AACxB,UAAU,KAAK,CAAC,GAAG,GAAG;AACtB,YAAY,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;AAChE,YAAY,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;AACrE,YAAY,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;AACjE,YAAY,EAAE,aAAa,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE;AAClE,WAAW;AACX,QAAQ;AACR,QAAQ,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE;AACpH,QAAQ,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AACzD,UAAU,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE;AAChC,UAAU,SAAS,EAAE,GAAG,CAAC,cAAc;AACvC,UAAU,UAAU,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;AAChD,UAAU,OAAO,EAAE,GAAG,CAAC,OAAO;AAC9B,UAAU,WAAW,EAAE,GAAG,CAAC,SAAS;AACpC,UAAU,YAAY,EAAE,GAAG,CAAC,aAAa;AACzC,UAAU,SAAS,EAAE,GAAG,CAAC,UAAU;AACnC,UAAU,aAAa,EAAE,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC;AACvD,UAAU,OAAO,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC;AAC3C,UAAU,aAAa,EAAE,GAAG,CAAC,cAAc;AAC3C,UAAU,MAAM,EAAE,GAAG,CAAC,MAAM;AAC5B,UAAU,aAAa,EAAE,GAAG,CAAC,cAAc,GAAG,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI;AAC3F,UAAU,QAAQ,EAAE,GAAG,CAAC,SAAS,IAAI,KAAK;AAC1C,UAAU,OAAO,EAAE,GAAG,CAAC,OAAO;AAC9B,UAAU,WAAW,EAAE,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC;AACvD,UAAU,WAAW,EAAE,GAAG,CAAC,YAAY;AACvC,UAAU,aAAa,EAAE,GAAG,CAAC;AAC7B,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;AAC/D,MAAM,KAAK,OAAO;AAClB,QAAQ,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC;AACzE,UAAU;AACV,YAAY,MAAM,EAAE;AACpB,cAAc,GAAG,EAAE,SAAS;AAC5B,cAAc,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC;AAC9B;AACA;AACA,SAAS,CAAC,CAAC,OAAO,EAAE;AACpB,QAAQ,MAAM,QAAQ,GAAG;AACzB,UAAU,OAAO,EAAE,CAAC;AACpB,UAAU,SAAS,EAAE,CAAC;AACtB,UAAU,UAAU,EAAE,CAAC;AACvB,UAAU,UAAU,EAAE,CAAC;AACvB,UAAU,QAAQ,EAAE;AACpB,SAAS;AACT,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAChC,UAAU,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACjD,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK;AAC3C,UAAU;AACV,QAAQ,CAAC,CAAC;AACV,QAAQ,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;AACtD,MAAM,KAAK,QAAQ;AACnB,QAAQ,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC;AAC3D,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC3E,QAAQ;AACR,QAAQ,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;AACpG,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACtE,QAAQ;AACR,QAAQ,MAAM,gBAAgB,GAAG;AACjC,UAAU,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE;AACrC,UAAU,SAAS,EAAE,QAAQ,CAAC,cAAc;AAC5C,UAAU,UAAU,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;AACrD,UAAU,OAAO,EAAE,QAAQ,CAAC,OAAO;AACnC,UAAU,WAAW,EAAE,QAAQ,CAAC,SAAS;AACzC,UAAU,YAAY,EAAE,QAAQ,CAAC,aAAa;AAC9C,UAAU,SAAS,EAAE,QAAQ,CAAC,UAAU;AACxC,UAAU,aAAa,EAAE,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC;AAC5D,UAAU,OAAO,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;AAChD,UAAU,aAAa,EAAE,QAAQ,CAAC,cAAc;AAChD,UAAU,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,UAAU,aAAa,EAAE,QAAQ,CAAC,cAAc,GAAG,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI;AACrG,UAAU,QAAQ,EAAE,QAAQ,CAAC,SAAS,IAAI,KAAK;AAC/C,UAAU,OAAO,EAAE,QAAQ,CAAC,OAAO;AACnC,UAAU,WAAW,EAAE,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC5D,UAAU,WAAW,EAAE,QAAQ,CAAC,YAAY;AAC5C,UAAU,aAAa,EAAE,QAAQ,CAAC;AAClC,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;AAC9D,MAAM;AACN,QAAQ,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC3E;AACA,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC;AAChE,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAChF,EAAE;AACF;AACA,eAAe,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE;AACjC,EAAE,IAAI;AACN,IAAI,MAAM,UAAU,GAAG,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACjF,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AAC7B,MAAM,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC/D,IAAI;AACJ,IAAI,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI;AAChC,IAAI,MAAM,EAAE,GAAG,MAAM,iBAAiB,EAAE;AACxC,IAAI,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE;AACrC,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI;AAC3B,IAAI,QAAQ,MAAM;AAClB,MAAM,KAAK,QAAQ;AACnB,QAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AAC7C,UAAU,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;AAC9F,UAAU,IAAI,CAAC,OAAO,EAAE;AACxB,YAAY,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACxE,UAAU;AACV,UAAU,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AACzH,UAAU,IAAI,iBAAiB,GAAG,CAAC;AACnC,UAAU,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,YAAY,MAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU;AACpD,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC;AACzD,YAAY,IAAI,KAAK,EAAE;AACvB,cAAc,iBAAiB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACxD,YAAY;AACZ,UAAU;AACV,UAAU,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE,iBAAiB,IAAI,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC9H,UAAU,MAAM,cAAc,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;AACzI,UAAU,IAAI,WAAW,GAAG,KAAK;AACjC,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,CAAC,UAAU,EAAE,CAAC;AACvG,YAAY,IAAI,OAAO,EAAE;AACzB,cAAc,WAAW,GAAG,OAAO,CAAC,IAAI;AACxC,YAAY;AACZ,UAAU;AACV,UAAU,MAAM,UAAU,GAAG;AAC7B,YAAY,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;AAC9C,YAAY,cAAc,EAAE,OAAO,CAAC,cAAc;AAClD,YAAY,SAAS,EAAE,OAAO,CAAC,SAAS;AACxC,YAAY,WAAW,EAAE,OAAO,CAAC,WAAW;AAC5C,YAAY,OAAO,EAAE,WAAW;AAChC,YAAY,SAAS,EAAE,OAAO,CAAC,SAAS;AACxC,YAAY,aAAa,EAAE,IAAI,CAAC,YAAY;AAC5C,YAAY,UAAU,EAAE,UAAU;AAClC,YAAY,cAAc,kBAAkB,IAAI,IAAI,EAAE;AACtD,YAAY,cAAc,EAAE,IAAI,CAAC,aAAa,IAAI,GAAG;AACrD,YAAY,cAAc,EAAE,SAAS;AACrC,YAAY,MAAM,EAAE,SAAS;AAC7B,YAAY,cAAc,EAAE,IAAI;AAChC,YAAY,SAAS,EAAE,IAAI,CAAC,QAAQ,IAAI,KAAK;AAC7C,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;AACjC,YAAY,YAAY,EAAE,IAAI;AAC9B,YAAY,eAAe,EAAE,IAAI;AACjC,YAAY,UAAU,kBAAkB,IAAI,IAAI,EAAE;AAClD,YAAY,UAAU,kBAAkB,IAAI,IAAI;AAChD,WAAW;AACX,UAAU,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC;AACvF,UAAU,MAAM,mBAAmB;AACnC,YAAY,0BAA0B;AACtC,YAAY,CAAC,iBAAiB,EAAE,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7E,YAAY;AACZ,WAAW;AACX,UAAU,OAAO,IAAI,CAAC;AACtB,YAAY,OAAO,EAAE,IAAI;AACzB,YAAY,OAAO,EAAE,uCAAuC;AAC5D,YAAY,IAAI,EAAE,EAAE,GAAG,UAAU,EAAE,EAAE,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE;AACnE,WAAW,CAAC;AACZ,QAAQ,CAAC,MAAM;AACf,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mCAAmC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACtF,QAAQ;AACR,MAAM,KAAK,QAAQ;AACnB,QAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AAC9E,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACtE,QAAQ;AACR,QAAQ,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,IAAI;AACxE,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC3E,QAAQ;AACR,QAAQ,MAAM,UAAU,GAAG;AAC3B,UAAU,UAAU,kBAAkB,IAAI,IAAI;AAC9C,SAAS;AACT,QAAQ,IAAI,MAAM,EAAE;AACpB,UAAU,UAAU,CAAC,MAAM,GAAG,MAAM;AACpC,UAAU,IAAI,MAAM,KAAK,YAAY,EAAE;AACvC,YAAY,UAAU,CAAC,cAAc,GAAG,IAAI;AAC5C,UAAU;AACV,QAAQ;AACR,QAAQ,IAAI,aAAa,KAAK,KAAK,CAAC,EAAE;AACtC,UAAU,UAAU,CAAC,cAAc,GAAG,aAAa,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI;AACpF,QAAQ;AACR,QAAQ,IAAI,aAAa,EAAE;AAC3B,UAAU,UAAU,CAAC,cAAc,GAAG,aAAa;AACnD,QAAQ;AACR,QAAQ,MAAM,eAAe,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;AAC3G,QAAQ,IAAI,eAAe,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;AAC9D,UAAU,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI;AAC7C,UAAU,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE;AAC9C,QAAQ;AACR,QAAQ,MAAM,YAAY,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;AAChI,QAAQ,IAAI,YAAY,CAAC,YAAY,KAAK,CAAC,EAAE;AAC7C,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACtE,QAAQ;AACR,QAAQ,MAAM,mBAAmB;AACjC,UAAU,0BAA0B;AACpC,UAAU,CAAC,iBAAiB,EAAE,SAAS,CAAC,QAAQ,CAAC;AACjD,UAAU;AACV,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC;AAC/E,MAAM,KAAK,QAAQ;AACnB,QAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AAC9E,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACtE,QAAQ;AACR,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS;AAC9C,QAAQ,IAAI,CAAC,eAAe,EAAE;AAC9B,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC3E,QAAQ;AACR,QAAQ,MAAM,YAAY,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,SAAS;AAC/E,UAAU,EAAE,UAAU,EAAE,eAAe,EAAE;AACzC,UAAU;AACV,YAAY,IAAI,EAAE;AAClB,cAAc,MAAM,EAAE,UAAU;AAChC,cAAc,cAAc,EAAE,IAAI;AAClC,cAAc,YAAY,EAAE,IAAI,CAAC,IAAI;AACrC,cAAc,eAAe,EAAE,IAAI,CAAC,EAAE;AACtC,cAAc,UAAU,kBAAkB,IAAI,IAAI;AAClD;AACA;AACA,SAAS;AACT,QAAQ,IAAI,YAAY,CAAC,YAAY,KAAK,CAAC,EAAE;AAC7C,UAAU,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACtE,QAAQ;AACR,QAAQ,MAAM,mBAAmB;AACjC,UAAU,2BAA2B;AACrC,UAAU,CAAC,iBAAiB,EAAE,eAAe,CAAC,SAAS,CAAC;AACxD,UAAU;AACV,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC;AAChF,MAAM;AACN,QAAQ,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACjE;AACA,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC;AACjE,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACxE,EAAE;AACF;AACA,SAAS,UAAU,CAAC,UAAU,EAAE;AAChC,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,KAAK;AAC/B,EAAE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC;AACnC,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5D,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACrD,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE;AACjC,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAClC;AACA,SAAS,kBAAkB,CAAC,UAAU,EAAE;AACxC,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,IAAI;AAC9B,EAAE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC;AACnC,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE;AACjC,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5D,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACrD,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAClC;AACA,SAAS,iBAAiB,CAAC,UAAU,EAAE;AACvC,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,KAAK;AAC/B,EAAE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC;AACnC,EAAE,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE;AACpE,EAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC;AAClD;;;;"}