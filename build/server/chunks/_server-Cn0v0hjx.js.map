{"version":3,"file":"_server-Cn0v0hjx.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/teacher-advisory/_server.js"],"sourcesContent":["import { json } from \"@sveltejs/kit\";\nimport { a as connectToDatabase } from \"../../../../chunks/db.js\";\nimport { ObjectId } from \"mongodb\";\nimport { f as formatTeacherName, a as createGradeVerificationNotification, b as createBulkGradeVerificationNotifications } from \"../../../../chunks/notification-helper.js\";\nasync function getCurrentSchoolYear(db) {\n  try {\n    const schoolYearSetting = await db.collection(\"admin_settings\").findOne({\n      setting_key: \"current_school_year\"\n    });\n    return schoolYearSetting?.setting_value || \"2025-2026\";\n  } catch (error) {\n    console.error(\"Error fetching current school year:\", error);\n    return \"2025-2026\";\n  }\n}\nasync function GET({ request, url }) {\n  try {\n    const db = await connectToDatabase();\n    const teacherId = url.searchParams.get(\"teacher_id\");\n    const schoolYear = url.searchParams.get(\"school_year\") || await getCurrentSchoolYear(db);\n    const quarter = parseInt(url.searchParams.get(\"quarter\")) || 1;\n    console.log(\"Teacher Advisory API - Parameters:\", { teacherId, schoolYear, quarter });\n    if (!teacherId) {\n      return json({ error: \"Teacher ID is required\" }, { status: 400 });\n    }\n    if (!ObjectId.isValid(teacherId)) {\n      console.error(\"Invalid teacher ID format:\", teacherId);\n      return json({ error: \"Invalid teacher ID format\" }, { status: 400 });\n    }\n    const section = await db.collection(\"sections\").findOne({\n      adviser_id: new ObjectId(teacherId),\n      status: \"active\"\n    });\n    console.log(\"Found section:\", section);\n    if (!section) {\n      return json({\n        success: true,\n        data: {\n          advisoryData: null,\n          students: [],\n          message: \"No advisory section assigned\"\n        }\n      });\n    }\n    console.log(\"Getting section students for section:\", section._id);\n    const sectionStudents = await db.collection(\"section_students\").find({\n      section_id: section._id,\n      status: \"active\"\n    }).toArray();\n    console.log(\"Found section students:\", sectionStudents.length);\n    const studentIds = sectionStudents.map((ss) => ss.student_id);\n    console.log(\"Getting student details for IDs:\", studentIds);\n    const students = await db.collection(\"users\").find({\n      _id: { $in: studentIds },\n      account_type: \"student\",\n      status: \"active\"\n    }).sort({ full_name: 1 }).toArray();\n    console.log(\"Found students:\", students.length);\n    console.log(\"Getting grades for students in section:\", section._id);\n    const gradesData = await db.collection(\"grades\").find({\n      student_id: { $in: studentIds },\n      section_id: section._id,\n      school_year: schoolYear,\n      quarter,\n      submitted_to_adviser: true\n      // Only get grades that have been submitted to adviser\n    }).toArray();\n    console.log(\"Found grades:\", gradesData.length);\n    console.log(\"Getting schedules for section:\", section._id);\n    const schedules = await db.collection(\"schedules\").find({\n      section_id: section._id,\n      school_year: section.school_year\n      // Use section's school year for schedules\n    }).toArray();\n    console.log(\"Found schedules:\", schedules.length);\n    const subjectIds = [...new Set(schedules.map((s) => s.subject_id))];\n    console.log(\"Getting subjects for IDs:\", subjectIds);\n    const subjects = await db.collection(\"subjects\").find({\n      _id: { $in: subjectIds }\n    }).toArray();\n    const teacherIds = [...new Set(schedules.map((s) => s.teacher_id))];\n    const teachers = await db.collection(\"users\").find({\n      _id: { $in: teacherIds },\n      account_type: \"teacher\"\n    }).toArray();\n    const subjectTeacherMap = {};\n    schedules.forEach((schedule) => {\n      const teacher2 = teachers.find((t) => t._id.toString() === schedule.teacher_id.toString());\n      if (teacher2) {\n        subjectTeacherMap[schedule.subject_id.toString()] = teacher2.full_name;\n      }\n    });\n    console.log(\"Found subjects:\", subjects.length);\n    console.log(\"Subject-teacher mapping:\", subjectTeacherMap);\n    console.log(\"Processing students with grades...\");\n    const studentsWithGrades = students.map((student) => {\n      console.log(\"Processing student:\", student.full_name);\n      const studentGrades = gradesData.filter(\n        (g) => g.student_id.toString() === student._id.toString()\n      );\n      console.log(\"Student grades found:\", studentGrades.length);\n      const subjectGrades = subjects.map((subject) => {\n        const subjectGrade = studentGrades.find(\n          (g) => g.subject_id.toString() === subject._id.toString()\n        );\n        console.log(`Subject ${subject.name}: grade found =`, !!subjectGrade);\n        const isSubmittedToAdviser = subjectGrade?.submitted_to_adviser || false;\n        console.log(`Subject ${subject.name}: submitted to adviser =`, isSubmittedToAdviser);\n        return {\n          subject_id: subject._id,\n          subject_name: subject.name,\n          subject_code: subject.code,\n          teacher_name: subjectTeacherMap[subject._id.toString()] || \"Unknown Teacher\",\n          averages: isSubmittedToAdviser ? subjectGrade?.averages || {\n            written_work: 0,\n            performance_tasks: 0,\n            quarterly_assessment: 0,\n            final_grade: 0\n          } : {\n            written_work: null,\n            performance_tasks: null,\n            quarterly_assessment: null,\n            final_grade: null\n          },\n          verified: subjectGrade?.verified || false,\n          verified_at: subjectGrade?.verified_at || null,\n          submitted_to_adviser: isSubmittedToAdviser,\n          submitted_at: subjectGrade?.submitted_at || null,\n          submitted_by: subjectGrade?.submitted_by || null,\n          grade_counts: isSubmittedToAdviser ? {\n            written_work: subjectGrade?.written_work?.length || 0,\n            performance_tasks: subjectGrade?.performance_tasks?.length || 0,\n            quarterly_assessment: subjectGrade?.quarterly_assessment?.length || 0\n          } : {\n            written_work: 0,\n            performance_tasks: 0,\n            quarterly_assessment: 0\n          }\n        };\n      });\n      console.log(\"Subject grades processed:\", subjectGrades.length);\n      const validFinalGrades = subjectGrades.map((sg) => sg.averages.final_grade).filter((grade) => grade !== null && grade > 0);\n      const overallAverage = validFinalGrades.length > 0 ? Math.round(validFinalGrades.reduce((sum, grade) => sum + grade, 0) / validFinalGrades.length * 100) / 100 : null;\n      const allGradesVerified = subjectGrades.length > 0 && subjectGrades.every((sg) => sg.verified);\n      return {\n        id: student._id,\n        name: student.full_name,\n        student_number: student.account_number,\n        grade_level: student.grade_level,\n        subjects: subjectGrades,\n        overall_average: overallAverage,\n        grades_verified: allGradesVerified,\n        total_subjects: subjects.length\n      };\n    });\n    const validAverages = studentsWithGrades.map((s) => s.overall_average).filter((avg) => avg !== null && avg > 0);\n    const classAverage = validAverages.length > 0 ? Math.round(validAverages.reduce((sum, avg) => sum + avg, 0) / validAverages.length * 100) / 100 : null;\n    const room = section.room_id ? await db.collection(\"rooms\").findOne({\n      _id: section.room_id\n    }) : null;\n    const teacher = await db.collection(\"users\").findOne({\n      _id: new ObjectId(teacherId),\n      account_type: \"teacher\"\n    });\n    const advisoryData = {\n      section_id: section._id,\n      sectionName: section.name,\n      gradeLevel: section.grade_level,\n      schoolYear: section.school_year,\n      roomName: room ? room.name : \"No room assigned\",\n      building: room?.building || \"\",\n      floor: room?.floor || \"\",\n      totalStudents: students.length,\n      averageGrade: classAverage,\n      subjectsCount: subjects.length,\n      quarter,\n      teacherName: teacher ? teacher.full_name : \"Unknown Teacher\",\n      submittedDate: (/* @__PURE__ */ new Date()).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n      })\n    };\n    return json({\n      success: true,\n      data: {\n        advisoryData,\n        students: studentsWithGrades\n      }\n    });\n  } catch (error) {\n    console.error(\"Error in teacher-advisory GET:\", error);\n    console.error(\"Error stack:\", error.stack);\n    console.error(\"Error message:\", error.message);\n    return json({\n      success: false,\n      error: \"Internal server error\",\n      details: error.message\n    }, { status: 500 });\n  }\n}\nasync function POST({ request }) {\n  try {\n    const db = await connectToDatabase();\n    const body = await request.json();\n    const { action } = body;\n    if (action === \"verify_student_grades\") {\n      const {\n        student_id,\n        section_id,\n        teacher_id,\n        quarter = 1,\n        verified = true\n      } = body;\n      const school_year = body.school_year || await getCurrentSchoolYear(db);\n      if (!student_id || !section_id || !teacher_id) {\n        return json({ error: \"Missing required fields\" }, { status: 400 });\n      }\n      const teacher = await db.collection(\"users\").findOne({\n        _id: new ObjectId(teacher_id)\n      }, { projection: { full_name: 1, gender: 1 } });\n      const teacherName = teacher ? formatTeacherName(teacher.full_name, teacher.gender) : \"Your teacher\";\n      const result = await db.collection(\"grades\").updateMany(\n        {\n          student_id: new ObjectId(student_id),\n          section_id: new ObjectId(section_id),\n          school_year,\n          quarter\n        },\n        {\n          $set: {\n            verified,\n            verified_at: verified ? /* @__PURE__ */ new Date() : null,\n            verified_by: verified ? new ObjectId(teacher_id) : null,\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      if (verified && result.modifiedCount > 0) {\n        const verifiedGrades = await db.collection(\"grades\").find({\n          student_id: new ObjectId(student_id),\n          section_id: new ObjectId(section_id),\n          school_year,\n          quarter,\n          verified: true\n        }).toArray();\n        const subjectIds = verifiedGrades.map((grade) => grade.subject_id);\n        const subjects = await db.collection(\"subjects\").find({\n          _id: { $in: subjectIds }\n        }).toArray();\n        for (const subject of subjects) {\n          await createGradeVerificationNotification(\n            db,\n            student_id,\n            teacherName,\n            subject.name\n          );\n        }\n      }\n      return json({\n        success: true,\n        message: verified ? \"Student grades verified successfully\" : \"Student grades unverified successfully\",\n        modified_count: result.modifiedCount\n      });\n    }\n    if (action === \"verify_all_grades\") {\n      const {\n        section_id,\n        teacher_id,\n        quarter = 1,\n        verified = true\n      } = body;\n      const school_year = body.school_year || await getCurrentSchoolYear(db);\n      if (!section_id || !teacher_id) {\n        return json({ error: \"Missing required fields\" }, { status: 400 });\n      }\n      const teacher = await db.collection(\"users\").findOne({\n        _id: new ObjectId(teacher_id)\n      }, { projection: { full_name: 1, gender: 1 } });\n      const teacherName = teacher ? formatTeacherName(teacher.full_name, teacher.gender) : \"Your teacher\";\n      const studentsInSection = await db.collection(\"grades\").distinct(\"student_id\", {\n        section_id: new ObjectId(section_id),\n        school_year,\n        quarter\n      });\n      const result = await db.collection(\"grades\").updateMany(\n        {\n          section_id: new ObjectId(section_id),\n          school_year,\n          quarter\n        },\n        {\n          $set: {\n            verified,\n            verified_at: verified ? /* @__PURE__ */ new Date() : null,\n            verified_by: verified ? new ObjectId(teacher_id) : null,\n            updated_at: /* @__PURE__ */ new Date()\n          }\n        }\n      );\n      if (verified && result.modifiedCount > 0 && studentsInSection.length > 0) {\n        const verifiedGrades = await db.collection(\"grades\").find({\n          section_id: new ObjectId(section_id),\n          school_year,\n          quarter,\n          verified: true\n        }).toArray();\n        const uniqueSubjectIds = [...new Set(verifiedGrades.map((grade) => grade.subject_id.toString()))];\n        const subjects = await db.collection(\"subjects\").find({\n          _id: { $in: uniqueSubjectIds.map((id) => new ObjectId(id)) }\n        }).toArray();\n        for (const subject of subjects) {\n          await createBulkGradeVerificationNotifications(\n            db,\n            studentsInSection.map((id) => id.toString()),\n            teacherName,\n            subject.name\n          );\n        }\n      }\n      return json({\n        success: true,\n        message: verified ? \"All grades verified successfully\" : \"All grades unverified successfully\",\n        modified_count: result.modifiedCount\n      });\n    }\n    return json({ error: \"Invalid action\" }, { status: 400 });\n  } catch (error) {\n    console.error(\"Error in teacher-advisory POST:\", error);\n    return json({\n      success: false,\n      error: \"Internal server error\"\n    }, { status: 500 });\n  }\n}\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}